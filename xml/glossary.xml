<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-daps:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE glossary PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "IGNORE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]><!--taroth 2012-07-05: TODO - check with cthiel/pete if it should be 
    "SUSE Cloud ...Node" -->
<!--taroth 2012-07-19: TODo - add roles such as cloud operator, admin, user?-->
<!--taroth 2012-07-25: add terms like "ephemeral disk space" or "snapshot"?-->

<!--Volume group: A virtual disk consisting of aggregated physical volumes. 
VGs can be logically partitioned into LVs.

Logical volume: Acts as a virtual disk partition. After creating a VG you can 
create LVs in that VG. They can be used as raw block devices, swap devices, or 
for creating a (mountable) file system just like disk partitions.-->
<glossary id="gl.cloud">
 <title>Terminology</title>
 <glossentry>
  <glossterm>&admserv;</glossterm>
  <glossdef>
   <para> Also called &crow; Administration Node. Manages all other nodes.
    It assigns IP addresses to them, PXE boots them, configures them, and
    provides them the necessary software for their roles. To provide these
    services, the &admserv; runs &crow;, &chef;, DHCP, TFTP, NTP,
    and other services. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Amazon Elastic Block Store (EBS)</glossterm>
  <glossdef>
   <para> Block level storage volumes for use with Amazon EC2 instances. One or
    more storage volumes can be attached to running instances and persist after
    the instance has been shut down. It is possible to boot from an EBS volume.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Amazon Elastic Compute Cloud (EC2)</glossterm>
  <glossdef>
   <para> Amazon's virtual computing environment. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Amazon Machine Image (AMI)</glossterm>
  <glossdef>
   <para> A virtual machine that can be created and customized by a user. AMIs
    can be identified by an ID prefixed with <literal>ami-</literal>. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Amazon Simple Storage Service (S3)</glossterm>
  <glossdef>
   <para> A storage for the Internet that can be used to store and retrieve data
    on the Web. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Amazon Web Services (AWS)</glossterm>
  <glossdef>
   <para> A collection of remote computing services (including Amazon EC2,
    Amazon S3, and more) that together make up Amazon's cloud computing
    platform. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&barcl;</glossterm>
  <glossdef>
   <para> A set of &chef; cookbooks, templates and other logic. Used to
    apply a particular role to individual nodes or a set of nodes.
    <!--Crowbar modularization. Individual layers of the deployment infrastructure
   are packaged separately and can be integrated before, while or after installing 
   Crowbar.--></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&chef;</glossterm>
  <glossdef>
   <para> An automated configuration management platform for deployment of your
    entire cloud infrastructure. The &chef; server manages many of the
    software packages and allows the easy changing of nodes. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Ceph</glossterm>
  <glossdef>
   <para> A massively scalable, open source, distributed storage system. It
    consists of an object store, a block store, and a POSIX-compliant
    distributed file system. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&compnode;</glossterm>
  <glossdef>
   <para> Node within a &cloud;. A physical server running an Hypervisor. A
    &compnode; is a host for guest virtual machines (VMs) that are deployed
    in the cloud.It starts virtual machines on demand using
     <literal>nova-compute</literal>. To split VM load across more than one
    server, a cloud should contain multiple &compnode;s. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&contrnode;</glossterm>
  <glossdef>
   <para> Node within a &cloud;. The &contrnode; is configured through
    the &admserv; and registers with &admserv; for all required
    software. Hosts the &ostack; API endpoints and the &ostack;
    scheduler and runs the <literal>nova</literal> services&mdash;except for
     <literal>nova-compute</literal>, which is run on the &compnode;s. The
    &contrnode; coordinates everything about cloud VMs: Like a central
    communication centre he receives all requests (for example, if a user wants
    to start or stop a VM) and communicates with the &compnode;s to
    coordinate fulfillment of the request. A cloud can contain multiple
    &contrnode;. <remark>taroth 2012-07-05: TODO - terminology: Controller
     Node or Control Node? check with pchadwick and cthiel!</remark>
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Cookbook</glossterm>
  <glossdef>
   <para> A collection of &chef; recipes which deploy a software stack or
    functionality. The unit of distribution for &chef;. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&crow;</glossterm>
  <glossdef>
   <para> Bare-metal installer and an extension of &chef; server. The
    primary function of &crow; is to get new hardware into a state where it
    can be managed by &chef;. That means: Setting up BIOS and RAID, network,
    installing a basic operating system, and setting up services like DNS, NTP,
    and DHCP. The &crow; server manages all nodes, supplying configuration
    of hardware and software. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Flavor</glossterm>
  <glossdef>
   <para> The compute, memory and storage capacity of <literal>nova</literal>
    computing instances (in terms of virtual CPUs, RAM, etc.). </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Hybrid Cloud</glossterm>
  <glossdef>
   <para> One of several deployment models for a cloud infrastructure. A
    composition of both public and private clouds that remain unique entities,
    but are bound together by standardized technology for enabling data and
    application portability. <remark>taroth 2012-06-28: another definition of
     "hybrid cloud" is the combination of both virtual and physical machines,
     but I don't think we use the term in that sense - check again</remark>
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Infrastructure-as-a-Service (IaaS)</glossterm>
  <glossdef>
   <para> A service model of cloud computing where processing, storage,
    networks, and other fundamental computing resources are rented over the
    Internet. It allows the customer to deploy and run arbitrary software,
    including operating systems and applications. The customer has control over
    operating systems, storage, and deployed applications but does not control
    the underlying cloud infrastructure. Housing and maintaining it is in the
    responsibility of the service provider. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Instance</glossterm>
  <glossdef>
   <para>A virtual machine that runs inside the cloud.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Node</glossterm>
  <glossdef>
   <para> A (physical) server that is managed by &crow;. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack;</glossterm>
  <glossdef>
   <para> A collection of open source software to build and manage public and
    private clouds. Its components are designed to work together to provide
    Infrastructure as a Service and a massively scalable cloud computing
    software. </para>
   <para> At the same time, &ostack; is also a community and a project.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Compute (Nova)</glossterm>
  <glossdef>
   <para> One of the core &ostack; components and services. It is a cloud
    computing fabric controller and as such, the main part of an IaaS system. It
    provides virtual machines on demand. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Dashboard (Horizon)</glossterm>
  <glossdef>
   <para> One of the core &ostack; components or services. It provides a
    modular Web interface for &ostack; services and allows end users and
    administrators to interact with each &ostack; service through the
    service's API. </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.keystone">
  <glossterm>&ostack; Identity (Keystone)</glossterm>
  <glossdef>
   <para> One of the core &ostack; components or services. It provides
    authentication and authorization for all &ostack; services. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Image (Glance)</glossterm>
  <glossdef>
   <para> One of the core &ostack; components or services. It provides
    discovery, registration, and delivery services for virtual disk images.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Network (Quantum)</glossterm>
  <glossdef>
   <para> One of the core &ostack; components or services. It provides
     <quote>network connectivity as a service</quote> between interface devices
    (for example, vNICs) managed by other &ostack; services (for example,
     <literal>nova</literal>). Allows users to create their own networks and
    attach interfaces to them. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Object Store (Swift)</glossterm>
  <glossdef>
   <para> One of the core &ostack; components or services. Allows to store
    and retrieve files while providing built-in redundancy and fail-over. Can be
    used for backing up and archiving data, streaming data to a user's Web
    browser, or developing new applications with data storage integration.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Service</glossterm>
  <glossdef>
   <para> A collection of Linux services (or daemons) that work together to
    provide core functionality within the &ostack; project, like storing
    objects, providing virtual servers or authentication and authorization. All
    services have code names (noted in brackets) which are also used in
    configuration files and command line programs that belong to the service.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Platform-as-a-Service (PaaS)</glossterm>
  <glossdef>
   <para> A service model of cloud computing where a computing platform and
    cloud-based application development tools are rented over the Internet. The
    customer controls software deployment and configuration settings, but not
    the underlying cloud infrastructure including network, servers, operating
    systems, or storage. </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.proposal">
  <glossterm>Proposal</glossterm>
  <glossdef>
   <para> Special configuration for a &barcl;. It includes
    &barcl;-specific settings, and a list of nodes to which the proposal
    should be applied. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Private Cloud</glossterm>
  <glossdef>
   <para> One of several deployment models for a cloud infrastructure. The
    infrastructure is operated exclusively for a single organization and may
    exist on or off premises. The cloud is owned and managed by the organization
    itself, by a third-party or a combination of both. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Public Cloud</glossterm>
  <glossdef>
   <para> One of several deployment models for a cloud infrastructure. The cloud
    infrastructure is designed for use by the general public and exists on the
    premises of the cloud provider. Services like applications, storage, and
    other resources are made available to the general public for free or are
    offered on a pay-per-use model. The infrastructure is owned and managed by a
    business, academic, or government organization, or some combination of them.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>qcow (QEMU Copy on Write)</glossterm>
  <glossdef>
   <para>A disk image format supported by the QEMU virtual machine manager. A
     <literal>qcow2</literal> image helps to optimize disk space as it consumes
    disk space only when contents are written on it and grows as data is
    added.</para>
   <para><literal>qcow2</literal> is a more recent version of the
     <literal>qcow</literal> format where a read-only base image is used, and
    all writes are stored to the <literal>qcow2</literal> image.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Quota</glossterm>
  <glossdef>
   <para>Restriction of resources to prevent overconsumption within a cloud. In
    &ostack;, quotas are defined per project and contain multiple
    parameters, such as amount of RAM, number of instances, or number of
    floating IP addresses.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Recipe</glossterm>
  <glossdef>
   <para> A group of &chef; scripts and templates. Recipes are used by
    &chef; to deploy a unit of functionality. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Role</glossterm>
  <glossdef>
   <para> In the &crow;/&chef; context: An instance of a <xref
     linkend="gloss.proposal"/> that is active on a node. </para>
   <para> In the <xref linkend="gloss.keystone"/> context: Concept of
    controlling the actions that a user is allowed to perform.  There are 
    user-specific roles  (sometimes called global roles) and project-specific roles. 
    Therefore, a user’s permissions in a particular project is defined by the 
    intersection of his user-specific and is project-specific roles.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Software-as-a-Service (SaaS)</glossterm>
  <glossdef>
   <para> A service model of cloud computing where applications are hosted by a
    service provider and made available to customers remotely as a Web-based
    service. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&stornode;</glossterm>
  <glossdef>
   <para> Node within a &cloud;. Acts as the controller for cloud-based
    storage. A cloud can contain multiple &stornode;s. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Tenant</glossterm>
  <glossdef>
   <para> A concept in &ostack; Identity. Used to identify a group, an
    organization, or a project. Also called <literal>project</literal>. </para>
  </glossdef>
 </glossentry> 
 <glossentry>
  <glossterm>Security Group</glossterm>
  <glossdef>
   <para>Concept in &ostack; &comp;. A collection of network access
    rules, like firewall policies. The access rules specify which incoming
    network traffic should be delivered to all virtual machines in the group.
    All other incoming traffic is discarded.</para>
   <!--Users can modify rules for a group at any  time. The new rules 
    are automatically enforced for all running instances and
    instances launched from then on.-->
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Volume</glossterm>
  <glossdef>
   <para>Detachable block storage device. Unlike a SAN, it can only be 
    attached to one instance at a time. </para>
  </glossdef>
 </glossentry>
</glossary>
