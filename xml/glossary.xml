<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-daps:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE glossary PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "IGNORE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!--taroth 2013-06-07: more term to add:
      * storage: block level/file level 
    -->
<glossary id="gl.cloud">
 <title>Terminology</title>
 <glossentry>
  <glossterm>&admserv;</glossterm>
  <glossdef>
   <para>
    Also called &crow; Administration Node. Manages all other nodes. It
    assigns IP addresses to them, PXE boots them, configures them, and
    provides them the necessary software for their roles. To provide these
    services, the &admserv; runs &crow;, &chef;, DHCP, TFTP, NTP, and other
    services.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>AMI (Amazon Machine Image)</glossterm>
  <glossdef>
   <para>
    A virtual machine that can be created and customized by a user. AMIs can
    be identified by an ID prefixed with <literal>ami-</literal>.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Availability Zone</glossterm>
  <glossdef>
   <para><remark>taroth 2013-06-12: DEVs, is the following correct?</remark>
   An &ostack; method of aggregating clouds. It enables you to arrange 
   &ostack; Compute hosts into logical groups. It also provides a form of 
   physical isolation and redundancy from other availability zones, for example,
   by using separate power supply or network equipment for each zone.
   A host aggregate may be exposed to users in the form of an availability zone.
   When users provision resources, they can specify from which availability zone
   their instance should be created. 
   <!--This allows cloud consumers to ensure that their application resources are 
   spread across disparate machines to achieve high availability in the event of 
   hardware failure.-->
   <!--When you create a host aggregate, you have the option of providing an 
   availability zone name. If specified, the host aggregate you have created is 
   now available as an availability zone that can be requested.-->
   <!--taroth 2013-06-12: found a lot of helpful details in
   http://russellbryantnet.wordpress.com/2013/05/21/availability-zones-and-host-aggregates-in-openstack-compute-nova/-->
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>AWS (Amazon Web Services)</glossterm>
  <glossdef>
   <para>
    A collection of remote computing services (including Amazon EC2, Amazon
    S3, and others) that together make up Amazon's cloud computing platform.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&barcl;</glossterm>
  <glossdef>
   <para>
    A set of &chef; cookbooks, templates, and other logic. Used to apply a
    particular role to individual nodes or a set of nodes.
<!--Crowbar modularization. Individual layers of the deployment infrastructure
   are packaged separately and can be integrated before, while or after installing 
   Crowbar.--></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Ceilometer</glossterm>
  <glossdef>
   <para>Code name for <xref linkend="gloss.ceilo"></xref>.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Cell</glossterm>
  <glossdef>
   <para><remark>taroth 2013-06-12: DEVs, is the following correct?</remark>
   An &ostack; method of aggregating clouds. Cells provides a new way to 
   scale &comp; deployments, including the ability to have compute clusters (cells) 
   in different geographic locations all under the same &comp; API. This allows for 
   a single API server being used to control access to multiple cloud installations. 
   Cells provide logical partitioning of &comp; resources in a child/parent 
   relationship. 
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&chef;</glossterm>
  <glossdef>
   <para>
    An automated configuration management platform for deployment of your
    entire cloud infrastructure. The &chef; server manages many of the
    software packages and allows the easy changing of nodes.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ceph;</glossterm>
  <glossdef>
   <para>
    A massively scalable, open source, distributed storage system. It
    consists of an object store, a block store, and a POSIX-compliant
    distributed file system.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Cinder</glossterm>
  <glossdef><para>Code name for <xref linkend="gloss.cinder"></xref>.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>cloud-init</glossterm>
  <glossdef>
   <para>A package commonly installed in virtual machine images. It uses the SSH public key to
    initialize an instance after boot.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&compnode;</glossterm>
  <glossdef>
   <para>&ha;
    Node within a &cloud;. A physical server running a Hypervisor. A
    &compnode; is a host for guest virtual machines that are deployed
    in the cloud. It starts virtual machines on demand using
    <literal>nova-compute</literal>. To split virtual machine load across more than one
    server, a cloud should contain multiple &compnode;s.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&contrnode;</glossterm>
  <glossdef>
   <para>
    Node within a &cloud;. The &contrnode; is configured through the
    &admserv; and registers with the &admserv; for all required software.
    Hosts the &ostack; API endpoints and the &ostack; scheduler and runs the
    <literal>nova</literal> services&mdash;except for
    <literal>nova-compute</literal>, which is run on the &compnode;s. The
    &contrnode; coordinates everything about cloud virtual machines: like a central
    communication center it receives all requests (for example, if a user
    wants to start or stop a virtual machine) and communicates with the &compnode;s to
    coordinate fulfillment of the request. A cloud can contain multiple
    &contrnode;s.
    </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Cookbook</glossterm>
  <glossdef>
   <para>
    A collection of &chef; recipes which deploy a software stack or
    functionality. The unit of distribution for &chef;.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&crow;</glossterm>
  <glossdef>
   <para>
    Bare-metal installer and an extension of &chef; server. The primary
    function of &crow; is to get new hardware into a state where it can be
    managed by &chef;. That means: Setting up BIOS and RAID, network,
    installing a basic operating system, and setting up services like DNS,
    NTP, and DHCP. The &crow; server manages all nodes, supplying
    configuration of hardware and software.
   </para>
  </glossdef>
 </glossentry>
  <glossentry>
  <glossterm>EBS (Amazon Elastic Block Store)</glossterm>
  <glossdef>
   <para>
    Block-level storage volumes for use with Amazon EC2 instances. Similar to
    &ostack; cinder.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>EC2 (Amazon Elastic Compute Cloud)</glossterm>
  <glossdef>
   <para>
   A public cloud run by Amazon. It provides similar functionality to &ostack; 
   &comp;.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Ephemeral Disk</glossterm>
  <glossdef>
   <para>
    Ephemeral disks offer machine local disk storage linked to the lifecycle
    of a virtual machine instance. When a virtual machine is terminated, all
    data on the ephemeral disk is lost. Ephemeral disks are not included in
    any snapshots.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.flavor">
  <glossterm>Flavor</glossterm>
  <glossdef>
   <para>
    The compute, memory, and storage capacity of <literal>nova</literal>
    computing instances (in terms of virtual CPUs, RAM, etc.). Flavors can be
    thought of as <quote>templates</quote> for the amount of cloud resources
    that are assigned to an instance.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.IP.float">
  <glossterm>Floating IP Address</glossterm>
  <glossdef>
   <para>An IP address that a &comp; project can associate with a virtual machine. A pool of floating
    IPs is available in &ostack; &comp;, as configured by the cloud operator. After a floating IP address has been
    assigned to an instance, the instance can be reached from outside the cloud by this public IP
    address. Floating IP addresses can be dynamically disassociated and associated with other
    instances. </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.IP.fixed">
  <glossterm>Fixed IP Address</glossterm>
  <glossdef>
   <para>When an instance is launched, it is automatically assigned a fixed (private) IP address, 
    which stays the same  until the instance is explicitly terminated. Private IP addresses are used 
    for communication between instances.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Glance</glossterm>
  <glossdef>
   <para>
   Code name for <xref linkend="gloss.glance"></xref>.
   </para>
  </glossdef>
  </glossentry>
 <glossentry>
 <glossterm>Guest Operating System</glossterm>
 <glossdef>
  <para>
  An instance of an operating system installed on a virtual machine.
  </para>
 </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Heat</glossterm>
  <glossdef>
   <para>
    Code name for <xref linkend="gloss.heat"></xref>.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Horizon</glossterm>
  <glossdef>
   <para>
    Code name for <xref linkend="gloss.horizon"></xref>.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Host</glossterm>
  <glossdef>
   <para>A physical computer. 
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Host Aggregate</glossterm>
  <glossdef>
   <para><remark>taroth 2013-06-12: DEVs, is the following correct?</remark>
   An &ostack; method of aggregating clouds. It enables you to partition 
   &ostack; Compute deployments into logical groups, for example, for load 
   balancing and instance distribution. You can use it to tag a group of hosts 
   with a certain type of capability, and to create or further partition 
   availability zones. The concept of host aggregates is only exposed to cloud 
   administrators</para><!--A host aggregate is a grouping
   of hosts with associated metadata. A host can be in more than one host 
   aggregate.-->
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Hybrid Cloud</glossterm>
  <glossdef>
   <para>
    One of several deployment models for a cloud infrastructure. A
    composition of both public and private clouds that remain unique
    entities, but are bound together by standardized technology for enabling
    data and application portability. Integrating &susestudio; and &susemgr;
    with &cloud; delivers a platform and tools with which to enable enterprise 
    hybrid clouds.
    <remark>taroth 2012-06-28: another definition of
     "hybrid cloud" is the combination of both virtual and physical machines,
     but I don't think we use the term in that sense</remark>
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Hypervisor</glossterm>
  <glossdef>
   <para>A piece of computer software, firmware or hardware that creates and runs virtual machines.
    It arbitrates and controls access of the virtual machines to the underlying hardware. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>IaaS (Infrastructure-as-a-Service)</glossterm>
  <glossdef>
   <para>
    A service model of cloud computing where processing, storage, networks,
    and other fundamental computing resources are rented over the Internet.
    It allows the customer to deploy and run arbitrary software, including
    operating systems and applications. The customer has control over
    operating systems, storage, and deployed applications but does not
    control the underlying cloud infrastructure. Housing and maintaining it
    is in the responsibility of the service provider.
   </para>
  </glossdef>
 </glossentry>
  <glossentry>
  <glossterm>Image</glossterm>
  <glossdef>
   <para>A file that contains a complete Linux virtual machine.</para> 
   &images;
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Instance</glossterm>
  <glossdef>
   <para>
    A virtual machine that runs inside the cloud.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.instsnap">
  <glossterm>Instance Snapshot</glossterm>
  <glossdef>
   <para>
    A point-in-time copy of an instance. It preserves the disk state of a running 
    instance and can be used to launch a new instance or to create a new image 
    based upon the snapshot.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Keypair</glossterm>
  <glossdef>
   <para>Keypairs are SSH credentials that are injected into images when they are launched.</para>
  </glossdef>
 </glossentry>
  <glossentry>
  <glossterm>Keystone</glossterm>
  <glossdef>
   <para>
    Code name for <xref linkend="gloss.keystone"></xref>.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Logical Volume (LV)</glossterm>
  <glossdef>
   <para> Acts as a virtual disk partition. After creating a <xref linkend="gloss.vg"/>, logical
    volumes can be created in that volume group. Logical volumes can be used as raw block devices,
    swap devices, or for creating a (mountable) file system just like disk partitions. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Node</glossterm>
  <glossdef>
   <para>
    A (physical) server that is managed by &crow;.
   </para>
  </glossdef>
 </glossentry>
  <glossentry>
  <glossterm>Nova</glossterm>
  <glossdef>
   <para>Code name for <xref linkend="gloss.nova"></xref>. 
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack;</glossterm>
  <glossdef>
   <para>
    A collection of open source software to build and manage public and
    private clouds. Its components are designed to work together to provide
    Infrastructure as a Service and massively scalable cloud computing
    software.
   </para>
   <para>
    At the same time, &ostack; is also a community and a project.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.cinder">
  <glossterm>&ostack; Block Storage</glossterm>
  <glossdef>
   <para>One of the core &ostack; components and services (code name: 
   <literal>cinder</literal>). It provides persistent block level storage devices 
   for use &ostack; compute instances. The block storage system manages the 
   creation, attaching and detaching of the block devices to servers. 
   <remark>taroth 2013-06-07: DEVs, is the following right?</remark>
   Previous to the &ostack; Grizzly release, the service was part of <literal>nova-volume</literal>
   (block service).
    <!--Block storage volumes are fully integrated into &ostack; Compute
    and the Dashboard allowing for cloud users to manage their own storage
    needs.--></para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.nova">
  <glossterm>&ostack; Compute</glossterm>
  <glossdef>
   <para>
    One of the core &ostack; components and services (code name: <literal>nova</literal>). 
    It is a cloud computing fabric controller and as such, the main part of an 
    IaaS system. It provides virtual machines on demand.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.horizon">
  <glossterm>&ostack; Dashboard</glossterm>
  <glossdef>
   <para>
    One of the core &ostack; components or services (code name: <literal>horizon</literal>). 
    It provides a modular Web interface for &ostack; services and allows end users and
    administrators to interact with each &ostack; service through the
    service's API.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.keystone">
  <glossterm>&ostack; Identity</glossterm>
  <glossdef>
   <para>
    One of the core &ostack; components or services (code name: <literal>keystone</literal>). 
    It provides authentication and authorization for all &ostack; services.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.glance">
  <glossterm>&ostack; Image</glossterm>
  <glossdef>
   <para>
    One of the core &ostack; components or services (code name: 
    <literal>glance</literal>). It provides discovery, registration, and delivery 
    services for virtual disk images.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.ceilo"><!--tech preview Cloud 2.0-->
  <glossterm>&ostack; Metering</glossterm>
  <glossdef>
   <para><remark>taroth 2013-06-07: DEVs, is the following correct?</remark>
    An &ostack; incubation project (code name: <literal>ceilometer</literal>). 
    It is the cloud metering component
    for &ostack;-based clouds. The project aims to provide a unique point of
    contact across all &ostack; core components to acquire measurements for
    customer billing.</para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.quantum">
  <glossterm>&ostack; Networking</glossterm>
  <glossdef>
   <para> One of the core &ostack; components or services (code name:
    <literal>quantum</literal>). It provides <quote>network connectivity as a service</quote>
    between interface devices (for example, vNICs) managed by other &ostack; services (for
    example, &comp;). Allows users to create their own networks and attach
    interfaces to them. </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.swift">
  <glossterm>&ostack; Object Storage</glossterm>
  <glossdef>
   <para> One of the core &ostack; components or services (code name: <literal>swift</literal>).
    Allows to store and retrieve files while providing built-in redundancy and fail-over. Can be
    used for backing up and archiving data, streaming data to a user's Web browser, or developing
    new applications with data storage integration. </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.heat"><!--tech preview Cloud 2.0-->
  <glossterm>&ostack; Orchestration</glossterm>
  <glossdef>
   <para>
    <remark>taroth 2013-06-07: DEVs, is the following correct?</remark>
    An &ostack; incubation project (code name: <literal>heat</literal>). Heat is a 
    service to orchestrate multiple composite cloud applications using file-based 
    or Web-based templates. It contains both a user interface and an API and 
    describes your cloud deployment in a declarative language.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Service</glossterm>
  <glossdef>
   <para>
    A collection of Linux services (or daemons) that work together to
    provide core functionality within the &ostack; project, like storing
    objects, providing virtual servers, or authentication and authorization.
    All services have code names, which are also used in
    configuration files and command line programs that belong to the
    service.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>PaaS (Platform-as-a-Service)</glossterm>
  <glossdef>
   <para>
    A service model of cloud computing where a computing platform and
    cloud-based application development tools are rented over the Internet.
    The customer controls software deployment and configuration settings,
    but not the underlying cloud infrastructure including network, servers,
    operating systems, or storage.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.project">
  <glossterm>Project</glossterm>
  <glossdef>
   <para>
    A concept in &ostack; Identity. Used to identify a group, an
    organization, or a project (or more generically, an individual customer 
    environment in the cloud). Also called <literal>tenant</literal>. The
    term <literal>tenant</literal> is primarily used in the &ostack; command
    line tools, but occasionally also appears in the &cloud; &dash;.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.proposal">
  <glossterm>Proposal</glossterm>
  <glossdef>
   <para>
    Special configuration for a &barcl;. It includes &barcl;-specific
    settings, and a list of nodes to which the proposal should be applied.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Private Cloud</glossterm>
  <glossdef>
   <para>
    One of several deployment models for a cloud infrastructure. The
    infrastructure is operated exclusively for a single organization and may
    exist on or off premises. The cloud is owned and managed by the
    organization itself, by a third party or a combination of both.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Private IP Address</glossterm>
  <glossdef>
   <para>See <xref linkend="gloss.IP.fixed"/>.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Public Cloud</glossterm>
  <glossdef>
   <para>
    One of several deployment models for a cloud infrastructure. The cloud
    infrastructure is designed for use by the general public and exists on
    the premises of the cloud provider. Services like applications, storage,
    and other resources are made available to the general public for free or
    are offered on a pay-per-use model. The infrastructure is owned and
    managed by a business, academic or government organization, or some
    combination of these.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Public IP Address</glossterm>
  <glossdef>
   <para>See <xref linkend="gloss.IP.float"/>.
   </para>
  </glossdef>
 </glossentry>
  <glossentry>
  <glossterm>Quantum</glossterm>
  <glossdef>
   <para>Code name for <xref linkend="gloss.quantum"/>.
    </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>qcow (QEMU Copy on Write)</glossterm>
  <glossdef>
   <para>
    A disk image format supported by the QEMU virtual machine manager. A
    <literal>qcow2</literal> image helps to optimize disk space as it
    consumes disk space only when contents are written on it and grows as
    data is added.
   </para>
   <para>
    <literal>qcow2</literal> is a more recent version of the
    <literal>qcow</literal> format where a read-only base image is used, and
    all writes are stored to the <literal>qcow2</literal> image.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Quota</glossterm>
  <glossdef>
   <para>
    Restriction of resources to prevent overconsumption within a cloud. In
    &ostack;, quotas are defined per project and contain multiple
    parameters, such as amount of RAM, number of instances, or number of
    floating IP addresses.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>RC File  (<filename>openrc.sh</filename>)</glossterm>
  <glossdef>
   <para>Environment file needed for the &ostack; command line
    tools. The RC file is project-specific and contains the credentials used by 
    &ostack; &comp;, &img;, and &ident; services.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Recipe</glossterm>
  <glossdef>
   <para>
    A group of &chef; scripts and templates. Recipes are used by &chef; to
    deploy a unit of functionality.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Region</glossterm>
  <glossdef>
   <para><remark>taroth 2013-06-12: DEVs, is the following correct?</remark>
   An &ostack; method of aggregating clouds. Regions are a robust way to share 
   some infrastructure between &ostack; compute installations, while allowing 
   for a high degree of failure tolerance. Regions have a separate API endpoint 
   per installation.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Role</glossterm>
  <glossdef>
   <para>
    In the &crow;/&chef; context: an instance of a
    <xref linkend="gloss.proposal"/> that is active on a node.
   </para>
   <para>
    In the <xref linkend="gloss.keystone"/> context: concept of controlling
    the actions that a user is allowed to perform.
   </para>
<!--taroth 2012-08-09: just found out that the following concept is 
    obviously no longer valid in Essex, 
    see https://bugs.launchpad.net/openstackbook/+bug/1000345:
    There are user-specific roles (sometimes called global roles) and 
    project-specific roles. Therefore, a user’s permissions in a particular 
    project is defined by the intersection of his user-specific and is 
    project-specific roles.-->
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>S3 (Amazon Simple Storage Service)</glossterm>
  <glossdef>
   <para>
    An object storage by Amazon that can be used to store and retrieve data
    on the Web. Similar in function to &ostack; swift. It can act as a back-end 
    store for glance images.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>SaaS (Software-as-a-Service)</glossterm>
  <glossdef>
   <para>
    A service model of cloud computing where applications are hosted by a
    service provider and made available to customers remotely as a Web-based
    service.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Security Group</glossterm>
  <glossdef>
   <para>
    Concept in &ostack; &comp;. A collection of network access rules, like
    firewall policies. The access rules specify which incoming network
    traffic should be delivered to all virtual machines in the group. All
    other incoming traffic is discarded.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Snapshot</glossterm>
  <glossdef>
   <para>See <xref linkend="gloss.volsnap"></xref> or 
   <xref linkend="gloss.instsnap"></xref>.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&stornode;</glossterm>
  <glossdef>
   <para>
    Node within a &cloud;. Acts as the controller for cloud-based storage. A
    cloud can contain multiple &stornode;s.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&cloud; Administrator</glossterm>
  <glossdef>
   <para>User role in &productname;. Manages projects, users, images, flavors, 
    and quotas within &productname;.
   </para>
  </glossdef>
 </glossentry>
  <glossentry>
  <glossterm>&cloud; &dash;</glossterm>
  <glossdef>
   <para>&dash-descr-short;
   </para>
  </glossdef>
  </glossentry>
 <glossentry>
 <glossterm>&cloud; Operator</glossterm>
  <glossdef>
   <para>User role in &productname;. Installs and deploys &productname;.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&cloud; User</glossterm>
  <glossdef>
   <para>User role in &productname;. End-user who launches and manages instances,
   can create snapshots, and use volumes for persistent storage within 
   &productname;.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Swift</glossterm>
  <glossdef>
   <para>Code name for <xref linkend="gloss.swift"/>.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Tenant</glossterm>
  <glossdef>
   <para>
    See <xref linkend="gloss.project"/>.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Virtual Machine (VM)</glossterm>
  <glossdef>
   <para>An  operating system instance that runs on top of a hypervisor. Multiple virtual
    machines can run on the same physical host at the same time. </para>
  </glossdef>
 </glossentry>
 
 <glossentry>
  <glossterm>Volume</glossterm>
  <glossdef>
   <para>
    Detachable block storage device. Unlike a SAN, it can only be attached
    to one instance at a time.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="gloss.vg">
 <glossterm>Volume Group (VG)</glossterm>
 <glossdef>
  <para>A virtual disk consisting of aggregated physical volumes. 
   Volume groups can be logically partitioned into logical volumes.
  </para>
 </glossdef>
 </glossentry>
  <glossentry id="gloss.volsnap">
  <glossterm>Volume Snapshot</glossterm>
  <glossdef>
   <para>A point-in-time copy of an &ostack; storage volume. Used to back up
   volumes.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Zone</glossterm>
  <glossdef>
   <para><remark>taroth 2013-06-12: DEVs, is the following correct?</remark>
   A logical grouping of &comp; services and virtual machine hosts.
   </para>
  </glossdef>
 </glossentry>
</glossary>
