<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-daps:xslt:profiling:docbook45-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE glossary PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "IGNORE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<glossary id="gl.cloud">
 <title>Terminology</title>
 <glossentry>
  <glossterm>Public Cloud</glossterm>
  <glossdef>
   <para>One of several deployment models for a cloud infrastructure. The cloud 
   infrastructure is designed for use by the general public and exists on the 
   premises of the cloud provider. Services like applications, storage, and other
   resources are made available to the general public for free or are offered on
   a pay-per-use model. The infrastructure is owned and managed by a business, 
   academic, or government organization, or some combination of them.
</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Private Cloud</glossterm>
  <glossdef>
   <para>One of several deployment models for a cloud infrastructure. The 
   infrastructure is operated exclusively for a single organization and may exist
   on or off premises. The cloud is owned and managed by the organzation itself, 
   by a third-party or a combination of both. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Hybrid Cloud</glossterm>
  <glossdef>
   <para>One of several deployment models for a cloud infrastructure. A composition 
   of both public and private clouds that remain unique entities, but are bound
   together by standardized technology for enabling data and application
   portability. <remark>taroth 2012-06-28: another definition of "hybrid cloud"
   is the combination of both virtual and physical machines, but I don't think 
   we use the term in that sense - check again</remark>
 </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack;</glossterm>
  <glossdef>
   <para>A collection of open source software to build and manage public and 
   private clouds. Its components are designed to work together to provide 
   Infrastructure as a Service and a massively scalable cloud computing software.
   </para>
   <para>At the same time, &ostack; is also a community and a project.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Node</glossterm>
  <glossdef>
   <para>A server <remark>taroth 2012-06-29: DEVs: physical or virtual?</remark> 
   that is managed by Crowbar.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&admserv;</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&compnode;</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&contrnode;</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&crow;</glossterm>
  <glossdef>
   <para>Bare-metaller installer and an extension of Chef server. The primary 
   function of Crowbar is to get new hardware into a state where it can be managed
   by Chef. That means: Setting up BIOS and RAID, network, installing a basic 
   operating system, and setting up services like DNS, NTP, and DHCP.
   </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&bar;</glossterm>
  <glossdef>
   <para>A set of Chef cookbooks, templates and other logic for applying
   a particular role to individual nodes or a set of nodes. 
   <!--Crowbar modularization. Individual layers of the deployment infrastructure
   are packaged separately and can be integrated before, while or after installing 
   Crowbar.--> </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Proposal</glossterm>
  <glossdef>
   <para>Special configuration for a barclamp. It includes barclamp-specific 
   settings, and a list of nodes to which the proposal should be applied.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Role</glossterm>
  <glossdef>
   <para>An instance of a proposal that is active on a node. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Chef</glossterm>
  <glossdef>
   <para>An automated configuration management platform for deployment of your 
   entire cloud infrastructure. .   To get hardware into a “Chef Ready” state, there are several steps that must be performed.  We need to setup the BIOS, RAID, figure out where the server is racked, install an operating system, assign IP networking and names, synchronize clocks (NTP) and setup a chef client linked to our server. </para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Ceph</glossterm>
  <glossdef>
   <para>A massively scalable, open source, distributed storage system.
   It consists of an object store, a block store, and a POSIX-compliant 
   distributed file system.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Cookbook</glossterm>
  <glossdef>
   <para>A collection of Chef recipes which deploy a software stack or functionality.
   The unit of distribution for Chef.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Recipe</glossterm>
  <glossdef>
   <para>A group of Chef scripts and templates. Recipes are used by Chef to deploy 
   a unit of functionality.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Infrastructure-as-a-Solution (IaaS)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Platform-as-a-Service (PaaS)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Software-as-a-Service (SaaS)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Object Store (Swift)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Image (Glance)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Compute (Nova)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Dashboard (Horizon)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Identity (Keystone)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Network (Quantum)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>&ostack; Network (Quantum)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Amazon Elastic Compute Cloud (EC2)</glossterm>
  <glossdef>
   <para>Amazon's virtual computing environment.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Amazon Web Services (AWS)</glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm>Amazon Machine Image (AMI)</glossterm>
  <glossdef>
   <para>A virtual machine that can be created and
      customized by a user. AMIs can be identified by an ID prefixed with
      <literal>ami-</literal>.</para>
  </glossdef>
 </glossentry>
 <!--taroth 2012-06-28: not sure if we need this here-->
 <!--<glossentry>
  <glossterm>Amazon Elastic Block Store (EBS)</glossterm>
  <glossdef>
   <para>Block level storage volumes for use with
      Amazon EC2 instances. One or more storage volumes can be attached to
      running instances and persist after the instance has been shut down. It
      is possible to boot from an EBS volume. </para>
  </glossdef>
 </glossentry>-->
 <glossentry>
  <glossterm>Amazon Simple Storage Service (S3)</glossterm>
  <glossdef>
   <para>A storage for the Internet that can be used to store and retrieve data 
   on the Web.</para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm></glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm></glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
 <glossentry>
  <glossterm></glossterm>
  <glossdef>
   <para></para>
  </glossdef>
 </glossentry>
</glossary>
