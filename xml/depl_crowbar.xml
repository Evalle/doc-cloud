<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter xml:id="cha.depl.crowbar"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
 <title>The &crow; Web Interface</title>
 <info>
<dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:maintainer>taroth</dm:maintainer>
    <dm:status>editing</dm:status>
    <dm:deadline/>
    <dm:priority/>
    <dm:translation>no</dm:translation>
    <dm:languages/>
</dm:docmanager>
  <abstract>
   <para>The &crow; &wi; runs on the &admserv;. It provides an
    overview of the most important deployment details in your cloud, including a
    view on the nodes and which roles are deployed on which nodes, and on the
    &barcl; proposals that can be edited and deployed. In addition, the
    &crow; &wi; shows details about the networks and switches in your
    cloud and provides graphical access to some tools with which you can manage
    your repositories, back up or restore the &admserv;, export the
    &chef; configuration, or generate a <literal>supportconfig</literal> TAR
    archive with the most important log files.</para>
  </abstract>
 </info>
 <sect1 xml:id="sec.depl.crow.login">
  <title>Logging In</title>
  <para> The &crow; &wi; uses the HTTP protocol and port
   <literal>80</literal>. </para>

  <procedure xml:id="pro.depl.crow.login">
   <title>Logging In to the &crow; Web Interface</title>
   <step>
    <para> On any machine, start a Web browser and make sure that JavaScript and
     cookies are enabled.</para>
   </step>
   <step>
    <para> As URL, enter the IP address of the &admserv;, for example:</para>
    <screen>http://192.168.124.10/</screen>
   </step>
   <step>
    <para>Log in as user
     <systemitem class="username">crowbar</systemitem>. If you have not changed
     the password, it is <literal>crowbar</literal> by default.
    </para>
   </step>
  </procedure>
  <!--taroth 2016-02-05: https://bugzilla.suse.com/show_bug.cgi?id=950482-->
  <procedure xml:id="pro.depl.crow.password">
   <title>Changing the Password for the &crow; Web Interface</title>
   <step>
    <para>After being logged in to the &crow; &wi;, select <menuchoice>
      <guimenu>&Barcl;</guimenu>
      <guimenu>Crowbar</guimenu>
     </menuchoice>.</para>
   </step>
   <step><para>Select the <literal>&crow;</literal> &barcl; entry and
    <guimenu>Edit</guimenu> the proposal.</para>
   </step>
   <step>
    <para>In the <guimenu>Attributes</guimenu> section, click
      <guimenu>Raw</guimenu> to edit the configuration file.</para>
   </step>
   <step><para>Search for the following entry:</para>
    <screen>"crowbar": {
     "password": "crowbar"</screen>
    </step>
   <step>
    <para>Change the password.
      </para>
   </step>
   <step>
    <para>Confirm your change by clicking <guimenu>Save</guimenu> and
     <guimenu>Apply</guimenu>.</para>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec.depl.crow.overview">
  <title>Overview: Main Elements</title>

  <para>After logging in to &crow;, you will see a navigation bar at the
   top-level row. Its menus and the respective views are described in the
   following sections.</para>
  <figure>
   <title>&crow; UI&mdash;&dash; (Main Screen)</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="crowbar_main_dashboard.png" width="100%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="crowbar_main_dashboard.png" width="100%"/>
    </imageobject>
   </mediaobject>
  </figure>

  <sect2 xml:id="sec.depl.crow.overview.nodes">
   <title>Nodes</title>
   <variablelist>
    <varlistentry>
     <term><guimenu>&dash;</guimenu></term>
     <listitem>
      <para>This is the default view after logging in to the &crow;
       &wi;. The &dash; shows the groups (which you can create to
       arrange nodes according to their purpose), which nodes belong to each
       group and which state the nodes and groups are in. In addition, the
       total number of nodes is displayed in the top-level row.</para>
      <para>The color of the dot in front of each node or group indicates the status. If the dot for
       a group shows more than one color, hover the mouse pointer over the dot to view the total
       number of nodes and the statuses they are in.</para>
      <itemizedlist>
       <listitem>
        <para>Gray means the node is being discovered by the &admserv; or that there is no
         up-to-date information about a deployed node. If the status is shown for a node longer than
         expected, check if the chef-client is still running on the node.</para>
       </listitem>
       <listitem>
        <para>Yellow means the node has been <literal>Discovered</literal>.
         As long as the dot is still blinking, the respective node is being
         installed and booted.</para>
       </listitem>
       <listitem>
        <para>Green means the node is in status <literal>Ready</literal>.
        </para>
       </listitem>
       <listitem>
        <para>Red means the node is in status <literal>Problematic</literal>.</para>
       </listitem>
      </itemizedlist>
       <para>During the initial state of the setup, the &dash; only shows
       one group called <literal>sw_unknown</literal> into which the
       &admserv; is automatically sorted. Initially, all nodes (except
       the &admserv;) are listed with their MAC address as a name.
       However, it is recommended to create an alias for each node to make
       it easier to identify the node in the admin network and on the
       &dash;. For details on how to create groups, how to assign nodes
       to a group and how to create node aliases, see <xref
        linkend="sec.depl.inst.nodes.install"/>.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Bulk Edit</guimenu></term>
     <listitem>
      <para>This screen allows you to edit multiple nodes at once instead of
       editing them individually. It lists all nodes, including their
        <guimenu>Name</guimenu> (in form of the MAC address), their
        <guimenu>Hardware</guimenu> configuration, their
        <guimenu>Alias</guimenu> (used within the admin network), their
        <guimenu>Public Name</guimenu> (name used outside of the &cloud;
       network), their <guimenu>Group</guimenu>, their <guimenu>Intended
        Role</guimenu>, their <guimenu>Platform</guimenu> (the operating
       system that is going to be installed on the node), their
        <guimenu>License</guimenu> (if available), and their allocation
       status. You can toggle the list view between <guimenu>Show
        unallocated</guimenu> or <guimenu>Show all</guimenu> nodes.</para>
      <para>For details on how to fill in the data for all nodes and how to
       start the installation process, see <xref
        linkend="sec.depl.inst.nodes.install"/>.</para>
     </listitem>
    </varlistentry>
    <varlistentry><term><guimenu>HA Clusters</guimenu></term>
     <listitem>
      <para>This menu entry only appears if your cloud contains a &ha; setup. The overview
       shows all clusters in your setup, including the <guimenu>Nodes</guimenu> that are members of
       the respective cluster and the <guimenu>Roles</guimenu> assigned to the cluster. It also
       shows if a cluster contains <guimenu>Remote Nodes</guimenu> and which roles are assigned to
       the remote nodes.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Actives Roles</guimenu></term>
     <listitem>
      <para>This overview shows which roles have been deployed on which
       node(s). The roles are grouped according to the service to which they
       belong. You cannot edit anything here. To change role deployment, you
       need to edit and redeploy the respective &barcl; as described in
        <xref linkend="cha.depl.ostack"/>.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <!--taroth 2016-02-10: commenting the following for now
   (input for Switches is still missing!)
   <sect2 xml:id="sec.depl.crow.overview.network"><title>Network</title>
   <variablelist>
    <varlistentry>
     <term><guimenu>Switches</guimenu></term>
     <listitem>
      <para>FIXME
       <remark>taroth 2016-02-02: DEVs, what does this view tell the user and what can
        it be used for? (need a short high-level explanation)</remark></para>
      <informalfigure>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="crowbar_switches.png" width="100%"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="crowbar_switches.png" width="100%"/>
        </imageobject>
       </mediaobject>
      </informalfigure>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>VLAN</guimenu></term>
     <listitem>
      <para>This screen shows an overview of the available networks, including information on
        <guimenu>Nodes</guimenu>, <guimenu>Admin</guimenu>,
        <guimenu>Bastion</guimenu>, Mgmt (BMC), <guimenu>Mgmt Connect</guimenu>,
        <guimenu>Nova Fixed</guimenu>, <guimenu>Nova Floating</guimenu>,
        <guimenu>Os Sdn</guimenu>, <guimenu>Public</guimenu>, and
       <guimenu>Storage</guimenu>. You cannot edit anything here. For details
       on network setup and requirements,
       see <xref linkend="sec.depl.req.network"/>.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>-->

  <sect2 xml:id="sec.depl.crow.overview.barclamps">
   <title>Barclamps</title>
   <variablelist>
    <varlistentry>
     <term><guimenu>All Barclamps</guimenu></term>
     <listitem>
      <para>This screen shows a list of all available &barcl; proposals, including
       their <guimenu>Status</guimenu>, <guimenu>Name</guimenu> and a short
       <guimenu>Description</guimenu>. From here, you can
       <guimenu>Edit</guimenu> individual &barcl;
       proposals as described in <xref linkend="sec.depl.ostack.barclamps"/>.
       <remark>taroth 2016-02-02: ToDo - either move this section here completely (or move
        descriptive parts from section here and leave the procedural info in the
        xml/depl_nodes.xml?)</remark>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>&crow;</guimenu></term>
     <listitem>
      <para>This screen only shows the &barcl;s that are included with the core
       &crow; framework. They contain general recipes for setting up and
       configuring all nodes. From here, you can <guimenu>Edit</guimenu>
       individual &barcl; proposals.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>&ostack;</guimenu></term>
     <listitem>
      <para>This screen only shows the &barcl;s that are dedicated to &ostack;
       service deployment and configuration.  From here, you can
       <guimenu>Edit</guimenu> individual &barcl;
       proposals. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Deployment Queue</guimenu></term>
     <listitem>
      <para>If &barcl;s are applied to one or more nodes that are nor yet
       available for deployment (for example, because they are rebooting or have
       not been fully installed yet), the proposals will be put in a queue. This
       screen shows the proposals that are <guimenu>Currently deploying</guimenu>
       or <guimenu>Waiting in queue</guimenu>.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec.depl.crow.overview.utilities">
   <title>Utilities</title>
   <variablelist>
    <varlistentry>
     <term><guimenu>Exported Items</guimenu></term>
     <listitem>
      <para>The <guimenu>Exported Files</guimenu> screen allows you to export the
       &chef; configuration and the <literal>supportconfig</literal> TAR
       archive. The <literal>supportconfig</literal> archive contains system
        information such as the current kernel version being used, the hardware, RPM
        database, partitions, and the most important log files for analysis of any
        problems. To access the export options, click <guimenu>New
        Export</guimenu>. After the export has been successfully finished, the
        <guimenu>Exported Files</guimenu> screen will show any files that are
       available for download.</para>
     </listitem>
    </varlistentry>
    <!--taroth 2016-02-05: https://bugzilla.suse.com/show_bug.cgi?id=952643-->
    <varlistentry>
     <term><guimenu>Repositories</guimenu></term>
     <listitem>
      <para>This screen shows an overview of the mandatory, recommended and
       optional repositories for all architectures of &productname;. On each
       reload of the screen the &crow; &wi; checks the availability and
       status of the repositories. If a mandatory repository is not present, it
       is marked red in the screen. Any repositories marked green are usable and
       available to each node in the cloud. If you activate the check box for a
       repository in the <guimenu>Active</guimenu> column, the managed nodes
       will automatically be configured to use this repository. <remark>taroth
        2016-02-05: DEVs: and if the check box is *not* ticked? will the nodes
        use another repo? or no repo at all? and what's the default - no repo
        activated?</remark></para>
      <para>You cannot edit any repositories in this screen. If you need additional, third-party
       repositories (or want to modify the repository metadata), edit
        <filename>/etc/crowbar/repos.yml</filename>. Find an example of a repository
       definition below:</para>
      <screen>suse-12.1:
  x86_64:
    Custom-Repo-12.1:
      url: 'http://example.com/12-SP1:/x86_64/custom-repo/'
      ask_on_error: true # sets the ask_on_error flag in the autoyast profile for that repo
      priority: 99 # sets the repo priority for zypper</screen>
      <para>Alternatively, use &yast; &crow; module to add or edit repositories as described in <xref
        linkend="sec.depl.adm_inst.crowbar.repos"/>.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Swift &dash;</guimenu></term>
     <listitem>
      <para>This screen allows you to run
       <command>swift-dispersion-report</command> on the node or nodes
        <remark>taroth 2016-02-03: DEVs is the following correct?</remark> to
       which it has been deployed. Use this tool to measure the
       overall health of the swift cluster. For details, see <link
        xlink:href="http://docs.openstack.org/liberty/config-reference/content/object-storage-dispersion.html"
       />.
       <remark>taroth 2016-02-03: DEVs, can I open the resulting report from
        here? I tried to run a report but it seems to run forever with no result (see
        bsc#964946)</remark></para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Backup &amp; Restore</guimenu></term>
     <listitem>
      <para>This screen lets you create a backup of the &admserv; and download
       it. You can also restore from a backup or upload a backup image from your
       local file system. For details, see <xref
        linkend="sec.depl.maintenance.backup.admin"/>.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Cisco UCS</guimenu></term>
     <listitem>
      <para>
       &productname; can communicate with a Cisco UCS Manager instance via
       its XML-based API server to perform the following functions:
      </para>
      <itemizedlist>
       <listitem>
        <para>
         Instantiate UCS service profiles for &compnode;s and &stornode;s
         from predefined UCS service profile templates
        </para>
       </listitem>
       <listitem>
        <para>
         Reboot, start, and stop nodes.
        </para>
       </listitem>
      </itemizedlist>
      <para>
       The following prerequisites need to be fulfilled on the Cisco UCS side:
      </para>
      <itemizedlist>
       <listitem>
        <para>
         Templates for &compnode;s and &stornode;s need to be created. These
         service profile templates will be be used for preparing systems as
         SUSE Cloud  nodes. Minimum requirements are a processor supporting
         AMD-V or Intel-VT, 8 GB RAM, one network interface and at least 20 GB
         of storage (more for &stornode;s). The templates need to be named
         <literal>suse-cloud-compute</literal> and <literal>suse-cloud-storage</literal>.
        </para>
       </listitem>
       <listitem>
        <para>
         A user account with administrative permissions needs to be created
         for communicating with &cloud;. The account needs to have access to
         the service profile templates listed above. It also need permission
         to create service profiles and associate them with physical hardware.
        </para>
       </listitem>
      </itemizedlist>
      <para>
       To initially connect to the Cisco UCS Manager provide the login
       credentials of the user account mentioned above. The <guimenu>API
       URL</guimenu> has the form
       <literal>http://<replaceable>UCSMANAGERHOST</replaceable>/nuova</literal>. Click
       <guimenu>Login</guimenu> to connect. Once connected, you will see a
       list of servers and associated actions. Applying an action with the
       <guimenu>Update</guimenu> button can take up to several minutes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
  <sect2 xml:id="sec.depl.crow.overview.help">
   <title>Help</title>
   <para>From this screen, you can access HTML and PDF versions of the
    &productname; manuals. <remark>taroth 2016-03-02: DEVs, where does Crowbar
     fetch the manuals from? are they installed on the admin server?</remark>
    <!--that are installed on the node that you are connected to with Hawk2-->.</para>
  </sect2>
 </sect1>
</chapter>
