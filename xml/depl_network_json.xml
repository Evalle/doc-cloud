<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-daps:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE appendix PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "IGNORE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<appendix id="app.deploy.network_json">
 <title>The Network Barclamp Template File</title>

<!--
The Network barclamp provides two functions for the system. The first is a
common role to instantiate network interfaces on the crowbar managed
systems. The other function is address pool management.
-->

 <para>
  Complex network setups require to manually edit the network barclamp
  template file at <filename>bc-template-network.json</filename>. This section
  explains the file in detail. Settings in this file are applied to all nodes
  in &cloud;.
 </para>
 <warning>
  <title>
   No Network Changes After Having Run the Cloud Installation Script
  </title>
  <para>
   Once you have run the &cloud; installation script, you cannot change the
   network setup anymore. If doing so, you would have to completely set up the
   Administration Server again.
  </para>
  <para>
   The only exception from this rule is the interface map. This
   section can be changed at a later stage as well.  See <xref
   linkend="sec.deploy.network_json.interface_map"/> for details.
  </para>
 </warning>
 
 <sect1 id="sec.deploy.network_json.edit">
  <title>
   Editing <filename>bc-template-network.json</filename>
  </title>
  <para>
   The <filename>bc-template-network.json</filename> is located in
   <filename>/opt/dell/chef/data_bags/crowbar/</filename>. To edit
   it, open it in an editor of your choice. The template has the following
   general structure:
  </para>
  <screen>{
   "<replaceable>attribute</replaceable>" : "<replaceable>value</replaceable>"<co id="structure.general"/>,
   "deployment"<co id="structure.deployment"/> : {
     ...
   },
   "attributes" : {
      "network" : {
         "interface_map"<co id="structure.interface_map"/> : [
            ...
         ],
         "conduit_map"<co id="structure.conduit"/> : [
            ...
         ],
         "networks"<co id="structure.networks"/> : {
            ...
         },
      }
   }
}</screen>

  <calloutlist>
   <callout arearefs="structure.general">
    <para>
     General attributes. Refer to <xref
     linkend="sec.deploy.network_json.global"/> for details.
    </para>
   </callout>
   <callout arearefs="structure.interface_map">
    <para>
     Interface map section. Defines the order in which the physical network
     interfaces are to be used.
    </para>
   </callout>
   <callout arearefs="structure.deployment">
    <para>
     Deployment section. Contains data needed by &crow;. Do not edit this
     section.
    </para>
   </callout>
   <callout arearefs="structure.conduit">
    <para>
     Network conduit section defining the network modes and the network
     interface usage.  Refer to <xref
     linkend="sec.deploy.network_json.conduits"/> for details.
    </para>
   </callout>
   <callout arearefs="structure.networks">
    <para>
     Network definition section. Refer to <xref
     linkend="sec.deploy.network_json.networks"/> for details.
    </para>
   </callout>
  </calloutlist>
  <note>
   <title>Order of Elements</title>
   <para>
    The order in which the entries in the
    <filename>bc-template-network.json</filename> file appear, may differ from
    the one listed above. Use your editor's search function to find certain
    entries.
   </para>
  </note>
 </sect1>
 <sect1 id="sec.deploy.network_json.global">
  <title>Global Attributes</title>
  <para>
   The following global attributes exist:
  </para>
  <screen>        "id" : "bc-template-network",<co id="global.id"/>
        "description" : "Instantiates network interfaces on the crowbar ...",<co id="global.description"/>
        "start_up_delay" : 30,<co id="global.startup"/>
         "mode": "single",<co id="global.mode"/>
         "teaming" : { "mode" : 6 },<co id="global.bonding"/></screen>
  <calloutlist>
   <callout arearefs="global.id">
    <para>
     Identifier. Do not change.
    </para>
   </callout>
   <callout arearefs="global.description">
    <para>
     &barcl; description displayed in the &crow; Web interface. Do not change.
    </para>
   </callout>
   <callout arearefs="global.startup">
    <para>
     Time (in seconds) the &chef;-client waits before running into a time-out
     for the network interfaces to become online.
    </para>
   </callout>
   <callout arearefs="global.mode">
    <para>
     Network mode to be used. The mode needs to be defined in the network
     conduits part of this file (see <xref
     linkend="sec.deploy.network_json.conduits"/>)
    </para>
   </callout>
   <callout arearefs="global.bonding">
    <para>
     Default bonding mode to be used. See <ulink
     url="https://www.kernel.org/doc/Documentation/networking/bonding.txt"/>
     for a list of available modes.
    </para>
    <warning>
     <title>Bonding Mode 6 (balance-alb) not supported</title>
     <para>
      Adaptive load balancing (balance-alb or 6) is not supported because of
      problems with bridges and openvswitch).
     </para>
    </warning>
   </callout>
  </calloutlist>
 </sect1>

 <sect1 id="sec.deploy.network_json.interface_map">
  <title>Interface Map</title>
  <para>
   By default physical network interfaces are used by the order they appear
   under <filename>/sys/class/net/</filename>. The first interface listed is
   used to boot the node. In case you would like to apply a custom order, you
   need to create an interface map. &crow; uses the bus_order specified in the
   matching interface map to map the physical network identifiers to its
   internal interface identifiers. Interface maps are created for specific
   hardware configurations and are applied to all machines matching this
   configuration.
  </para>
  <screen>            {
               "pattern" : "PowerEdge R610"<co id="interface.pattern"/>,
               "bus_order" : [<co id="interface.bus"/>
                  "0000:00/0000:00:01",
                  "0000:00/0000:00:03"
               ]
            }</screen>
  <calloutlist>
   <callout arearefs="interface.pattern">
    <para>
     Hardware specific identifier. This identifier can be obtained by running
     the command <command>dmidecode <option>-s
     system-product-name</option></command> on the machine you want to identify.
    </para>
   </callout>
   <callout arearefs="interface.bus">
    <para>
     Bus IDs of the interfaces. The order in which they are listed here
     defines the order in which &chef; addresses the interfaces. The IDs can
     be obtained by listing the contents of
     <filename>/sys/class/net/</filename>.
    </para>
   </callout>
  </calloutlist>
   
  <note>
   <title>
    Interface Map Changes Allowed after Having Run the &cloud; Installation
    Script
   </title>
   <para>
    Contrary to all other sections in
    <filename>bc-template-network.json</filename>, you can change interface
    maps after having executed the &cloud; installation script. However, nodes
    that are already deployed and affected by these changes, need to be
    deployed again. Therefore it is not recommended to make changes to the
    interface map that affects active nodes.
   </para>
   <para>
    If you change the interface mappings after having run the &cloud;
    installation script, you <emphasis>must not</emphasis> make your changes
    by editing <filename>bc-template-network.json</filename>. You must rather
    use  the &crow; Web
   interface and open <menuchoice> <guimenu>Barclamps</guimenu>
   <guimenu>&crow;</guimenu> <guimenu>Network</guimenu>
   <guimenu>Edit</guimenu></menuchoice>. Activate your changes by clicking
   <guimenu>Apply</guimenu>.
   </para>
  </note>

  <sect2 id="sec.deploy.network_json.interface_map.examples">
   <title>Interface Map Example</title>
   <para/>
   <example id="interface_map.example">
    <title>
     Changing the Network Interface Order on a Machine with four NICs
    </title>
    <orderedlist>
     <listitem>
      <para>
       Get the machine identifier by running the following command on the
       machine to which the map should be applied:
      </para>
      <screen>~ # dmidecode -s system-product-name
AS 2003R
</screen>
      <para>
       The resulting string needs to be entered on the
       <guimenu>pattern</guimenu> line of the map. It is interpreted as a
       regular expression. Unless the pattern starts with <literal>^</literal>
       and ends with <literal>$</literal> a substring match is performed
       against the name return from the above commands.
      </para>
     </listitem>
     <listitem>
      <para>
       List the interface devices in <filename>/sys/class/net</filename> to
       get the current order and the Bus id of each interface:
      </para>
    <screen>~ # ls -lgG /sys/class/net/ | grep eth
lrwxrwxrwx 1 0 Jun 19 08:43 eth0 -> ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.0/net/eth0
lrwxrwxrwx 1 0 Jun 19 08:43 eth1 -> ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.1/net/eth1
lrwxrwxrwx 1 0 Jun 19 08:43 eth2 -> ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.2/net/eth2
lrwxrwxrwx 1 0 Jun 19 08:43 eth3 -> ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.3/net/eth3
</screen>
      <para>
       The bus id is included in the path of the link target&mdash;it's the
       following string: <filename>../../devices/pci0000:00/<replaceable>BUS ID</replaceable>/net/eth0</filename> 
      </para>
     </listitem>
     <listitem>
      <para>
       Create an interface map with the bus id listed in the order the
       interfaces should be used. In the following example the interface order
       is <systemitem class="resource">eth2</systemitem>, <systemitem
       class="resource">eth0</systemitem>, <systemitem
       class="resource">eth1</systemitem> and <systemitem
       class="resource">eth2</systemitem>. 
      </para>
      <screen>            {
               "pattern" : "AS 2003R",
               "bus_order" : [
	          "0000:00:1c.0/0000:09:00.2",
		  "0000:00:1c.0/0000:09:00.0",
		  "0000:00:1c.0/0000:09:00.1",
		  "0000:00:1c.0/0000:09:00.3"
               ]
            } </screen>
     </listitem>
    </orderedlist>
   </example>
  </sect2>  
  
 </sect1>
 
 <sect1 id="sec.deploy.network_json.conduits">
  <title>Network Conduits</title>
  <para>
   Network conduits define network modes and the way the physical network
   interfaces are to be used. Each conduit consists of a
   <guimenu>pattern</guimenu> setting a mode name and two entries (the number if
   network interfaces and the node role) defining criteria that must be
   matched by the nodes.
  </para>
  <para>
   The mode name that is specified with <literal>mode</literal> in the global
   attributes section is deployed on all nodes in &cloud;. It is not possible
   to use a different mode for a certain node. However, you can define
   <quote>sub</quote> modes with the same name that only match machines with a
   certain number of physical network interfaces or machines with certain
   roles (all &compnode;s for example).
  </para>

<!--
Single means to use the first interface (usually eth0) as the only interface
for all networks. VLANs and bridges will be added on top of this single
interface. Dual means that the first interface should be used as the admin
interface and the second interface should be used for the other
interfaces. Team means that the first two interfaces should be bonded together
and all VLANs run over it.
-->


  <para>
   Several network modes are already pre-defined. The most important ones are
   named <literal>single</literal>, <literal>dual</literal> and
   <literal>team</literal>&mdash;see <xref
   linkend="sec.depl.req.network.modes"/> for detailed descriptions. Apart
   from these modes a fallback mode <literal>".*/.*/.*"</literal> is also
   pre-defined&mdash;it is applied in case no other mode matches the one
   specified in the global attributes section. These modes can be adjusted
   according to your needs. It is also possible to define a custom mode.
  </para>


  <screen>         "conduit_map" : [
         ...
            {
               "pattern" : "team/.*/.*"<co id="conduit.pattern"/>,
               "conduit_list" : {
                  "intf2"<co id="conduit.name"/> : {
                     "if_list" : ["1g1","1g2"]<co id="conduit.interface"/>,
                     "team_mode" : 6<co id="conduit.bonding"/>
                  },
                  "intf1" : {
                     "if_list" : ["1g1","1g2"],
                     "team_mode" : 6
                  },
                  "intf0" : {
                     "if_list" : ["1g1","1g2"],
                     "team_mode" : 6
                  }
               }
            },
         ...
         ],</screen>
  <calloutlist>
   <callout arearefs="conduit.pattern">
    <para>
     This line contains the pattern definition for a mode. The value for
     pattern must have the following form:
    </para>
    <screen><replaceable>mode_name</replaceable>/<replaceable>number_of_nics</replaceable>/<replaceable>node_role</replaceable></screen>
    <variablelist>
     <varlistentry>
      <term><replaceable>mode_name</replaceable></term>
      <listitem>
       <para>
	Name of the network mode. This string is used to reference the mode
	from the general attributes section.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>number_of_nics</replaceable></term>
      <listitem>
       <para>
	Normally it is not possible to apply different network modes to
	different roles&mdash;you can only specify one mode in the global
	attributes section. However, it does not make sense to apply a network
	mode that bonds three interfaces on a machine with only two physical
	network interfaces. This option allows you to create modes for nodes
	with a given number of interfaces.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>node_role</replaceable></term>
      <listitem>
       <para>
	This part of the pattern let's you create matches for a certain node
	role. This allows you to create network modes for certain roles, for
	example the &compnode;s (role: <guimenu>nova-multi-compute</guimenu>)
	or the &swift; nodes (role: <guimenu>swift-storage</guimenu>). 
       </para>

<!--
<vuntz> Magic: database-server rabbitmq-server keystone-server glance-server cinder-controller cinder-volume quantum-server nova-multi-controller nova-multi-compute nova_dashboard-server swift-proxy swift-dispersion swift-ring-compute swift-storage
<vuntz> Magic: that would really be the relevant ones (most other roles are either for the admin node, or for all nodes)
<Magic> vuntz: Cool, thanks! What about the ceph roles?
<vuntz> Magic: ah, and you have roles like "crowbar-d52-54-00-1e-35-49_cloud_fs" (ie "crowbar-${hostname-fqdn}" with "." replaced by "_")
<vuntz> such roles are specific to each node
<vuntz> Magic: hrm, don't have ceph right here
<vuntz> and I don't know if the names of the role will be the same once we get it
<Magic> It used to be ceph-mon, ceph-mon-master and ceph-store in Cloud 1.0
-->


      </listitem>
     </varlistentry>
    </variablelist>
   </callout>
   <callout arearefs="conduit.name">
    <para>
     The logical network interface definition. Each conduit list must contain at
     least one such definition. This lines defines the name of the logical
     interface. This identifier must be unique and will also be referenced in
     the network definition section. It is recommended to stick with the
     pre-defined naming scheme with <literal>intf0</literal> for
     <quote>Interface 0</quote>, <literal>intf1</literal> for <quote>Interface
     1</quote>, etc.. If you change the name (not recommended), you also need
     to change all references in the network definition section.
    </para>
   </callout>
   <callout arearefs="conduit.interface">
    <para>
     This lines maps one or more <emphasis>physical</emphasis>
     to the logical interface. Each entry represents a physical interface. If
     more than one entry exist, the interfaces are bonded&mdash;either with
     the default bonding mode defined with <guimenu>teaming</guimenu>
     attribute defined either in this mode or in the general attributes section.
    </para>
    <para>
     The physical interfaces definition needs to fit the following pattern:
    </para>
    <screen>[Quantifier][Speed][Interface Number]</screen>
    <para>
     Valid examples are <literal>+1g2</literal>, <literal>10g1</literal> or
     <literal>?1g2</literal>.
    </para>
    <variablelist>
     <varlistentry>
      <term>Quantifier</term>
      <listitem>
       <para>
	Specifying the quantifier is optional. The following values may be
	entered: 
       </para>
       <simplelist>
	<member><literal>+</literal>: at least the speed specified afterwards
	(specified value or higher)</member>
	<member><literal>-</literal>: at most the speed specified afterwards
	(specified value or lower)</member>
	<member><literal>?</literal>: any speed (speed specified afterwards is
	ignored)</member>
       </simplelist>
       <para>
	If no quantifier is specified, the exact speed specified is used.  
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Speed</term>
      <listitem>
       <para>
	Specifying the interface speed is mandatory (even if using the
	<literal>?</literal> quantifier). The following values may
	be entered:
       </para>
       <simplelist>
	<member><literal>10m</literal>: 10 Mbit</member>
	<member><literal>100m</literal>: 100 Mbit</member>
	<member><literal>1g</literal>: 1 Gbit</member>
	<member><literal>10g</literal>: 10 Gbit</member>
       </simplelist>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Order</term>
      <listitem>
       <para>
	Position in the interface order. Specifying this value is
	mandatory. The interface order is defined by the order in which the
	interfaces appear in <filename>/sys/class/net</filename> (default) or,
	if existing, by an interface map. The order is also linked to the
	speed in this context, so <literal>1g1</literal> means <quote>The
	first 1Gbit interface</quote>, <literal>+1g1</literal> means
	<quote>The first 1Gbit or 10Gbit
	interface</quote>. <literal>?1g1</literal> would match the very first
	interface, regardless of its speed.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </callout>
   <callout arearefs="conduit.bonding">
    <para>
     FIXME
    </para>
   </callout>
  </calloutlist>

  <sect2 id="sec.deploy.network_json.conduits.examples">
   <title>Network Conduit Examples</title>
   <para>
    
   </para>
   <example id="ex.conduits.nic_number">
    <title>Network Modes for Different NIC Numbers</title>
    <para>
     The following example defines a network mode named
     <literal>my_mode</literal> for nodes with 6, 3 and an arbitrary number of
     network interfaces. Since the first mode that matches is applied, it is
     important that the specific modes (for 6 and 3 NICs) are listed before
     the general one:
    </para>
    <screen>            {
               "pattern" : "my_mode/6/.*",
               "conduit_list" : { ... }
            },
            {
               "pattern" : "my_mode/3/.*",
               "conduit_list" : { ... }
            },
            {
               "pattern" : "my_mode/.*/.*",
               "conduit_list" : { ... }
            },</screen>
   </example>
  </sect2>
  
 </sect1>

 <sect1 id="sec.deploy.network_json.networks">
  <title>Network Definitions</title>
  <para>
   
  </para>
 </sect1>
 
</appendix>
