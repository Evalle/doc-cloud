<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-daps:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE appendix PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "IGNORE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<appendix id="app.deploy.network_json">
 <title>The Network Barclamp Template File</title>
 <para>
  Complex network setups require to manually edit the network barclamp
  template file at <filename>bc-template-network.json</filename>. This section
  explains the file in detail. Settings in this file are applied to all nodes
  in &cloud;.
 </para>
 <warning>
  <title>
   No Network Changes After Having Run the Cloud Installation Script
  </title>
  <para>
   Once you have run the &cloud; installation script, you cannot change the
   network setup anymore. If doing so, you would have to completely set up the
   Administration Server again.
  </para>
  <para>
   The only exception from this rule is the interface map. This
   section can be changed at a later stage as well.  See <xref
   linkend="sec.deploy.network_json.interface_map"/> for details.
  </para>
 </warning>
 
 <sect1 id="sec.deploy.network_json.edit">
  <title>
   Editing <filename>bc-template-network.json</filename>
  </title>
  <para>
   The <filename>bc-template-network.json</filename> is located in
   <filename>/opt/dell/chef/data_bags/crowbar/</filename>. To edit
   it, open it in an editor of your choice. The template has the following
   general structure:
  </para>
  <screen>{
   "<replaceable>attribute</replaceable>" : "<replaceable>value</replaceable>"<co id="structure.general"/>,
   "deployment"<co id="structure.deployment"/> : {
     ...
   },
   "attributes" : {
      "network" : {
         "interface_map"<co id="structure.interface_map"/> : [
            ...
         ],
         "conduit_map"<co id="structure.conduit"/> : [
            ...
         ],
         "networks"<co id="structure.networks"/> : {
            ...
         },
      }
   }
}</screen>

  <calloutlist>
   <callout arearefs="structure.general">
    <para>
     General attributes. Refer to <xref
     linkend="sec.deploy.network_json.global"/> for details.
    </para>
   </callout>
   <callout arearefs="structure.interface_map">
    <para>
     Interface map section. Defines the order in which the physical network
     interfaces are to be used.
    </para>
   </callout>
   <callout arearefs="structure.deployment">
    <para>
     Deployment section. Contains data needed by &crow;. Do not edit this
     section.
    </para>
   </callout>
   <callout arearefs="structure.conduit">
    <para>
     Network conduit section defining the network modes and the network
     interface usage.  Refer to <xref
     linkend="sec.deploy.network_json.conduits"/> for details.
    </para>
   </callout>
   <callout arearefs="structure.networks">
    <para>
     Network definition section. Refer to <xref
     linkend="sec.deploy.network_json.networks"/> for details.
    </para>
   </callout>
  </calloutlist>
  <note>
   <title>Order of Elements</title>
   <para>
    The order in which the entries in the
    <filename>bc-template-network.json</filename> file appear, may differ from
    the one listed above. Use your editor's search function to find certain
    entries.
   </para>
  </note>
 </sect1>
 <sect1 id="sec.deploy.network_json.global">
  <title>Global Attributes</title>
  <para>
   The following global attributes exist:
  </para>
  <screen>        "id" : "bc-template-network",<co id="global.id"/>
        "description" : "Instantiates network interfaces on the crowbar managed systems. Also manages the address pool",<co id="global.description"/>
        "start_up_delay" : 30,<co id="global.startup"/>
         "mode": "single",<co id="global.mode"/>
         "teaming" : { "mode" : 6 },<co id="global.bonding"/></screen>
  <calloutlist>
   <callout arearefs="global.id">
    <para>
     Identifier. Do not change.
    </para>
   </callout>
   <callout arearefs="global.description">
    <para>
     &barcl; description displayed in the &crow; Web interface. Do not change.
    </para>
   </callout>
   <callout arearefs="global.startup">
    <para>
     Time (in seconds) the &chef;-client waits before running into a time-out
     for the network interfaces to become online.
    </para>
   </callout>
   <callout arearefs="global.mode">
    <para>
     Network mode to be used. The mode needs to be defined in the network
     conduits part of this file (see <xref
     linkend="sec.deploy.network_json.conduits"/>)
    </para>
   </callout>
   <callout arearefs="global.bonding">
    <para>
     Default bonding mode to be used. See <ulink
     url="https://www.kernel.org/doc/Documentation/networking/bonding.txt"/>
     for a list of available modes.
    </para>
    <warning>
     <title>Bonding Mode 6 (balance-alb) not supported</title>
     <para>
      Adaptive load balancing (balance-alb or 6) is not supported because of
      problems with bridges and openvswitch).
     </para>
    </warning>
   </callout>
  </calloutlist>
 </sect1>

 <sect1 id="sec.deploy.network_json.interface_map">
  <title>Interface Map</title>
  <para>
   By default physical network interfaces are used by the order they appear
   under <filename>/sys/class/net/</filename>. The first interface listed is
   used to boot the node. In case you would like to apply a custom order, you
   need to create an interface map. &crow; uses the bus_order specified in the
   matching interface map to map the physical network identifiers to its
   internal interface identifiers. Interface maps are created for specific
   hardware configurations and are applied to all machines matching this
   configuration.
  </para>
  <screen>            {
               "pattern" : "<replaceable>MY SERVER</replaceable>"<co id="interface.pattern"/>,
               "bus_order" : [<co id="interface.bus"/>
	          "0000:00:1c.0/0000:09:00.2",
		  "0000:00:1c.0/0000:09:00.0",
		  "0000:00:1c.0/0000:09:00.1",
		  "0000:00:1c.0/0000:09:00.3"
               ]
            } </screen>
  <calloutlist>
   <callout arearefs="interface.pattern">
    <para>
     Hardware specific identifier. This identifier can be obtained by running
     the following command on the machine you want to identify (adding quotes
     to the dmidecode output ensures that leading and trailing spaces are not
     getting lost):
    </para>
    <screen>echo \"$(dmidecode -s system-product-name)\"</screen>
   </callout>
   <callout arearefs="interface.bus">
    <para>
     Bus IDs of the interfaces. The order in which they are listed here
     defines the order in which &chef; addresses the interfaces. The IDs can
     be obtained by listing the contents of
     <filename>/sys/class/net/</filename>.
    </para>
    <screen>~ # ls -lgG /sys/class/net/ | grep eth
lrwxrwxrwx 1 0 Jun 19 08:43 eth0 -> ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.0/net/eth0
lrwxrwxrwx 1 0 Jun 19 08:43 eth1 -> ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.1/net/eth1
lrwxrwxrwx 1 0 Jun 19 08:43 eth2 -> ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.2/net/eth2
lrwxrwxrwx 1 0 Jun 19 08:43 eth3 -> ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.3/net/eth3
</screen>
   </callout>
  </calloutlist>
   
  <note>
   <title>
    Interface Map Changes Allowed after Having Run the &cloud; Installation
    Script
   </title>
   <para>
    Contrary to all other sections in
    <filename>bc-template-network.json</filename>, you can change interface
    maps after having executed the &cloud; installation script. However, nodes
    that are already deployed and affected by these changes, need to be
    deployed again. Therefore it is not recommended to make changes to the
    interface map that affects active nodes.
   </para>
   <para>
    If you change the interface mappings after having run the &cloud;
    installation script, you <emphasis>must not</emphasis> make your changes
    by editing <filename>bc-template-network.json</filename>. You must rather
    use  the &crow; Web
   interface and open <menuchoice> <guimenu>Barclamps</guimenu>
   <guimenu>&crow;</guimenu> <guimenu>Network</guimenu>
   <guimenu>Edit</guimenu></menuchoice>. Activate your changes by clicking
   <guimenu>Apply</guimenu>.
   </para>
  </note>
 </sect1>
 
 <sect1 id="sec.deploy.network_json.conduits">
  <title>Network Conduits</title>
  <para>
   Network conduits define network modes and the way the physical network
   interfaces are to be used. The mode that is
   specified with <literal>mode</literal> in the global attributes section is
   deployed on all nodes in &cloud;. It is not possible to use a different
   mode for a certain node.
  </para>
  <para>
   Several network modes are already pre-defined. The most important ones are
   named <literal>single</literal>, <literal>dual</literal> and
   <literal>team</literal>&mdash;see <xref
   linkend="sec.depl.req.network.modes"/> for detailed descriptions. Apart
   from these modes a fallback mode <literal>".*/.*/.*"</literal> is also
   pre-defined&mdash;it is applied in case no other mode matches the one
   specified in the global attributes section. These modes can be adjusted
   according to your needs. It is also possible to define a custom mode.
  </para>


  <screen>         "conduit_map" : [
         ...
            {
               "pattern" : "team/.*/.*"<co id="conduit.pattern"/>,
               "conduit_list" : {
                  "intf2"<co id="conduit.name"/> : {
                     "if_list" : ["1g1","1g2"]<co id="conduit.interface"/>,
                     "team_mode" : 6<co id="conduit.bonding"/>
                  },
                  "intf1" : {
                     "if_list" : ["1g1","1g2"],
                     "team_mode" : 6
                  },
                  "intf0" : {
                     "if_list" : ["1g1","1g2"],
                     "team_mode" : 6
                  }
               }
            },
         ...
         ],</screen>
  <calloutlist>
   <callout arearefs="conduit.pattern">
    <para>
     Conduit lists are specified for each of the three networking modes
     (<literal>single</literal>, <literal>dual</literal> and
     <literal>team</literal>). This line specifies the mode. The value for
     pattern must follow the following form:
    </para>
    <screen><replaceable>mode_name</replaceable>/<replaceable>number_of_nics</replaceable>/<replaceable>chef_role</replaceable></screen>
    <variablelist>
     <varlistentry>
      <term><replaceable>mode_name</replaceable></term>
      <listitem>
       <para>
	Name of the network mode. This string is used to reference the mode
	from the general attributes section.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>number_of_nics</replaceable></term>
      <listitem>
       <para>
	Normally it is not possible to apply different network modes to
	different roles&mdash;you can only specify one mode in the global
	attributes section. However, it does not make sense to apply a network
	mode that bonds three interfaces on a machine with only two physical
	network interfaces. This option allows you to create modes for nodes
	with a given number of interfaces.
       </para>
       <para>
	The following example defines a network mode named
	<literal>my_mode</literal> for nodes with 6, 3 and an arbitrary number
	of network interfaces. Since the first mode that matches is applied,
	it is important that the specific modes (for 6 and 3 NICs) are listed
	before the general one:
       </para>
       <screen>            {
               "pattern" : "my_mode/6/.*",
               "conduit_list" : {
                  ...
               }
            },
            {
               "pattern" : "my_mode/3/.*",
               "conduit_list" : {
                  ...
               }
            },
            {
               "pattern" : "my_mode/.*/.*",
               "conduit_list" : {
                  ...
               }
            },</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>chef_role</replaceable></term>
      <listitem>
       <para>
	FIXME
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </callout>
   <callout arearefs="conduit.name">
    <para>
     Network interface identifier. This identifier must be unique and will
     also be referenced in the network definition section. It is recommended
     to stick with the pre-defined naming scheme with <literal>intf0</literal>
     for <quote>Interface 0</quote>, <literal>intf1</literal> for
     <quote>Interface 1</quote>, etc.. If you change the name (not
     recommended), you also need to change all references in the network
     definition section.
    </para>
   </callout>
   <callout arearefs="conduit.interface">
    <para>
     
    </para>
<!--
Interface specification. Each entry represents a physical interface which is specified as follows:
[+-?]1g1:
  +/-/?:
'+' interface of at least the speed specified after the '+' sign. +1g1 means the first interface that is 1Gig or faster
'-' interface of the speed after the '-' sign, or slower
'?' interface of any speed
If no '?', '-' or '+' is present only interfaces of exactly that speed are considered.
  1g == Gigabit interface (other possible values: 10m, 100m, 10G)
  1  == First physical interface of that speed (either in /sys/class/net or as defined in a machine specific interface map, see above)
At least one interace needs to be specified per identifier. If more than one interface is listed
(comma seperated: "if_list" : ["1g1", "1g2"]) they will be bonded. By default the bonding mode specified in the gklobal attributes section will be used. To overwrite this global setting for an interface specify as follows:
 
"intf2" : {
                     "if_list" : [
                        "1g1",
                        "1g2"
                     ],
                     "team_mode" : 6

-->


   </callout>
   
  </calloutlist>
 </sect1>

 <sect1 id="sec.deploy.network_json.networks">
  <title>Network Definitions</title>
  <para>
   
  </para>
 </sect1>
 
</appendix>
