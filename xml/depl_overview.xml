<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.depl.arch">
 <title>The &cloud; Architecture</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:maintainer>fs</dm:maintainer>
    <dm:status>editing</dm:status>
    <dm:deadline/>
    <dm:priority/>
    <dm:translation>no</dm:translation>
    <dm:languages/>
  </dm:docmanager>
  <abstract>
   <para>
    &productname; is a cloud infrastructure solution that can easily be
    deployed and managed. It offers a cloud management solution that helps
    organizations to centralize virtual machine deployment.
   </para>
  </abstract>
 </info>
 <para>
  &productname;  &productnumber; provides the following features:
 </para>
 <itemizedlist mark="bullet" spacing="normal">
  <listitem>
   <para>
    Open source software that is based on the &ostack; &latest_ostack;
    release.
   </para>
  </listitem>
  <listitem>
   <para>
    Centralized resource tracking providing insight into activities and
    capacity of the cloud infrastructure for optimized automated deployment
    of services.
   </para>
  </listitem>
  <listitem>
   <para>
    A self-service portal enabling end users to configure and deploy
    services as necessary, also offering the ability to track resource
    consumption (&o_dash;).
   </para>
  </listitem>
  <listitem>
   <para>
    An image repository from which standardized, preconfigured virtual
    machines can be published (&o_img;).
   </para>
  </listitem>
  <listitem>
   <para>
    Automated installation processes via &crow; using pre-defined scripts
    for configuring and deploying the &contrnode;(s) and Compute
    and &stornode;s.
   </para>
  </listitem>
  <listitem>
   <para>
    Multi-tenant, role-based provisioning and access control for multiple
    departments and users within your organization.
   </para>
  </listitem>
  <listitem>
   <para>
    APIs enabling the integration of third-party software, such as identity
    management and billing solutions.
   </para>
  </listitem>
  <listitem>
   <para>
    Heterogeneous hypervisor support (&xen; and &kvm;).
   </para>
  </listitem>
 </itemizedlist>
 <para>
  &productname; is based on &sls;, &ostack;, &crow;, and
  &chef;. &sls; is used as the underlying operating system for all
  cloud infrastructure machines (also called nodes). The cloud management layer,
  &ostack;, works as the <quote>Cloud Operating
  System</quote>. &crow; and &chef; are used to automatically deploy
  and manage the &ostack; nodes from a central &admserv;.
 </para>
 <figure>
  <title>&productname; Infrastructure</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="cloud_node_structure.png" width="100%" format="PNG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="cloud_node_structure.png" width="100%" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>
 <para>
  &productname; is deployed to four different types of machines:
 </para>
 <itemizedlist mark="bullet" spacing="normal">
  <listitem>
   <para>
    one &admserv; for node deployment and management
   </para>
  </listitem>
  <listitem>
   <para>
    one or more &contrnode;s hosting the cloud management services
   </para>
  </listitem>
  <listitem>
   <para>
    several &compnode;s on which the &vmguest;s are started
   </para>
  </listitem>
  <listitem>
   <para>
    several &stornode;s for block and object storage
   </para>
  </listitem>
 </itemizedlist>
 <sect1 xml:id="sec.depl.arch.components.admin">
  <title>The &admserv;</title>

  <para>
   The &admserv; provides all services needed to manage and deploy all
   other nodes in the cloud. Most of these services are provided by the
   &crow; tool that&mdash;together with &chef;&mdash;automates all the
   required installation and configuration tasks. Among the services
   provided by the server are DHCP, DNS, NTP, PXE, TFTP.
  </para>

  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="cloud_admin-node-crowbar.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="cloud_admin-node-crowbar.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </informalfigure>

  <para>
   The &admserv; also hosts the software repositories for &sls; and
   &productname;. They are needed for node deployment. If no other
   sources for the software repositories are available it can optionally
   also host the &smtool; (&smt;), providing up-to-date repositories
   with updates and patches for all nodes.
  </para>
 </sect1>
 <sect1 xml:id="sec.depl.arch.components.control">
  <title>The &contrnode;(s)</title>

  <para>
   The &contrnode;(s) hosts all &ostack; components needed to
   orchestrate virtual machines deployed on the &compnode;s in the
   &cloud;. &ostack; on &cloud; uses a &postgres; database,
   which is also hosted on the &contrnode;(s). The following &ostack;
   components&mdash;if deployed&mdash;run on the &contrnode;(s):
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     &postgres; database
    </para>
   </listitem>
   <listitem>
    <para>
     &img; (&o_img;) for managing virtual images
    </para>
   </listitem>
   <listitem>
    <para>
     &ident; (&o_ident;), providing authentication and authorization
     for all &ostack; components
    </para>
   </listitem>
   <listitem>
    <para>
     &netw; (&o_netw;), providing <quote>networking as a
     service</quote> between interface devices managed by other &ostack;
     services
    </para>
   </listitem>
   <listitem>
    <para>
     &blockstore; (&o_blockstore;), providing block storage
    </para>
   </listitem>
   <listitem>
    <para>
     &ostack; &dash; (&o_dash;), providing the &dash;,
     a user Web interface for the &ostack; components
    </para>
   </listitem>
   <listitem>
    <para>
     &comp; (&o_comp;) management (Nova controller) including API and
     scheduler
    </para>
   </listitem>
   <listitem>
    <para>
     Message broker (RabbitMQ)
    </para>
   </listitem>
   <listitem>
    <para>
     &o_objstore; proxy server plus dispersion tools (health monitor) and
     &o_objstore; ring (index of objects, replicas, and
     devices). &o_objstore; provides object storage.
    </para>
   </listitem>
   <listitem>
    <para>
     &ceph; master cluster monitor (Calamari), needs to be deployed on a
     dedicated node
    </para>
   </listitem>
   <listitem>
    <para>
     &hawk;, a monitor for a pacemaker cluster (HA setup)
    </para>
   </listitem>
   <listitem>
    <para>
     &o_orch;, an orchestration engine
    </para>
   </listitem>
   <listitem>
    <para>
     &o_meter; server and agents. &o_meter; collects CPU and networking data
     for billing purposes.
    </para>
   </listitem>
   <listitem>
    <para>
     &o_dbaas;, a Database-as-a-Service, needs to be deployed on a
     dedicated node
    </para>
   </listitem>
  </itemizedlist>

  <para>
   Being a central point in the &cloud; architecture that runs a lot of
   services, a single &contrnode; can quickly become a performance
   bottleneck, especially in large &cloud; deployments. It is possible to
   distribute the services listed above on more than one &contrnode;, up
   to a setup where each service runs on its own node.
  </para>

  <para>
   Deploying certain parts of &netw; (&o_netw;) on a distinct node is
   a general recommendation for production clouds. See
   <xref linkend="sec.depl.ostack.quantum"/> for details.
  </para>

  <para>
   Hosting &ident; (&o_ident;) on a distinct node enables you to
   separate authentication and authorization services from other cloud
   services for security reasons. Another <quote>good candidate</quote> to
   be hosted on a separate node is &blockstore; (&o_blockstore;,
   particularly the cinder-volume role) when using local disks for storage.
   Deploying it on one or more separate node enables you to equip the node
   with storage and network hardware best suiting the service. &o_dbaas;, the
   &dbaas; for &cloud; and Calamari, the server for &ceph; management and
   monitoring, always need to be deployed on dedicated &contrnode;s.
  </para>

  <note>
   <title>Moving Services in an Existing Setup</title>
   <para>
    In case you plan to move a service in an already deployed &cloud;
    from one &contrnode; to another, it is strongly recommended to shut
    down or save <emphasis>all</emphasis> &vmguest;s before doing so. Restart
    them after having successfully re-deployed the services. Moving
    services also requires to stop them manually on the original
    &contrnode;.
<!-- See TODO for more
    information on &cloud; maintenance. -->
<!-- TODO vuntz 2013-12-04: actually, right now, this probably doesn't work well without manual intervention (to at least stop the services on the old node -->
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec.depl.arch.components.compute">
  <title>The &compnode;s</title>

  <para>
   The &compnode;s are the pool of machines on which the &vmguest;s
   are running. These machines need to be equipped with a sufficient number
   of CPUs and enough RAM to start several &vmguest;s. They also need to
   provide sufficient hard disk space, see
   <xref linkend="sec.depl.req.storage.hardware.compute"/> for details. The
   &contrnode; effectively distributes &vmguest;s within the pool of
   &compnode;s and provides the necessary network resources. The
   &ostack; component &comp; (Nova) runs on the &compnode;s and
   provides means for setting up, starting, and stopping virtual machines.
  </para>

  <para>
   &productname; supports several hypervisors such as &kvm;, &vmware;
   vSphere and &xen;. Each image that can be started with an &vmguest; is
   bound to one hypervisor. Each &compnode; can only run one hypervisor
   at a time. You can choose which hypervisor to run on which &compnode;
   when deploying the Nova &barcl;.
  </para>

 </sect1>
 <sect1 xml:id="sec.depl.arch.components.storage">
  <title>The &stornode;s</title>

  <para>
   The &stornode;s are the pool of machines providing object or block
   storage. Object storage is provided by the &ostack; &swift; component,
   while block storage is provided by &o_blockstore; which supports several
   different back-ends, among them &ceph;, which can be deployed during the
   installation. Deploying &swift; and &ceph; is optional.
  </para>
 </sect1>
 <sect1 xml:id="sec.depl.arch.components.ha">
  <title>&haSetup;</title>

  <para>
   A failure of components in &productname; can lead to system downtime
   and/or data loss. To prevent this, &productname; &productnumber;
   allows you to make all functions provided by the &contrnode;(s) highly
   available. During cloud deployment, you can set up a &ha; (HA) cluster
   consisting of several nodes. You can assign certain roles to this cluster
   instead of assigning them to individual nodes. As of &productname;
   &productnumber;, &contrnode;s and &compnode;s can be made highly available.
  </para>

  <para>
   For all HA-enabled roles, the respective functions are automatically
   handled by the clustering software &sle; &hasi;. The &hasi; uses
   the Pacemaker cluster stack with Pacemaker as cluster resource manager
   and &corosync; as messaging/infrastructure layer.
  </para>

  <para>
   You can view the cluster status and configuration with the cluster
   management tools &haweb; (&hawk;) or the
   <command>crm</command> shell.
  </para>

  <important>
   <title>Do Not Change the Configuration</title>
   <para>
    Use the cluster management tools only for <emphasis>viewing</emphasis>.
    All of the clustering configuration is done automatically via &crow;
    and &chef;. If you change anything via the cluster management tools
    you risk breaking the cluster. Changes done there may be reverted by the
    next run of &chef; anyway.
   </para>
  </important>

  <para>
   A failure of the &ostack; infrastructure services (running on the
   &contrnode;s) is the most crucial point of failure that can cause
   downtimes within the cloud. For more information on how to make those
   services highly-available and on how to avoid other potential points of
   failure in your cloud setup, refer to <xref linkend="sec.depl.req.ha"/>.
  </para>
 </sect1>
</chapter>
