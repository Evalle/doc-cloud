<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-daps:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "IGNORE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.adm.cli">
 <title>Using &ostack; Command Line Interfaces</title>
 <abstract>
  <para>The &ostack; project provides a variety of command line tools with
   which you can manage the services within your cloud and automate 
   administration tasks by using scripts. Each of the core &ostack; components 
   has its own command line tool.</para>
 </abstract>
 <!--taroth 2012-07-31: implementation of unified command lines tools is WIP:
  http://wiki.openstack.org/UnifiedCLI, 
  http://wiki.openstack.org/UnifiedCLI/Mapping, 
  http://wiki.openstack.org/UnifiedCLI/HumanInterfaceGuidelines,
  glance client  is part of that unifcation effort-->
 <sect1 id="cha.adm.cli.oview">
  <title>&ostack; Commands&mdash;Overview </title>
  <para>The following command line tools are available for the respective
  services' APIs:<remark>taroth 2012-08-03: DEVs, please check if list is correct 
  and complete</remark>
  </para>
  <variablelist>
   <varlistentry>
    <term>
     <command>keystone</command>
    </term>
    <listitem>
     <para>For managing users and projects. 
     Provided by the <systemitem class="resource">python-keystoneclient</systemitem> 
     package.</para>
     <!--taroth 2012-08-03:check: or <systemitem
     class="resource">openstack-keystone</systemitem> package???-->
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>nova</command>
    </term>
    <listitem>
     <para>For managing instances and flavors. Provided by the 
     <systemitem class="resource">python-novaclient</systemitem> package.</para>
      <!--taroth 2012-08-03:check: or <systemitem
     class="resource">openstack-nova</systemitem> package???-->
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>glance</command>
    </term>
    <listitem>
     <para>For managing images. Provided by the 
     <systemitem class="resource">python-glanceclient</systemitem> package.</para>
      <!--taroth 2012-08-03:check: or <systemitem
     class="resource">openstack-glance</systemitem> package???-->
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>swift</command>
    </term>
    <listitem>
     <para>For managing the object store. Provided by the 
     <systemitem class="resource">openstack-swift</systemitem> package.</para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>The &ostack; project currently aims to unify the multiple command line 
  tools. For details, refer to <ulink url="http://wiki.openstack.org/UnifiedCLI"/>
  and <ulink url="http://wiki.openstack.org/UnifiedCLI/Mapping"/>.
  <remark>taroth 2012-08-03: todo - check with bmwiedemann if the following is 
  only true for glance or also for the other commands</remark>
  Therefore, divergent variants of the command line tools listed above are available:
  the older ones are contained in the packages 
  <literal>openstack-<replaceable>SERVICE</replaceable>
   </literal>, the newer ones
  in the packages <literal>python_<replaceable>SERVICE</replaceable>client</literal>. 
  As those packages conflict, you cannot install both variants of a command in 
  parallel. This manual describes the use of FIXME.<!--
  the <command>glance</command> variant that is contained in 
  <systemitem class="resource">openstack-glance</systemitem>.-->
  </para>
  <para>
   <remark>taroth 2012-08-03: check if this is true for the old or new version
 of the commands or for both </remark>
 Help and detailed information about the individual options for the commands
 are available with</para>
  <screen>
   <replaceable>COMMAND</replaceable> help</screen>
  <para>or</para>
  <screen>
   <replaceable>COMMAND</replaceable> help <replaceable>SUBCOMMAND</replaceable>
  </screen>
  <para>For example: <command>glance&nbsp;help</command> or <command>glance&nbsp;help&nbsp;add</command>
  </para>
  <para>
   <remark>taroth 2012-08-03: todo - check if they can all be issued from a
  normal user account (I guess so because of the openrc file...)</remark>
  </para>
 <!--taroth 2012-08-03: todo - also mention minus minus dry-run or minus minus
 verbose?? move information about openrc file to here (see mvidner's mail from today)-->
 </sect1>
 <sect1 id="sec.adm.cli.rc">
  <title>&ostack; RC File</title>
  <para>To set the necessary environment variables for the &ostack; command line
  tools, you need to download and source an environment file, 
  <filename>openrc.sh</filename>. It is project-specific and contains the 
  credentials used by &comp;, &img;, and &ident; services. You can download it
  from the &cloud; &dash;. 
  </para>
   <procedure id="pro.adm.download.openrc">
    <title>Downloading the &ostack; RC File</title>
    <step>
     <para>
      <remark>taroth 2012-08-02: DEVs, can I download the openrc file as 
    admin only? or as any user? and </remark>
    Log in to the &cloud; &dash;.</para>
    </step>
    <step>
     <para>In the top-level row of the main screen, click 
    <menuchoice><guimenu>Settings</guimenu>
       <guimenu>&ostack; Credentials</guimenu>
      </menuchoice>.</para>
    </step>
    <step>
     <para>Select the project for which you want to download the &ostack; RC
     file, click <guimenu>Download RC File</guimenu> and save the file.
     </para>
    </step>
    <step>
     <para>Copy the <filename>openrc.sh</filename> file to the machine
     on which you want execute &ostack; commands, like uploading an image with
     the <command>glance</command> command.
     </para>
    </step>
    <step>
     <para>Start a shell and source the file to set the environment variables:</para>
     <screen>source openrc.sh</screen>
     <para>After sourcing the file, the environment variables are set for any &ostack; 
      command line tools that you want to execute from this shell. </para>
     </step>
   </procedure>
  </sect1>
 <sect1 id="sec.adm.cli.img">
  <title>Managing Images</title>
  <para>Images can only be uploaded to &productname; with the <command>glance</command>
  line tool. 
  </para>
  <sect2 id="sec.adm.cli.img.build">
   <title>Building Images with &susestudio;</title>
   <para>To build the images to use within the cloud, use &susestudio; or 
   &suseonsite;. For detailed information on how to build appliance images, refer 
   to the <citetitle>&suseonsite; Quick Start</citetitle> or the 
   <citetitle>&suseonsite; User Guide</citetitle>, available at 
   <ulink url="http://www.suse.com/documentation/suse_studio/"/>.</para>
   <note>
    <title>Image Requirements</title>
    <para>Make sure any images that you build for the cloud fulfill the following
   requirements:</para>
    <itemizedlist>
     <listitem>
      <para>The network is set to DHCP.</para>
     </listitem>
     <listitem>
      <para>The image does not include &yast;2 Firstboot.</para>
     </listitem>
     <listitem>
      <para>The image does not include any end-user license agreements (EULA)
       dialogs.</para>
     </listitem>
     <listitem>
      <para>The image contains the following package: 
      <systemitem class="resource">suse-ami-tools</systemitem>. The ami tools 
      are used for communication with the metadata API <remark>taroth 2012-08-01:
      DEVs, in &ostack;?</remark> and to pull keypairs into the virtual machine 
      that will run the image.</para>
     </listitem>
     <listitem>
      <para>The image has the following format: <literal>USB/Harddisk</literal>.
      </para>
     </listitem>
    </itemizedlist>
   </note>
  </sect2>
  <sect2 id="sec.adm.cli.img.upload">
   <title>Adding Images to &productname;</title>
   <para>After you have created one or multiple images as described in 
   <xref linkend="sec.adm.cli.img.build"/>, convert them to a 
   different format and upload them to &productname; as follows.</para>
   <para>
    <remark>taroth 2012-08-02: DEVs, please check - the following might be 
   true for python_glanceclient but not for openstack-glance</remark>
   With the glance client, you can connect to the &ostack; imaging service
   from any machine. <remark>taroth 2012-08-02: or does the machine running the glance
   client need to be part of the cloud?</remark></para>

   <para>
    <remark>taroth 2012-08-02: DEVs, what about opening ports in default
     security group? is that also a basic requirement for uploading images? or
     for using any of the nova, glance, or swift commands? - taroth 2012-08-03:
     sent mail to cloud-devel - taroth 2012-08-03: this can also be done via Web 
     UI or CLI</remark>
   </para>
   <!--2. Download the image to wingenfelder, unpack it and convert it to qcow2
   qemu -img convert -c -f raw -
3. ssh into cloud-admin and scp the image
   scp root@10.11.1.54:/tmp/myimage.qcow2 /tmp
4. Copy the image to the control node and remove it afterwards:
   scp /tmp/myimage.qcow2 root@control:/tmp && rm /tmp/myimage.qcow2
5. ssh into the control node
   ssh control
6. Upload the image and remove the copy
   glance add name="<NAME>" is_public=True container_format=bare \
   disk_format=qcow2 < /tmp/myimage.qcow2
   rm /tmp/myimage.qcow2
7. Remove the image from wingenfelder-->


   <procedure id="pro.adm.cli.img.upload">
    <title>Uploading Disk Images to &productname;</title>
    <step>
     <para>Download the disk image from &susestudio; and convert it into the 
     <literal>qcow2</literal> format (on a machine that has the 
     <systemitem class="resource">virt-utils</systemitem> installed):</para>
     <screen>qemu -img convert -c -f raw -O qcow2 <replaceable>image_file</replaceable>
      <replaceable>final_image_file</replaceable>
     </screen>
     <para>The <literal>qcow2</literal> format helps to optimize disk space as it consumes 
   disk space only when contents are written on it.</para>
    </step>
    <step>
     <para>Copy the <literal>qcow2</literal> image to the &contrnode;.
    <remark>taroth 2012-08-02: DEVs, is that correct? can't I upload it via 
    glance client from *anywhere*?</remark>
     </para>
    </step>
    <step>
     <para>
      In a shell, source the &ostack; RC file for the project that you
      want to upload an image to. 
      For details, refer to <xref linkend="pro.adm.download.openrc"/>.
      <remark>taroth 2012-08-02: todo - user will be prompted for a password, check which 
      one he needs to enter</remark>
     </para>
    </step>
    <step>
     <para>Upload the image with the following command:</para>
     <screen>glance add name="<replaceable>image_name</replaceable>" is_public=True container_format=bare \
   disk_format=qcow2 &lt; <replaceable>path_to_final_image_file</replaceable>
     </screen>
     <para>Glance does not check any image properties during upload, 
     therefore you need to specify the image's properties as command line options.</para>
     <itemizedlist>
      <listitem>
       <para>
        <option>name</option> (optional): Specifies a name with which the image will be listed
       in the &cloud; &dash; and in the command line interface.</para>
      </listitem>
      <listitem>
       <para>
        <option>is_public</option> (optional): Boolean value, default: 
        <literal>false</literal>. If set to <literal>true</literal>,
       the image is publicly available.<remark>taroth 2012-08-03: DEVs, what does 
       "publicly available" mean here? the image can be used (=a VM with this image 
       can be started) by any cloud user? can images also be bound to a certain project?
       what happens if the option is set to "false"?</remark>
       </para>
      </listitem>
      <listitem>
       <para>
        <option>container_format</option> (required):<remark>taroth 2012-08-03: DEVs, why 
        use "bare" here? the help text of the option is confusing and even 
        contradictory, so I cannot make sense any sense of that...</remark>
       </para>
      </listitem>
      <listitem>
       <para>
        <option>disk_format</option> (required): Specifies the disk format. In this case:
        <literal>qcow2</literal>
       </para>
      </listitem>
     </itemizedlist>
     <para>A message shows if the image upload has been successfull.
     The uploaded image will be shown in the &cloud; &dash;. When logged in
     as administrator, view them in the <guimenu>Images</guimenu>	category on the
     <guimenu>Admin</guimenu> tab, otherwise in the <guimenu>Images&amp;Snapshots</guimenu>
     category on the <guimenu>Project</guimenu> tab.   
     </para>
    </step>
   </procedure>
   <!--taroth 2012-08-03: more options and information: "glance help add"-->
  </sect2>
 </sect1>
 <sect1>
  <title>Launching Instances</title>

  <para>
   <remark>taroth 2012-06-26: FIXME</remark>
  </para>
 </sect1>
</chapter>
