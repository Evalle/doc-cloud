<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-daps:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "IGNORE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.adm.cli">
 <title>Using &ostack; Command Line Interfaces</title>
 <abstract>
  <para>The &ostack; project provides a variety of command line tools with
   which you can manage the services within your cloud and automate 
   administration tasks by using scripts. Each of the core &ostack; components 
   has its own command line tool.</para>
 </abstract>
 <!--taroth 2012-07-31: implementation of unified command lines tools is WIP:
  http://wiki.openstack.org/UnifiedCLI, 
  http://wiki.openstack.org/UnifiedCLI/Mapping, 
  http://wiki.openstack.org/UnifiedCLI/HumanInterfaceGuidelines,
  glance client  is part of that unifcation effort-->
 <sect1 id="cha.adm.cli.oview">
  <title>&ostack; Commands&mdash;Overview </title>
  <para>The following command line tools are available for the respective
  services' APIs:<remark>taroth 2012-08-03: DEVs, please check if list is correct 
  and complete</remark>
  </para>
  <variablelist>
   <varlistentry>
    <term>
     <command>keystone</command>
    </term>
    <listitem>
     <para>For managing users and projects. 
     Provided by the <systemitem class="resource">python-keystoneclient</systemitem> 
     package.</para>
     <!--taroth 2012-08-03:check: or <systemitem
     class="resource">openstack-keystone</systemitem> package???-->
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>nova</command>
    </term>
    <listitem>
     <para>For managing instances and flavors. Provided by the 
     <systemitem class="resource">python-novaclient</systemitem> package.</para>
      <!--taroth 2012-08-03:check: or <systemitem
     class="resource">openstack-nova</systemitem> package???-->
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>glance</command>
    </term>
    <listitem>
     <para>For managing images. Provided by the 
     <systemitem class="resource">python-glanceclient</systemitem> package.</para>
      <!--taroth 2012-08-03:check: or <systemitem
     class="resource">openstack-glance</systemitem> package???-->
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>swift</command>
    </term>
    <listitem>
     <para>For managing the object store. Provided by the 
     <systemitem class="resource">openstack-swift</systemitem> package.</para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>The &ostack; project currently aims to unify the multiple command line 
  tools. For details, refer to <ulink url="http://wiki.openstack.org/UnifiedCLI"/>
  and <ulink url="http://wiki.openstack.org/UnifiedCLI/Mapping"/>. Commands for 
  tasks that may also may executed from outside the cloud have recently been moved
  to the <literal>openstack-</literal>&nbsp;<replaceable>SERVICENAME</replaceable>
  packages.<remark>taroth 2012-08-06: DEVs is the following correct?</remark>
  Therefore, divergent variants of the command line tools are currently available:
  the older ones are contained in the packages 
  <literal>openstack-</literal>&nbsp;<replaceable>SERVICENAME</replaceable>, the newer
  ones in the packages <literal>python_<replaceable>SERVICENAME</replaceable>client</literal>. 
  As those packages conflict, you cannot install both variants of a command in 
  parallel.
  </para>
  <para>
   <remark>taroth 2012-08-06: DEVs, is the following true for the old or new version
 of the commands or for both?</remark>
 Help and detailed information about the individual commands, their subcommands 
 and  arguments are available with</para>
  <screen>
   <replaceable>COMMAND</replaceable> help</screen>
  <para>or</para>
  <screen>
   <replaceable>COMMAND</replaceable> help <replaceable>SUBCOMMAND</replaceable>
  </screen>
  <para>For example: <command>glance&nbsp;help</command> or <command>glance&nbsp;help&nbsp;add</command>
  </para>
 </sect1>
 <sect1 id="sec.adm.cli.rc">
  <title>&ostack; RC File</title>
  <para>To set the necessary environment variables for the &ostack; command line
  tools, you need to download and source an environment file, 
  <filename>openrc.sh</filename>. It is project-specific and contains the 
  credentials used by &ostack; &comp;, &img;, and &ident; services. You can 
  download it from the &cloud; &dash; (either as user <systemitem>admin</systemitem>
  or as any other user).
  </para>
  <procedure id="pro.adm.download.openrc">
   <title>Downloading the &ostack; RC File</title>
   <step>
    <para>Log in to the &cloud; &dash;.</para>
   </step>
   <step>
    <para>In the top-level row of the main screen, click 
    <menuchoice><guimenu>Settings</guimenu>
      <guimenu>&ostack; Credentials</guimenu>
     </menuchoice>.</para>
   </step>
   <step>
    <para>Select the project for which you want to download the &ostack; RC
     file, click <guimenu>Download RC File</guimenu> and save the file.
     </para>
   </step>
   <step>
    <para>Copy the <filename>openrc.sh</filename> file to the machine
     on which you want execute &ostack; commands (for example, uploading an image
     with the <command>glance</command> command).
     </para>
   </step>
   <step>
    <para>On any shell that you want to execute &ostack; commands from, 
    source the <filename>openrc.sh</filename> file for the respective
    project:</para>
    <screen>source openrc.sh</screen>
    <para>You will be prompted for an &ostack; password.</para>
   </step>
   <step>
    <para>Enter the &ostack; password of the user who downloaded the 
    <filename>openrc.sh</filename> file.
    </para>
    <para>With sourcing the file and entering the password, environment 
     variables are set for that shell. They allow the commands to 
     communicate to the &ostack; services running in the cloud.</para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec.adm.cli.projects.users">
  <title>Managing Projects and Users</title>
  <para>The <systemitem class="resource">python-keystoneclient</systemitem> 
  provides the <command>keystone</command> command line tool which you can use
  to manage projects and users from any machine outside the cloud. 
  Prior to using the tool, download and source an &ostack; RC file. 
  For details, refer to <xref linkend="sec.adm.cli.rc"/>.
  </para>
  <note>
   <title>Administrator Credentials</title>
   <para>Administering projects and users requires administrator credentials.
  Make sure to download and source the &ostack; RC file as administrator prior
  to running <command>keystone</command> commands. Alternatively, export the 
  respective environment variables, using the token or password authentication
  method. For details, refer to 
  <ulink url="http://docs.openstack.org/trunk/openstack-compute/admin/content/adding-users-tenants-and-roles-with-python-keystoneclient.html"></ulink>
   </para>
  </note>
  <sect2 id="sec.adm.cli.projects.manage">
   <title>Viewing, Creating, Disabling, or Deleting Projects </title>
   <para>Find some example commands for the key administration tasks below.</para>
   <variablelist>
    <varlistentry>
     <term>Listing All Projects</term>
     <listitem>
      <screen>keystone tenant-list</screen>
      <para>Lists all projects with their ID, name and the information
      if they are enabled or not.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Creating a Project</term>
     <listitem>
      <screen>keystone tenant-create --name <replaceable>PROJECT_NAME</replaceable>&nbsp;</screen>
      <para>Creates a new project with the specified name.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Temporarily Disabling a Project</term>
     <listitem>
      <screen>keystone tenant-update <replaceable>PROJECT_ID</replaceable> --enabled false</screen>
      <para>For the details about the impact, refer to 
       <xref linkend="il.disabled.projects"/> .</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Deleting a Project</term>
     <listitem>
      <screen>keystone tenant-delete <replaceable>PROJECT_ID</replaceable>&nbsp;</screen>
      <para>Deletes the specified project.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
  <sect2 id="sec.adm.cli.user.manage">
   <title>Viewing, Creating, Disabling, or Deleting User Accounts </title>
   <para>Find some example commands for the key administration tasks below.</para>
   <variablelist>
    <varlistentry>
     <term>Listing All Users</term>
     <listitem>
      <screen>keystone user-list</screen>
      <para>Lists all user accounts with their ID, name, e-mail address, and the
      information if they are enabled or not.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Creating a User Account</term>
     <listitem>
      <screen>keystone user-create --name <replaceable>USER_NAME</replaceable> \
  --tenant_id <replaceable>PROJECT_ID</replaceable> --pass <replaceable>PRELIM_PASSWD</replaceable>
      </screen>
      <para>Creates a new user with the specified name. While the only required 
      argument is <option>--name</option>, at least specify the optional parameters
      <option>--tenant_id</option> and <option>--pass</option>. Otherwise 
      the newly created user cannot log in to the &cloud; &dash;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Temporarily Disabling a User Account</term>
     <listitem>
      <screen>keystone user-update <replaceable>USER_ID</replaceable> --enabled false</screen>
      <para>If you disable a user account, the user can no longer log in, but his
    data is kept so that the account can be re-enabled at any time.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Deleting a User Account</term>
     <listitem>
      <screen>keystone user-delete <replaceable>USER_ID</replaceable>
      </screen>
      <para>Deletes the specified user account.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
  <!--taroth 2012-08-08: stopped here today, todo: how to assign users to projects
  (and how to assign roles while doing so)?-->
 </sect1>

 <sect1 id="sec.adm.cli.img">
  <title>Managing Images</title>
  <remark>taroth 2012-08-06: is image management generally a task executed
   by the cloud admin? or can a user also upload and manage images?</remark>
  <para>Images can only be uploaded to &productname; with the 
   <command>glance</command> command line tool. Images are owned by projects and
   can be <literal>private</literal> (accessible to members of the particular project
   only) or <literal>public</literal> (accessible to members of all projects).
   Private images can also be explicitly shared with other projects, so that
   members of those projects can access the images, too. Any image uploaded to 
   Glance will  get an <literal>owner</literal> attribute. Per default, ownership 
   is set to the primary project of the user that uploads the image.</para>
   <!--taroth 2012-08-08: source: 
   http://docs.openstack.org/diablo/openstack-image-service/admin/os-image-adminguide-diablo.pdf-->
  <sect2 id="sec.adm.cli.img.build">
   <title>Building Images with &susestudio;</title>
   <para>To build the images to use within the cloud, use &susestudio; or 
   &suseonsite;. For detailed information on how to build appliance images, refer 
   to the <citetitle>&suseonsite; Quick Start</citetitle> or the 
   <citetitle>&suseonsite; User Guide</citetitle>, available at 
   <ulink url="http://www.suse.com/documentation/suse_studio/"/>.</para>
   <note>
    <title>Image Requirements</title>
    <para>Make sure any images that you build for the cloud fulfill the following
   requirements:</para>
    <itemizedlist>
     <listitem>
      <para>The network is set to DHCP.</para>
     </listitem>
     <listitem>
      <para>The image does not include &yast;2 Firstboot.</para>
     </listitem>
     <listitem>
      <para>The image does not include any end-user license agreements (EULA)
       dialogs.</para>
     </listitem>
     <listitem>
      <para>The image contains the following package: 
      <systemitem class="resource">suse-ami-tools</systemitem>. The ami tools 
      are used for communication with the metadata API <remark>taroth 2012-08-01:
      DEVs, in &ostack;?</remark> and to pull keypairs into the virtual machine 
      that will run the image.</para>
     </listitem>
     <listitem>
      <para>The image has the following format: <literal>USB/Harddisk</literal>.
      </para>
     </listitem>
    </itemizedlist>
   </note>
   <para>taroth 2012-08-09: todo - check with cthiel if it is possible to provide 
   an update channel for the images (include update repos etc.)</para>
  </sect2>
  <sect2 id="sec.adm.cli.img.upload">
   <title>Adding Images</title>
   <para>After you have created one or multiple images as described in 
   <xref linkend="sec.adm.cli.img.build"/>, convert them to <literal>qcow2</literal>
   format and upload them to &productname; as follows. </para>
   <procedure id="pro.adm.cli.img.convert">
    <title>Converting Disk Images to <literal>qcow2</literal> Format</title>
    <para>The <literal>qcow2</literal> format helps to optimize disk space as 
     it consumes disk space only when contents are written on it.</para>
    <step>
     <para>Make sure the <systemitem class="resource">virt-utils</systemitem> 
    package is installed on the machine used for conversion.</para>
    </step>
    <step>
     <para>Download the disk image from &susestudio;.</para>
    </step>
    <step>
     <para>Convert the image:</para>
     <screen>qemu -img convert -c -f raw -O qcow2&nbsp;<replaceable>IMAGE_FILE</replaceable>&nbsp;<replaceable>FINAL_IMAGE_FILE</replaceable>
     </screen>
    </step>
   </procedure>
   <procedure id="pro.adm.cli.img.upload">
    <title>Uploading Disk Images to &productname;</title>
    <para>The following procedure shows how to upload a disk image using the
   <command>glance</command> variant that is contained in the package
   <systemitem class="resource">openstack-glance</systemitem>.
   <remark>taroth 2012-08-09: DEVs, are admin credentials needed for that?</remark>
    </para>
    <step>
     <para>Copy the <literal>qcow2</literal> image to the &contrnode;.
    <remark>taroth 2012-08-02: DEVs, is that correct? if I used the 
    glance client instead, can I upload the image from *anywhere*?</remark>
     </para>
    </step>
    <step>
     <para>
      In a shell, source the &ostack; RC file for the project that you
      want to upload an image to. For details, refer to 
      <xref linkend="sec.adm.cli.rc"/>.
     </para>
    </step>
    <step>
     <para>Upload the image with the following command:</para>
     <screen>glance add name="<replaceable>IMAGE_NAME</replaceable>" is_public=True container_format=bare \
  disk_format=qcow2 &lt; <replaceable>PATH_TO_FINAL_IMAGE_FILE</replaceable>&nbsp;</screen>
     <para>Glance does not check any image properties during upload, 
     therefore you need to specify the image's properties as command line options.</para>
     <!--taroth 2012-08-07: either move the following to phrases in entity-decl.ent 
     or to separate overview chapter-->
     <itemizedlist>
      <listitem>
       <para>
        <option>name</option> (optional): Specifies a name with which the image will be listed
       in the &cloud; &dash; and in the command line interface.</para>
      </listitem>
      <listitem>
       <para>
        <option>is_public</option> (optional): Boolean value, default: 
        <literal>false</literal>. If set to <literal>true</literal>,
       the image is publicly available.
       </para>
      </listitem>
      <listitem>
       <para>
        <option>container_format</option> (required):<remark>taroth 2012-08-03: DEVs, why 
        use "bare" here? the help text of the option is confusing and even 
        contradictory, so I cannot make sense any sense of that...</remark>
        For details, refer to 
      <ulink url="http://docs.openstack.org/developer/glance/formats.html"/>.
       </para>
      </listitem>
      <listitem>
       <para>
        <option>disk_format</option> (required): Specifies the disk format. 
        In this case: <literal>qcow2</literal>. For details, refer to 
      <ulink url="http://docs.openstack.org/developer/glance/formats.html"/>.
       </para>
      </listitem>
     </itemizedlist>
     <para>If the image upload has been successful, a message appears, displaying
     the ID which has been assigned to the image.</para>
    </step>
   </procedure>
   <para>taroth 2012-08-09: todo - check with cthiel if this is true or
   if Studio can inject any files into an image which make it possible to
   change the image</para>
   <note>
    <title>Updating Images</title>
    <para>After having uploaded an image to &cloud;, the image contents cannot be
   modified (only the image's metadata). To update image contents, you need to
   delete the current image and upload a modified version of the image.</para>
   </note>
   <para>To modify the metadata of an image, use the <command>glance update</command>
  command.</para>
  <para>taroth 2012-08-09: todo - depending on decision if to support mixed 
  KVM/XEn environment for &compnode;s for GA, add information about img
  proprties by jfehlig (ML)</para>
  </sect2>
  <sect2 id="sec.adm.cli.img.view">
   <title>Viewing Images and Image Properties</title>
   <para>In the following, find some examples on how to view images or image
   properties that are available in Glance.</para>
   <variablelist>
    <varlistentry>
     <term>Listing Images</term>
     <listitem>
      <screen>glance index</screen>
      <para>Lists ID, name, disk format, and container format for all publicy 
      available images in Glance.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Listing Images With Details</term>
     <listitem>
      <screen>glance details</screen>
      <para>Shows detailed information for all publicly available images in
      Glance.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Showing Metadata for a Particular Image</term>
     <listitem>
      <screen>glance show <replaceable>IMAGE_ID</replaceable>&nbsp;</screen>
      <para>Shows metadata of the specified image.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
  <sect2 id="sec.adm.cli.img.remove">
   <title>Removing Disk Images from Glance</title>
   <para>To delete an image, you need to know the image's ID. If necessary, 
    look it up as described in <xref linkend="sec.adm.cli.img.view"/>. Delete 
    the image with the following command:</para>
   <screen>glance delete <replaceable>IMAGE_ID</replaceable>&nbsp;</screen>
   <para>If you need to delete all images and all image metadata, use the 
   <command>glance clear</command> command.</para>
  </sect2>
  <sect2 id="sec.adm.cli.img.member">
   <title>Viewing and Modifying Membership of Private Images</title>
   <para>In the following, find some examples on how to view or modify membership
   of private images:</para>
   <variablelist>
    <varlistentry>
     <term>Listing Members a Private Image is Shared With</term>
     <listitem>
      <screen>glance image-members <replaceable>IMAGE_ID</replaceable>&nbsp;</screen>
      <para>Lists the IDs of the projects whose members have access to the 
      private image.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Listing Private Images Shared With a Member</term>
     <listitem>
      <screen>glance member-images <replaceable>PROJECT_ID</replaceable>&nbsp;</screen>
      <para>Lists the IDs of private images that members of the specified project 
      can access.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Granting Members Access to a Private Image</term>
     <listitem>
      <screen>glance member-add <replaceable>IMAGE_ID</replaceable>&nbsp;<replaceable>PROJECT_ID</replaceable> [--can-share]</screen>
      <para>Grants the specified member access to the specified private image.</para>
      <para>By adding the <option>--can-share</option> option, you can allow
      the members to further share the image. <remark>taroth 2012-08-08: however that
      may work, no idea...</remark>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Revoking Member Access to a Private Image</term>
     <listitem>
      <screen>glance member-delete <replaceable>IMAGE_ID</replaceable>&nbsp;<replaceable>PROJECT_ID</replaceable>&nbsp;</screen>
      <para>Revokes the access of the specified member to the specified private 
      image.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Replacing Membership For Private Images</term>
     <listitem>
      <screen>glance members-replace <replaceable>IMAGE_ID</replaceable>&nbsp;<replaceable>PROJECT_ID</replaceable> [--can-share]</screen>
      <para>Revokes access of <emphasis>all</emphasis> current members to the 
      specified private image. Instead, gives access to all users who are members
      of the specified project.</para>
      <para>By adding the <option>--can-share</option> option, you can allow
      the members to further share the image. <remark>taroth 2012-08-08: however that
      may work, no idea...</remark>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 id="sec.adm.cli.flavors">
  <title>Managing Flavors </title>
  <para>
   <remark>taroth 2012-08-08: todo - nova flavor-create, flavor-list etc.</remark>
  </para>
 </sect1>
 <sect1 id="sec.adm.cli.quotas">
  <title>Setting Quotas</title>
  <para>
   <remark>taroth 2012-08-08: todo - nova-manage projectquota</remark>
  </para>
 </sect1>
</chapter>
