<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-daps:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "IGNORE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.adm.cli">
 <title>Using &ostack; Command Line Interfaces</title>
 <abstract>
  <para>The &ostack; project provides a variety of command line tools with
   which you can manage the services within your cloud. The command line
   interface also allows for automation of administration tasks as you can use
   the command in scripts. Each <remark>?</remark> of the core &ostack;
   services has its own command line tool: for example, use
   <command>keystone</command> for managing users and projects,
   <command>nova</command> for managing instances and flavors, or
   <command>glance</command> for managing images.</para>
 </abstract>
 <remark>taroth 2012-07-31: todo - find out how far implementation of unified 
command lines tools is: http://wiki.openstack.org/UnifiedCLI, 
http://wiki.openstack.org/UnifiedCLI/Mapping, 
http://wiki.openstack.org/UnifiedCLI/HumanInterfaceGuidelines</remark>
 <sect1 id="sec.adm.cli.img">
  <title>Managing Images</title>
  <para>Images can only be uploaded to &productname; with the <command>glance</command>
  line tool. As the &ostack; project currently aims to unify the multiple command 
  line tools, there are currently two divergent variants of the <command>glance</command>
  command available: the older one is contained in the package 
  <systemitem class="resource">openstack-glance</systemitem>, the newer one in
  the package <systemitem class="resource">python_glanceclient</systemitem>. 
  You cannot install both packages in parallel. This manual describes the use of 
  the <command>glance</command> variant that is contained in 
  <systemitem class="resource">openstack-glance</systemitem>.
  </para>
  <sect2 id="sec.adm.cli.img.build">
   <title>Building Images with &susestudio;</title>
   <para>To build the images to use within the cloud, use &susestudio; or 
   &suseonsite;. For detailed information on how to build appliance images, refer 
   to the <citetitle>&suseonsite; Quick Start</citetitle> or the 
   <citetitle>&suseonsite; User Guide</citetitle>, available at 
   <ulink url="http://www.suse.com/documentation/suse_studio/"/>.</para>
   <note>
    <title>Image Requirements</title>
    <para>Make sure any images for the cloud fulfill the following
   requirements:</para>
    <itemizedlist>
     <listitem>
      <para>The network is set to DHCP.</para>
     </listitem>
     <listitem>
      <para>The image does not include &yast;2 Firstboot.</para>
     </listitem>
     <listitem>
      <para>The image does not include any end-user license agreements (EULA)
       dialogs.</para>
     </listitem>
     <listitem>
      <para>The image contains the following package: 
      <systemitem class="resource">suse-ami-tools</systemitem>. The ami tools 
      are used for communication with the metadata API <remark>taroth 2012-08-01:
      DEVs, in &ostack;?</remark> and to pull keypairs int the virtual machine that
       will run the image.</para>
     </listitem>
     <listitem>
      <para>The image has the following format: <literal>USB/Harddisk</literal>.
      </para>
     </listitem>
    </itemizedlist>
   </note>
  </sect2>
  <sect2 id="sec.adm.cli.img.upload">
   <title>Adding Images to &productname;</title>
   <para>After you have created one or multiple images as described in 
   <xref linkend="sec.adm.cli.img.build"/>, convert them to a 
   different format and upload them to &productname; as follows. </para>
   
   <!--2. Download the image to wingenfelder, unpack it and convert it to qcow2
   qemu -img convert -c -f raw -
3. ssh into cloud-admin and scp the image
   scp root@10.11.1.54:/tmp/myimage.qcow2 /tmp
4. Copy the image to the control node and remove it afterwards:
   scp /tmp/myimage.qcow2 root@control:/tmp && rm /tmp/myimage.qcow2
5. ssh into the control node
   ssh control
6. Upload the image and remove the copy
   glance add name="<NAME>" is_public=True container_format=bare \
   disk_format=qcow2 < /tmp/myimage.qcow2
   rm /tmp/myimage.qcow2
7. Remove the image from wingenfelder-->
   <procedure id="pro.adm.cli.img.upload">
    <title>Uploading Images to &productname;</title>
    <step>
     <para>Download the image from &susestudio; and convert it into the 
     <literal>qcow2</literal> format:<remark>taroth 2012-08-01: todo - add 
     short explanation about the format and add it to glossary!</remark></para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1>
  <title>Launching Instances</title>

  <para>
   <remark>taroth 2012-06-26: FIXME</remark>
  </para>
 </sect1>
</chapter>
