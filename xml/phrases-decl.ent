<!-- ============================================================= -->
<!--                    Phrases                                  -->
<!-- ============================================================= -->

<!ENTITY prod-descr-short
' &productnamereg; is an open source software solution that provides the
  fundamental capabilities to deploy and manage a cloud infrastructure
  based on &sle;. &productname; is powered by &ostack;, the leading
  community-driven, open source cloud infrastructure project. It seamlessly
  manages and provisions workloads across a heterogeneous cloud environment
  in a secure compliant, and fully-supported manner. The product tightly
  integrates with other &suse; technologies and with the &suse; maintenance
  and support infrastructure.'>

<!ENTITY dash-descr-short
 ' The &productnamereg; &dash; is a Web interface that enables cloud
   administrators and users to manage various &ostack; services. It
   is based on &ostack; &dash; (also known under its codename 
   <literal>Horizon</literal>).'>
 
<!ENTITY cli-descr-short
 ' <para>
   The &ostack; project provides a variety of command line tools with which
   you can manage the services within your cloud and automate tasks by using 
   scripts. Each of the core &ostack; components has its own
   command line tool.
  </para>'>   
   
<!ENTITY dash-req   
  '<para>
   The following requirements need to be fulfilled to access the &cloud;
   &dash;:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     The cloud operator has set up &cloud;.</para>
   </listitem>
   <listitem>
    <para>
     You have a recent Web browser that supports HTML5. It must have cookies
     and JavaScript enabled. For using the &dash;&apos;s VNC client, which is
     based on <literal>noVNC</literal>, your browser needs to support HTML5
     Canvas and HTML5 WebSockets. For more details and a list of browsers
     that support <literal>noVNC</literal>, refer to
     <ulink url="https://github.com/kanaka/noVNC/blob/master/README.md"/>,
     and
     <ulink url="https://github.com/kanaka/noVNC/wiki/Browser-support"/>,
     respectively.
    </para>
   </listitem>
  </itemizedlist>'>
  
<!ENTITY dash-login
' <para>
    To access the &cloud; &dash;, ask the cloud operator for the following
    information:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Hostname or (public) IP address of the &cloud; &dash;. (The &dash; is
      available on the node that has the <literal>nova-dashboard
      server</literal> role.)
     </para>
    </listitem>
    <listitem>
     <para>
      Username and password of the cloud administrator or cloud user with which you
      can log in to &cloud; &dash;.
     </para>
    </listitem>
   </itemizedlist>
   <procedure>
    <step>
     <para>
      Start a Web browser and make sure that JavaScript and cookies are
      enabled.
<!--taroth 2012-07-04: DEVs, does the machine running 
      the browser need to be in the same network like the node which provides the 
      WEB UI? or can it be accessed from anywhere? cthiel 2012-07-05: that depends 
      on the network setup of the customer-->
     </para>
    </step>
    <step>
     <para>
      As a URL, enter the hostname or IP address that you got from the cloud operator.
     </para>
<screen>https://<replaceable>IP_ADDRESS_OR_HOSTNAME</replaceable>/</screen>
     <note>
      <title>Certificate Warning</title>
      <para>
       Depending on your browser and browser options, you may get a
       certificate warning when trying to access the URL for the first time.
       (In case no certificate is provided when setting up the &dash;, 
       &productname; uses a self-signed certificate that is not
       considered trustworthy by default).
      </para>
      <para>In this case, verify the certificate.</para> 
      <para>
       To proceed anyway, you can add an exception in the browser to bypass
       the warning.
      </para>
     </note>
    </step>
    <step>
     <para>
      On the &cloud; &dash; login screen, enter the <guimenu>User
      Name</guimenu> and <guimenu>Password</guimenu> and click <guimenu>Sign
      In</guimenu>.
     </para>
    </step>
   </procedure>'>
   
<!ENTITY dash-main-screen
'<para>
    The top-level row of the main screen shows the username with which you
    are logged in. It also lets you access the
    <guimenu>Settings</guimenu> (regarding language and timezone), the
    <guimenu>Help</guimenu> pages, or lets you <guimenu>Sign Out</guimenu> of the
    Web interface.
   </para>
   <note>
    <title>Available Functions</title>
    <para>
     The visible tabs and functions in the &dash; depend on the access
     permissions of the user that is logged in. They are defined by roles.
    </para>
   </note>'>
   
<!ENTITY dash-project-tab   
'<figure>
     <title>&productname; &dash;&mdash;<guimenu>Project</guimenu> Tab</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="cloud_dash_project.png" width="100&#37;" format="PNG" />
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="cloud_dash_project.png" width="80&#37;" format="PNG" />
      </imageobject>
     </mediaobject>
    </figure>
    <para>
     Select a <guimenu>Project</guimenu> from the drop-down list on the
     left-hand side to access the following categories. They are sorted into the
     groups: <guimenu>Manage Compute</guimenu>, 
     <guimenu>Manage Network</guimenu>, and 
     <guimenu>Object Store</guimenu>.
    </para>
    <variablelist><title>Manage Compute</title>
     <varlistentry>
      <term><guimenu>Overview</guimenu>
      </term>
      <listitem>
       <para>
        Shows basic reports on the project and lets you track usage.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Instances</guimenu>
      </term>
      <listitem>
       <para>
        Lists instances launched by users of the project. From here, 
        you can launch, terminate, pause, or reboot any instances, connect to them via
        VNC or create a snapshot of an instance.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Volumes</guimenu>
      </term>
      <listitem>
       <para>
        Lists volumes created by users of the project. Form here, you can create
        volumes and attach them to instances.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Images &amp; Snapshots</guimenu>
      </term>
      <listitem>
       <para>
        Lists images, instance snapshots and volume snapshots created by users of the project, plus any
        images that are publicly available, or that have been shared with the
        current user. From here, you can launch instances from images or from
        instance snapshots.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Access &amp; Security</guimenu>
      </term>
      <listitem>
       <para>
        Lets you manage security groups and keypairs, allocate or release
        floating IP addresses, and access the API and download RC files.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    
    <variablelist><title>Manage Network</title>
     <varlistentry>
      <term><guimenu>Networks</guimenu>
      </term>
      <listitem>
       <para>Lets you create networks and subnets.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Routers</guimenu>
      </term>
      <listitem>
       <para>Lets you create routers and set gateways.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Network Topology</guimenu>
      </term>
      <listitem>
       <para>Displays a graphical representation of the network topology. From
       here, you can also launch instances, and create networks or routers.</para>
      </listitem>
     </varlistentry>
     </variablelist>
     
     <variablelist><title>Object Store</title>
     <varlistentry>
      <term><guimenu>Containers</guimenu>
      </term>
      <listitem>
       <para>Lets you create containers and upload objects to &ostack;
       &objstore;.</para>
      </listitem>
     </varlistentry>
     </variablelist>'>
    
<!ENTITY rc-file-usage 
 '<para>
   To set the necessary environment variables for the &ostack; command line
   tools, you need to download and source an environment file, the &ostack;
   RC file. It contains the credentials used by &ostack; &comp;, &img;, and 
   &ident; services for a specific project. You can download it from the 
   &cloud; &dash;, either as user <systemitem>admin</systemitem> or
   as any other user. The filename indicates which credentials are contained:
   If the file has been downloaded by the <systemitem>admin</systemitem> user, 
   the resulting filename is <filename>admin-openrc.sh</filename>. If the file
   had been downloaded with user credentials only, the filename contains the
   name of the project for which the RC file is valid:
   <filename><replaceable>PROJECTNAME</replaceable>-openstack.rc</filename>.
   </para>
   <para>The RC file requires running Bash or Bourne shell (sh) as shell environment. 
  </para>

  <procedure>
   <title>Downloading the &ostack; RC File</title>
   <step>
    <para>
     Log in to the &cloud; &dash;.
    </para>
   </step>
   <step>
    <para>On the <guimenu>Project</guimenu> tab, select the project for which 
    you want to download the &ostack; RC file from the <guimenu>Current
    Project</guimenu> drop-down list.
    </para>
   </step>
   <step><para>Select the <guimenu>Access &amp; Security</guimenu>
   category.</para></step>
   <step>
    <para>Click <guimenu>Download &ostack; RC File</guimenu> and save the file.
    </para>
   </step>
   <step>
    <para>
     Copy the <filename>openrc.sh</filename> file to the machine on which
     you want to execute &ostack; commands (for example, uploading an image
     with the <command>glance</command> command).
    </para>
   </step>
   <step>
    <para>
     On any shell that you want to execute &ostack; commands from, source
     the <filename>openrc.sh</filename> file for the respective project:
    </para>
    <screen>source openrc.sh</screen>
    <para>
     You will be prompted for an &ostack; password.
    </para>
   </step>
   <step>
    <para>
     Enter the &ostack; password of the user who downloaded the
     <filename>openrc.sh</filename> file.
    </para>
    <para>
     With sourcing the file and entering the password, environment variables
     are set for that shell. They allow the commands to communicate to the
     &ostack; services running in the cloud.
    </para>
   </step>
  </procedure>'>
    

<!ENTITY basics-abstract
'<abstract>
  <para>In this chapter, we will introduce basic concepts that you should know 
  for a deeper understanding of the requirements and relationship between
  individual tasks to be executed by administrators or users.
  In the following chapters, you learn how to execute the key tasks either with
  the &cloud; Web interface or with the command line tools. </para>
 </abstract>'>
 
<!ENTITY highlevel-roles
'<para>In &productname;, there are several high-level user roles (or viewpoints)
  that we need to discriminate:</para>
  <variablelist>
   <varlistentry>
    <term>&cloud; Operator</term>
    <listitem>
     <para>Installs and deploys &productname;. For detailed information about the
      operator&apos;s tasks and how to solve them, refer to &cloud; &clouddeploy;.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&cloud; Administrator</term>
    <listitem>
     <para>Manages projects, users, images, flavors, and quotas within &productname;.
     For detailed information about the administrator&apos;s tasks and how to solve 
     them, refer to &cloud; &cloudadmin;.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&cloud; User</term>
    <listitem>
     <para>End-user who launches and manages instances, can create snapshots, and
     use volumes for persistent storage within &productname;. For detailed 
     information about the user&apos;s tasks and how to solve them, refer to 
     &cloud; &clouduser;.</para>
    </listitem>
   </varlistentry>
  </variablelist>'>

<!ENTITY projects
 '<para>
   &productname; enables you to manage projects independently from each
   other. Projects represent different organizational units in the cloud to which
   users can be assigned. Both project and user management are cloud 
   administrator&apos;s tasks.</para>
  <para>During the basic system setup, the cloud operator needs
   to minimally define one project, one user, and one role to link the project 
   and user. Roles define which actions users are allowed to perform.
  </para>'>
  
 <!ENTITY project-disable
 '<para>
    Projects can be created, deleted, or temporarily disabled by cloud 
    administrators. Disabling a project has the following consequences:
   </para>
  <itemizedlist id="il.disabled.projects">
   <title>Consequences of Temporarily Disabling a Project</title>
   <listitem>
    <para>
      In the &cloud; &dash;, the project can no longer be accessed from the 
      <guimenu>Project</guimenu> drop-down list on the <guimenu>Project</guimenu>
      tab.
     </para>
   </listitem>
   <listitem>
    <para>
      Users that are only members of the disabled project can no longer log
      in.
     </para>
   </listitem>
   <listitem>
    <para>
      It is impossible to launch new instances for a disabled project.
      Instances already running are not automatically terminated
      though&mdash;you have to stop them manually.
     </para>
   </listitem>
   <listitem>
    <para>
      All data of a disabled project is kept so that the project can be
      re-enabled at any time.
     </para>
   </listitem>
  </itemizedlist>'>
  
<!ENTITY users
'<para>Users are members of one or multiple projects. Both project and user 
   management are cloud administrator&apos;s tasks. When a new user account
   is created, the user has to be assigned to a primary project. The user can 
   also be assigned to additional projects. </para>
   <para>User accounts can be created, deleted, or temporarily deactivated. If a 
   user account is deactivated, the user can no longer log in, but his data is 
   kept so that the account can be re-enabled at any time. 
  </para>'>
  
  <!ENTITY roles
  '<para>Roles define the actions that the user is allowed to perform and are configured by
       the cloud operator in &ostack; &ident; (Keystone). Out of the box, &ostack;
       comes with two default roles:</para>
       <itemizedlist>
       <listitem><para><literal>member</literal>: a typical user.</para></listitem>
       <listitem><para><literal>admin</literal>: a super user with full
       permission across <emphasis>all</emphasis> projects.</para></listitem>
       </itemizedlist>
       <para>Actions are  defined per &ostack; service in the respective
       <filename>/etc/[SERVICE_CODENAME]/policy.json</filename> file, for
       example in <filename>/etc/nova/policy.json</filename> for the &comp;
       (Nova) service. For details, refer to
       <ulink
       url="http://docs.openstack.org/essex/openstack-compute/install/content/keystone-concepts.html"/>.
       </para>'>
       <!--taroth 2012-08-02: who defines roles and actions? operator? admin? this also 
       defines where it should be documented - cthiel 2012-11-16: generally, operator
        does so, but roles are not changeable in Cloud 1.0 -->
<!--taroth 2012-08-02: info from the URL above-->
<!--The /etc/[SERVICE_CODENAME]/policy.json controls what users are allowed to do for a
       given service. For example, /etc/nova/policy.json specifies the access policy for the &comp;
       service, /etc/glance/policy.json specifies the access policy for the Image service, and
       /etc/keystone/policy.json specifies the access policy for the &ident; service. The default
       policy.json files in the &comp;, &ident;, and &img; service recognize only the admin role:
       all operations that do not require the admin role will be accessible by any user that has any
       role in a tenant. If you wish to restrict users from performing operations in, say, the
       &comp; service, you need to create a role in the &ident; service and then modify
       /etc/nova/policy.json so that this role is required for &comp; operations.-->
  
<!ENTITY role-admin-warn
'<important><title>Admin Role: Administrative Rights Across the Cloud</title>
<para>The <literal>admin</literal> role is global. If you assign a user to a
project and give him the <literal>admin</literal> role, the role is not
restricted to the current project. Instead, the user will be
granted full administrative rights across <emphasis>all</emphasis> projects.</para>
</important>'>
  
<!ENTITY images
  '<para>In the &productname; context, images are virtual disk images that represent 
   the contents and structure of a storage medium or device, such as a hard drive, 
   in a single file. Images are used as a template from which a virtual machine
   can be started. For starting a virtual machine, &productname; always uses
   a copy of the image.</para>'>
   
<!ENTITY img-manage
'<para>Permissions to manage images are defined by the cloud operator 
during setup of &productname;. Image upload and management may be restricted 
to cloud administrators or cloud operators only.</para>
<para>After uploading an image to &ostack; &img;, it cannot be changed any more 
(<quote>golden image</quote>).</para>
'>   
   
 <!ENTITY img-props 
 '<para>Images have both contents and meta-data; the latter are also called 
  properties. The following properties can be attached to an image in &cloud;. 
  Set them from the command line when uploading or modifying images. 
   <!--taroth 2012-10-01: todo - check the remaining option names and add
  if optional or required--> 
   </para>
  
  <variablelist>
   <title>Image Properties</title>
   <varlistentry>
    <term>Name (<option>--name</option>, optional)</term>
    <listitem>
     <para>
       Specifies a name with which the image will be listed in the 
       &cloud; &dash; and in the command line interface. 
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Kernel ID (optional)</term>
    <listitem>
     <para>
      The image&apos;s kernel ID. This parameter is only needed if an external
      Kernel is associated with the image. The ID points to the Kernel
      glance image.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Ramdisk ID (optional)</term>
    <listitem>
     <para>
      The image&apos;s ramdisk ID. This parameter is only needed if an external
      ramdisk is associated with the image. The ID points to the ramdisk
      glance image.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Architecture (optional)</term>
    <listitem>
     <para>
      The machine architecture required by the image. For example:
      <literal>x86_64</literal>, <literal>arm</literal>, and
      <literal>ppc64</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Container Format (<option>--container-format</option>, optional)</term>
    <listitem>
     <para>
       Indicates if the VM image&apos;s file format contains metadata about the actual virtual
        machine. Set it to <literal>bare</literal> as the container format
        string is not currently used in any &ostack; components anyway. For
        details, refer to
        <ulink url="http://docs.openstack.org/developer/glance/formats.html"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Disk Format (<option>--disk-format</option>, required)</term>
    <listitem>
     <para>
      Specifies the image&apos;s disk format. Example formats include
      <literal>raw</literal>, <literal>qcow2</literal>, and
      <literal>ami</literal>. For details, refer to
      <ulink url="http://docs.openstack.org/developer/glance/formats.html"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Public (<option>--is-public</option>, optional)</term>
    <listitem>
     <para>Boolean value, default: <literal>false</literal>. If set to 
      <literal>true</literal>, the  image is publicly available.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Hypervisor Type (optional)</term>
    <listitem>
     <para>If your cloud consists of both &kvm; and &xen; nodes, specify at least
     the hypervisor type the image requires, otherwise it might be scheduled on
     an incompatible node. 
     For example:</para>
     <screen>hypervisor_type=xen</screen>
     <para>Further example are: <literal>kvm</literal>, <literal>qemu</literal>, 
     <literal>xenapi</literal>, and <literal>powervm</literal>.
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Architecture (optional)</term>
   <listitem>
     <para>Specifies the architecture the image requires. For example: </para>
     <screen>architecture=x86_64</screen>
    </listitem>
   </varlistentry> 
   <varlistentry>
    <term>VM Mode (optional)</term>
     <listitem>
     <para>Specify the hypervisor ABI (application binary interface) with the 
     <literal>vm_mode</literal> flag. It can take the values <literal>pv</literal>, 
     <literal>hvm</literal>, or <literal>xen</literal>. Use <option>vm_mode=xen</option> 
     for XEN PV image import, or <option>vm_mode=hvm</option> for XEN HVM image import. 
     For KVM, the correct mode is selected automatically.</para>
    </listitem>
   </varlistentry>
  </variablelist>'>
  
 <!ENTITY flavors
 ' <para>
   In &ostack;, flavors define the compute, memory, and storage capacity of
   <literal>nova</literal> computing instances. To put it simply, a flavor
   is an available hardware configuration for a server. It defines the
   <quote>size</quote> of a virtual server that can be launched. 
  </para>'>
  
  <!ENTITY flavor-params
' <para>
   A flavor consists of the following parameters:
  </para>

   <variablelist>
    <title>Flavor Parameters</title>
    <varlistentry>
     <term>Flavor ID</term>
     <listitem>
      <para><remark>taroth 2013-06-20: the Flavor ID is no longer visible in the
      UI input dialog (which makes sense) - TODO: check if it is vital for
      creating flavors via CLI, if not: remove</remark>
      Automatically proposed by &productname;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Name</term>
     <listitem>
      <para>
      Name for the new flavor.
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>VCPUs</term>
     <listitem>
      <para>
      Number of virtual CPUs to use.
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>RAM MB</term>
     <listitem>
      <para>
      Amount of RAM to use (in megabytes).
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Root Disk GB</term>
     <listitem>
      <para>
      Amount of disk space (in gigabytes) to use for the root
      (<literal>/</literal>) partition.
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Ephemeral Disk GB</term>
     <listitem>
      <para>
      Amount of disk space (in gigabytes) to use for the ephemeral
      partition. If unspecified, the value is <literal>0</literal> by
      default.
     </para>
      <para>
      Ephemeral disks offer machine local disk storage linked to the
      lifecycle of a VM instance. When a VM is terminated, all data on the
      ephemeral disk is lost. Ephemeral disks are not included in any
      snapshots.
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Swap Disk MB</term>
     <listitem>
      <para>
      Amount of swap space (in megabytes) to use. If unspecified, the value
      is <literal>0</literal> by default.
     </para>
     </listitem>
    </varlistentry>
    <!--taroth 2012-11-21: according to cthiel, the following does not take effect
        in SUSE Cloud Setup, therefore commenting-->
    <!-- <varlistentry>
     <term>RXTX Factor</term>
     <listitem>
      <para>
       <remark>taroth 2012-08-10: not sure if to mention this param at all -
			only visible on CLI (nova create-flavor -/-rxtx-factor, default: 1), 
			DEVs: what does it mean/specify?</remark>
      </para>
     </listitem>
    </varlistentry> -->
   </variablelist>'>

 <!ENTITY flavors-default
 '<itemizedlist>
    <title>Default Flavors</title>
    <listitem>
     <para>m1.tiny (1 VCPU/0 GB Disk/512 MB RAM)</para>
    </listitem>
    <!--<listitem>
     <para>m1.smaller (1 VCPU/0 GB Disk/1024 MB RAM)</para>
    </listitem>-->
    <listitem>
     <para>m1.small (1 VCPU/20 GB Disk/2048 MB RAM)</para>
    </listitem>
    <listitem>
     <para>m1.medium (2 VCPU/40 GB Disk/4096 MB RAM)</para>
    </listitem>
    <listitem>
     <para>m1.large (4 VCPU/80 GB Disk/8192 MB RAM)</para>
    </listitem>
    <listitem>
     <para>m1.xlarge (8 VCPU/160 GB Disk/16384 MB RAM)</para>
    </listitem>
   </itemizedlist>'>
   
<!ENTITY instances
'<para>Instances are virtual machines that run inside the cloud. To start
  an instance, a virtual machine image must exist that contains the following 
  information: which operating system to use, a username and password with which 
  to log in to the &vmguest;, file storage etc. The cloud contains a pool of such
  images that have been uploaded to &img; and are accessible to members of 
  different projects. </para>'>
   
<!ENTITY inst-access-params
 '<para>Access to an instance is mainly influenced by the following parameters:</para>
   <itemizedlist>
    <listitem>
    <para>security groups and rules
    </para>
   </listitem>
    <listitem>
    <para>keypairs
    </para>
   </listitem>
   <listitem>
    <para>
     IP addresses
    </para>
   </listitem>
  </itemizedlist>

  <para>For SSH access to an instance, you usually need to provide a keypair at
   launch time. The security rules need adjustment, too, since the default 
   rules block access to SSH ports and prevent pinging an instance. To make the 
   instance also accessible from outside the cloud, assign a floating (public) 
   IP address.</para>'>
   

<!ENTITY inst-terminate
' <para>For maintenance reasons, you can pause or suspend images&mdash;provided
    they are running on &kvm; or &xen;. Pausing or suspending avoids the consequences 
    that come with terminating an instance.</para>
   <para>If you pause an instance, the content of the virtual machine is stored
    to memory (RAM) and the image is kept running in a <quote>frozen</quote>
    state. When suspending an instance, the content of the virtual 
    machine is stored to disk, and memory and VCPUs are freed.
   </para>'>
   
<!ENTITY inst-terminate-warn
'<warning>
    <title>Terminating Instances: Risk of Data Loss</title>
    <para>
     <emphasis>Terminating</emphasis> an instance has the following consequences:</para>
    <itemizedlist>
     <listitem>
      <para>All data on the image&apos;s root disk and ephemeral disks are destroyed.
       To prevent that, use volumes and attach them to an instance for 
       persistent storage.</para>
     </listitem>
     <listitem>
      <para>If a floating IP address was assigned to that instance,
       the IP address is disassociated from that image. However, it is still available
       in the pool of allocated IP addresses for the current project.</para>
     </listitem>
    </itemizedlist>
   </warning>'>
   
 <!ENTITY keypairs 
  '<para>Keypairs are SSH credentials that are injected into images when they are
    launched. For this to work, the image must contain the <systemitem 
    class="resource">cloud-init</systemitem>  package. </para>
    <para>Create at least one keypair per project. If you already have generated
    a keypair with an external tool, you can import it into &ostack;. The keypair
    can be used for multiple instances belonging to that project. 
    </para>'>  
    
  <!ENTITY security 
   '<para>In &productname;, security groups are used to define which incoming 
    network traffic should be forwarded to instances. Security groups hold a set 
    of firewall policies (security group rules).</para>'>
    
  <!ENTITY sec-groups 
    '<para> When launching an instance, you need to define which security groups 
    it should belong to. A default security group is available for each project. 
    It allows all network traffic from other members of this group and discards 
    traffic from other IP addresses and groups.</para>

   <para>Multiple security groups for a project can be defined, with each group 
    holding a different set of firewall policies. This is useful if you
    have groups of instances that should differ in firewall configuration (for example,
    front-end and back-end servers). An instance can be assigned to multiple 
    security groups.</para>'>
    
   <!ENTITY sec-rules 
   '<para>You can adjust rules of the default security group as well as rules of
    any other security group that has been created. As soon as the rules for a 
    group are modified, the new rules are automatically applied to all running 
    instances belonging to that security group.</para>
   
    <para>Adjust the rules in a security group to allow access to instances via 
    different ports and protocols. This is necessary to be able to access instances
    via SSH, to ping them, or to allow UDP traffic (for example, for a DNS server
    running on an instance).</para>' >
    
  <!ENTITY sec-rules-params
  '  <para>Rules in security groups are specified by the following parameters:</para>
   <variablelist>
   <varlistentry>
     <term>IP Protocol </term>
     <listitem>
      <para>Protocol to which the rule will apply. Choose between TCP (for SSH), ICMP 
      (for pings), and UDP.</para>
     </listitem>
    </varlistentry>
      <varlistentry>
     <term>Port/Port Range</term>
     <listitem>
      <para>For TCP or UDP, define a single port or a port range to open on the 
      virtual machine. ICMP does not support ports. In that case, enter values that 
      define the codes and types of ICMP traffic to be allowed.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Source of traffic</term>
     <listitem>
      <para>Decide whether to allow traffic to instances only from IP addresses 
       inside the cloud (from other group members) or from <emphasis>all</emphasis>
       IP addresses. Specify either an IP address block (in CIDR notation) or a security 
       group as source. Using a security group as source will allow any instance
       in that security group to access any other instance.</para>
     </listitem>
    </varlistentry>
  
   </variablelist>'>
   
  <!ENTITY security-default
  '<para>If no further security groups have been created, any instances are 
     automatically assigned to the default security group (if not specified
     otherwise). Unless you change the rules for the default group, those instances
     cannot be accessed from any IP addresses outside the cloud.</para>' > 

 <!ENTITY ip-addr   
 ' <para>Each instance can have two IP addresses: a private (fixed) IP address 
    and a public (floating) one. 
    Private IP addresses are used for communication between instances, and public
    ones are used for communication with the outside world. When an instance is launched,
    it is automatically assigned a private IP address in the network to which it
    is assigned. The private IP stays the same
    until the instance is explicitly terminated. (Rebooting the instance does not
    have an effect on the private IP address.)
  </para>
  
   <para>A floating IP is an IP address that can be dynamically added to a virtual  instance. 
   In &ostack; &netw;, cloud operators <remark>taroth 2013-07-05: DEVs: or cloud
   administrators?</remark> can configure pools of floating IP addresses. These pools
   are represented as external networks. Floating IP are allocated from a subnet
  that is associated with the external network. 
   <!--A pool of floating IPs is available in &ostack; &comp;, as configured 
  by the cloud operator.--> You can allocate a certain number of floating IPs to a
  project&mdash;the maximum number of floating IP addresses per project is defined
  by the quota. From this set, you can then add a floating IP address to an 
  instance of the project.  
  <!--taroth 2013-07-05: check if to merge with the following, copied from 
  http://docs.openstack.org/api/openstack-network/2.0/content/router_ext_concepts.html:
  
  A floating IP is an IP address on an external network, which is associated with a specific port, and optionally a
    specific IP address, on a private OpenStack Networking network. Therefore a floating IP allows
    access to an instance on a private network from an external network. Floating IPs can only be
    defined on networks for which the attribute router:external has been set to
    True.-->
  </para>'>
  
  <!ENTITY ip-allocate
   '<para>Before you can assign a floating IP address to an instance, you first 
     need to allocate floating IPs to a project.</para>'>
 
  <!ENTITY ip-assign
  '<para>After floating IP addresses have been allocated to the current project,
    you can assign them to running instances. One floating IP address can be 
    assigned to only one instance at a time.
   </para>'>
     
  <!ENTITY ssh-req
  '<para>
     To access an instance via SSH, the following requirements need to be 
     fulfilled:</para>
    <itemizedlist>
     <listitem>
      <para>
       <systemitem class="daemon">sshd</systemitem> must be running
       inside the virtual machine.</para>
     </listitem>
     <listitem>
      <para>Port <literal>22</literal> must be open in the virtual
      machine&apos;s firewall.</para>
     </listitem>
     <listitem>
      <para>The security group which the instance is assigned to, must be configured
       to allow SSH access. 
      </para>
     </listitem>
     <listitem>
      <para>To enable SSH access from outside the cloud, a floating IP 
       address must be assigned to the instance. </para>
     </listitem>
     <listitem>
      <para>You must know the private or public IP address of the instance.</para>
     </listitem>
    </itemizedlist>'>

 <!ENTITY inst-snap
 '<para>Instance snapshots preserve the disk state of a running instance. You can launch 
    a new instance from a snapshot or use a snapshot to create a new image based upon the 
    snapshot. Ephemeral disks are not included in any snapshots.</para> '>
      
 <!ENTITY volumes
  '<para>Volumes are block storage devices that can be attached to instances. They
  allow for persistent storage as they can be attached to a running instance 
  (or detached and attached to another instance at any time). In contrast to the
  instance&apos;s root disk, the data of volumes is not destroyed when the instance 
  is terminated.</para>'>
  
 <!ENTITY vol-attach
  'After having created one or multiple volumes, you can attach them
  to instances. A volume can only be attached to one instance at a time.'>
 
 <!ENTITY vol-snap
'<para>Volume snapshots preserve the state of an attached block storage device. 
   You can also create a new volume based upon a volume snapshot.</para>'>
   
 <!ENTITY quotas
 '<para>To prevent system capacities from being exhausted without notification,
   cloud administrators can set up quotas. In &ostack;, quotas are currently 
   defined per project. The default quotas that are initially applied to each project
   are specified in the <filename>nova.conf</filename> on the &contrnode;. For a
   description of the configuration options for quotas in that file, refer to 
   <ulink
   url="http://docs.openstack.org/grizzly/openstack-compute/admin/content/list-of-compute-config-options.html"/>.
   For details about how to change the default values in
   <filename>nova.config</filename>, refer to
   <ulink url="http://docs.openstack.org/grizzly/openstack-ops/content/projects_users.html#quotas"/>.
   </para>'>
   
   <!ENTITY quota-params
 ' <para>Quotas contain the following parameters:</para>

  <variablelist>
   <title>Quota Parameters</title>
   <varlistentry>
    <term>ID (Name)</term>
    <listitem>
     <para><remark>taroth 2013-06-20: the ID is no longer visible in the
      UI input dialog (which makes sense) - TODO: check if it is vital for
      specifying quotas via CLI, if not: remove</remark>
      ID for the quota settings. Automatically proposed by &productname;.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Metadata Items</term>
    <listitem>
     <para>
      Number of metadata items per instance. 
      <!--taroth 2012-11-21: metadata in openstack API, only visible via API-->
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>VCPUs</term>
    <listitem>
     <para>
      Number of virtual CPUs that can be allocated in total.
      <!--taroth 2012-07-26: inconsistent terminology in Dashboard 
       - called "Cores" in the "Quota"  overview on the Admin tab, 
       see bnc#773852--></para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Instances</term>
    <listitem>
     <para>
      Total number of instances.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Injected Files</term>
    <listitem>
     <para>
      Number of injected files.    
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Injected File Content Bytes</term>
    <listitem>
     <para>
      Number of bytes per injected file.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Volumes</term>
    <listitem>
     <para>
      Total number of volumes.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Gigabytes</term>
    <listitem>
     <para>
      Total size of all volumes, measured in gigabytes.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>RAM (MB)</term>
    <listitem>
     <para>
      Total RAM size of all instances, measured in megabytes.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Floating IPs</term>
    <listitem>
     <para>
      Total number of floating IP addresses.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Fixed IPs</term>
    <listitem>
     <para>
      Total number of fixed IP addresses.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Security Group Rules</term>
    <listitem>
     <para>
      <!--taroth 2012-07-26: hm, this param is only shown on the Quota 
      overview on the Admin tab, but does not appear in the dialog where quotas 
      are *set* - cthiel 2012-11-21: known bug, will be fixed with upstream release-->
      Number of security rules per security group.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Security Groups</term>
    <listitem>
     <para>
     <!--taroth 2012-07-26: hm, this param is only shown on the Quota overview 
     on the Admin tab, but does not appear in the dialog where quotas 
     are *set* - cthiel 2012-11-21: known bug, will be fixed with upstream release-->
      Number of security groups.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>'>
  
<!ENTITY note-groups-delete
' <note>
   <title>Deleting Security Groups</title>
    <para>The default security group for a project cannot be deleted.</para>
    <para>If another group cannot be deleted, it is because it is still assigned 
    to a running instance.</para>
  </note>'>

<!ENTITY no-ceph-support   
'  <important>
    <title>&ceph; not Supported</title>
     <para>
      &ceph; is included in &productname; &productnumber; as a technology
      preview. Customers can use this in test environments but it is not
      recommended for production. Supported block storage is provided by
      &o_blockstore;. 
     </para>
    </important>'>

<!ENTITY l3-network-support   
'  Other, more flexible network mode setups can be configured by manually
  editing the &crow; network configuration files. See
  <xref linkend="app.deploy.network_json"/> for more information. &suse;
  can assist you in creating a custom setup within the scope of a Level 3
  support contract.'>

<!ENTITY openstack-python-tools
' <para>
   The following command line tools are available for the respective
   services&apos; APIs:</para>

  <variablelist>
   <varlistentry>
    <term>
     <command>keystone</command>
    </term>
    <listitem>
     <para>
      For managing users and projects. Provided by the
      <systemitem class="resource">python-keystoneclient</systemitem>
      package.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>nova</command>
    </term>
    <listitem>
     <para>
      For managing instances and flavors. Provided by the
      <systemitem class="resource">python-novaclient</systemitem> package.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>glance</command>
    </term>
    <listitem>
     <para>
      For managing images. Provided by the
      <systemitem class="resource">python-glanceclient</systemitem> package.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>swift</command>
    </term>
    <listitem>
     <para>For managing the object storage. Provided by the 
     <systemitem class="resource">python-swiftclient</systemitem> package.</para>
    </listitem>
   </varlistentry>
    <varlistentry>
    <term>
     <command>neutron</command>
    </term>
    <listitem>
     <para>For managing the network. Provided by the 
     <systemitem class="resource">python-neutronclient</systemitem> package.</para>
    </listitem>
   </varlistentry>
    <varlistentry>
    <term>
     <command>cinder</command>
    </term>
    <listitem>
     <para>For managing the block storage. Provided by the 
     <systemitem class="resource">python-cinderclient</systemitem> package.</para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>All of them have tab completion.</para>
  <para>
   Help and detailed information about the individual commands and their
   arguments are available with</para>
   <screen><replaceable>COMMAND</replaceable> help</screen> 
  <para>For help on subcommands, use</para>
  <screen><replaceable>COMMAND</replaceable> help&nbsp;<replaceable>SUBCOMMAND</replaceable>&nbsp;</screen>
  <para>For example: <command>glance&nbsp;help</command> or
   <command>glance&nbsp;help&nbsp;image-create</command>
   </para>'>

<!ENTITY quantum-descr
'<para>&ostack; &netw; lets you configure rich network topologies by creating and configuring networks and
subnets, and then instructing other &ostack; services like &comp; to attach
virtual devices to ports on these networks. In particular, with &ostack; &netw;,
each tenant can have multiple private networks. Tenants are also able to choose their own IP
addressing scheme, even if those IP addresses overlap with those used by other tenants.
This enables advanced cloud networking use cases, such as building multi-tiered
Web applications. Applications can be migrated to the cloud without changing IP
addresses.</para>'>
