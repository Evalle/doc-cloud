<!-- ============================================================= -->
<!--                    Phrases                                  -->
<!-- ============================================================= -->

<!ENTITY prod-descr-short
' &productnamereg; is an open source software solution that provides the
  fundamental capabilities to deploy and manage a cloud infrastructure
  based on &sle;. &productname; is powered by &ostack;, the leading
  community-driven, open source cloud infrastructure project. It seamlessly
  manages and provisions workloads across a heterogeneous cloud environment
  in a secure, compliant, and fully-supported manner. The product tightly
  integrates with other &suse; technologies and with the &suse; maintenance
  and support infrastructure.'>

<!ENTITY dash-descr-short
 ' The &productnamereg; &dash; is a Web interface that enables cloud
   administrators and users to manage various &ostack; services. It
   is based on &ostack; &dash; (also known under its codename
   <literal>Horizon</literal>).'>

<!ENTITY cli-descr-short
 ' <para>
   The &ostack; project provides a variety of command line tools with which
   you can manage the services within your cloud and automate tasks by using
   scripts. Each of the core &ostack; components has its own
   command line tool.
  </para>'>

<!ENTITY dash-req
  '<para>
   The following requirements need to be fulfilled to access the &cloud;
   &dash;:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     The cloud operator has set up &cloud;.</para>
   </listitem>
   <listitem>
    <para>
     You have a recent Web browser that supports HTML5. It must have cookies
     and JavaScript enabled. For using the &dash;&apos;s VNC client, which is
     based on <literal>noVNC</literal>, your browser needs to support HTML5
     Canvas and HTML5 WebSockets. For more details and a list of browsers
     that support <literal>noVNC</literal>, refer to
     <ulink url="https://github.com/kanaka/noVNC/blob/master/README.md"/>,
     and
     <ulink url="https://github.com/kanaka/noVNC/wiki/Browser-support"/>,
     respectively.
    </para>
   </listitem>
  </itemizedlist>'>

<!ENTITY dash-login
' <para>
    To access the &cloud; &dash;, ask the cloud operator for the following
    information:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Hostname or (public) IP address of the &cloud; &dash;. (The &dash; is
      available on the node that has the <literal>nova_dashboard-server</literal>
      role.)
     </para>
    </listitem>
    <listitem>
     <para>
      Username and password of the cloud administrator or cloud user with which you
      can log in to &cloud; &dash;.
     </para>
    </listitem>
   </itemizedlist>
   <procedure>
    <step>
     <para>
      Start a Web browser and make sure that JavaScript and cookies are
      enabled.
<!--taroth 2012-07-04: DEVs, does the machine running
      the browser need to be in the same network like the node which provides the
      WEB UI? or can it be accessed from anywhere? cthiel 2012-07-05: that depends
      on the network setup of the customer-->
     </para>
    </step>
    <step>
     <para>
      As a URL, enter the hostname or IP address that you got from the cloud operator.
     </para>
<screen>https://<replaceable>IP_ADDRESS_OR_HOSTNAME</replaceable>/</screen>
     <note>
      <title>Certificate Warning</title>
      <para>
       Depending on your browser and browser options, you may get a
       certificate warning when trying to access the URL for the first time.
       (In case no certificate is provided when setting up the &dash;,
       &productname; uses a self-signed certificate that is not
       considered trustworthy by default).
      </para>
      <para>In this case, verify the certificate.</para>
      <para>
       To proceed anyway, you can add an exception in the browser to bypass
       the warning.
      </para>
     </note>
    </step>
    <step>
     <para>
      On the &cloud; &dash; login screen, enter the <guimenu>User
      Name</guimenu> and <guimenu>Password</guimenu> and click <guimenu>Sign
      In</guimenu>.
     </para>
    </step>
   </procedure>'>

<!ENTITY dash-main-screen
'<para>
    The top-level row of the main screen shows the username with which you
    are logged in. It also lets you access the
    <guimenu>Settings</guimenu> (regarding language and timezone), the
    <guimenu>Help</guimenu> pages, or lets you <guimenu>Sign Out</guimenu> of the
    Web interface.
   </para>
   <note>
    <title>Available Functions</title>
    <para>
     The visible tabs and functions in the &dash; depend on the access
     permissions of the user that is logged in. They are defined by roles.
    </para>
   </note>'>

<!ENTITY dash-project-tab
'<figure>
     <title>&productname; &dash;&mdash;<guimenu>Project</guimenu> Tab</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="cloud_dash_project.png" width="100&#37;" format="PNG" />
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="cloud_dash_project.png" width="80&#37;" format="PNG" />
      </imageobject>
     </mediaobject>
    </figure>
    <para>
     Select a <guimenu>Current Project</guimenu> from the drop-down list on the
     left-hand side to access the following categories. They are sorted into the
     groups: <guimenu>Manage Compute</guimenu>,
     <guimenu>Manage Network</guimenu>, and
     <guimenu>Object Store</guimenu>.
    </para>
    <variablelist><title>Manage Compute</title>
     <varlistentry>
      <term><guimenu>Overview</guimenu>
      </term>
      <listitem>
       <para>
        Shows basic reports on the project and lets you track usage.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Instances</guimenu>
      </term>
      <listitem>
       <para>
        Lists instances launched by users of the project. From here,
        you can launch, terminate, pause, or reboot any instances, connect to them via
        VNC or create a snapshot of an instance.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Volumes</guimenu>
      </term>
      <listitem>
       <para>
        Lists volumes created by users of the project. Form here, you can create
        volumes and attach them to instances.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Images &amp; Snapshots</guimenu>
      </term>
      <listitem>
       <para>
        Lists images, instance snapshots and volume snapshots created by users of the project, plus any
        images that are publicly available, or that have been shared with the
        current user. From here, you can launch instances.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Access &amp; Security</guimenu>
      </term>
      <listitem>
       <para>
        Lets you manage security groups and keypairs, allocate or release
        floating IP addresses, access the API, and download RC files.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

    <variablelist><title>Manage Network</title>
     <varlistentry>
      <term><guimenu>Network Topology</guimenu>
      </term>
      <listitem>
       <para>Displays a graphical representation of the network topology. From
       here, you can also launch instances, and create networks or routers.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Networks</guimenu>
      </term>
      <listitem>
       <para>Shows all networks and subnets that are available to the currently
       selected project. Lets you create networks and subnets for the current
       project.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Routers</guimenu>
      </term>
      <listitem>
       <para>Lets you create routers and set gateways.</para>
      </listitem>
     </varlistentry>
    </variablelist>

     <variablelist><title>Object Store</title>
     <varlistentry>
      <term><guimenu>Containers</guimenu>
      </term>
      <listitem>
       <para>Lets you create containers and upload objects to &ostack;
       &objstore;.</para>
      </listitem>
     </varlistentry>
     </variablelist>
     
    <variablelist><title>Orchestration</title>
     <varlistentry>
      <term><guimenu>Stacks</guimenu>
      </term>
      <listitem>
       <para>Lets you use the REST API to orchestrate multiple composite cloud
       applications.</para>
      </listitem>
     </varlistentry>
     </variablelist>'>

<!ENTITY rc-file-usage
 '<para>
   To set the necessary environment variables for the &ostack; command line
   tools, you need to download and source an environment file, the &ostack;
   RC file. It contains the credentials used by &ostack; services like &comp;, &img;, and
   &ident; services for a specific project. You can download it from the
   &cloud; &dash;, either as user <systemitem>admin</systemitem> or
   as any other user. The filename of the RC file contains the
   name of the project for which the credentials are valid:
   <filename><replaceable>PROJECTNAME</replaceable>-openstack.rc</filename>.
   </para>
   <para>The RC file requires running Bash or Bourne shell (sh) as shell environment.
  </para>

  <procedure>
   <title>Downloading the &ostack; RC File</title>
   <step>
    <para>
     Log in to the &cloud; &dash;.
    </para>
   </step>
   <step>
    <para>On the <guimenu>Project</guimenu> tab, select the project for which
    you want to download the &ostack; RC file from the <guimenu>Current
    Project</guimenu> drop-down list.
    </para>
   </step>
   <step><para>Select the <guimenu>Access &amp; Security</guimenu>
   category and switch to the <guimenu>API Access</guimenu> tab.</para></step>
   <step>
    <para>Click <guimenu>Download OpenStack RC File</guimenu> and save the file.
    </para>
   </step>
   <step>
    <para>
     Copy the RC file to the machine on which
     you want to execute &ostack; commands (for example, uploading an image
     with the <command>glance</command> command).
    </para>
   </step>
   <step>
    <para>
     On any shell that you want to execute &ostack; commands from, source
     the RC file for the respective project, for example:
    </para>
    <screen>source <replaceable>PROJECTNAME</replaceable>-openstack.rc</screen>
    <para>
     You will be prompted for an &ostack; password.
    </para>
   </step>
   <step>
    <para>
     Enter the &ostack; password of the user who downloaded the
     <filename><replaceable>PROJECTNAME</replaceable>-openstack.rc</filename> file.
    </para>
    <para>
     With sourcing the file and entering the password, environment variables
     are set for that shell. They allow the commands to communicate to the
     &ostack; services running in the cloud.
    </para>
   </step>
  </procedure>'>


<!ENTITY basics-abstract
'<abstract>
  <para>In this chapter, we will introduce basic concepts that you should know
  for a deeper understanding of the requirements and relationship between
  individual tasks to be executed by administrators or users.
  In the following chapters, you learn how to execute the key tasks either with
  the &cloud; Web interface or with the command line tools. </para>
 </abstract>'>

<!ENTITY highlevel-roles
'<para>In &productname;, there are several high-level user roles (or viewpoints)
  that we need to discriminate:</para>
  <variablelist>
   <varlistentry>
    <term>&cloud; Operator</term>
    <listitem>
     <para>Installs and deploys &productname;, starting with bare-metal,
     then installing the operating system and the &ostack; components. For detailed information about the
      operator&apos;s tasks and how to solve them, refer to &cloud; &clouddeploy;.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&cloud; Administrator</term>
    <listitem>
     <para>Manages projects, users, images, flavors, and quotas within &productname;.
     For detailed information about the administrator&apos;s tasks and how to solve
     them, refer to &cloud; &cloudadmin;.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&cloud; User</term>
    <listitem>
     <para>End-user who launches and manages instances, can create snapshots, and
     use volumes for persistent storage within &productname;. For detailed
     information about the user&apos;s tasks and how to solve them, refer to
     &cloud; &clouduser;.</para>
    </listitem>
   </varlistentry>
  </variablelist>'>

<!ENTITY projects
 '<para>
   &productname; enables you to manage projects independently from each
   other. Projects represent different organizational units in the cloud to which
   users can be assigned. Both project and user management are cloud
   administrator&apos;s tasks.</para>
  <para>During the basic system setup, the cloud operator needs
   to minimally define one project, one user, and one role to link the project
   and user. Roles define which actions users are allowed to perform.
  </para>'>

 <!ENTITY project-disable
 '<para>
    Projects can be created, deleted, or temporarily disabled by cloud
    administrators. Disabling a project has the following consequences:
   </para>
  <itemizedlist id="il.disabled.projects">
   <title>Consequences of Temporarily Disabling a Project</title>
   <listitem>
    <para>
      In the &cloud; &dash;, users can no longer access the project from the
      <guimenu>Project</guimenu> drop-down list on the <guimenu>Project</guimenu>
      tab.
     </para>
   </listitem>
   <listitem>
    <para>
      Users who are members of only the disabled project can no longer log
      in.
     </para>
   </listitem>
   <listitem>
    <para>
      It is impossible to launch new instances for a disabled project.
      Instances that are already running are not automatically terminated
      though&mdash;you must stop them manually.
     </para>
   </listitem>
   <listitem>
    <para>
      All data of a disabled project is kept so that the project can be
      re-enabled at any time.
     </para>
   </listitem>
  </itemizedlist>'>

<!ENTITY users
'<para>Users are members of one or multiple projects. Both project and user
   management are cloud administrator&apos;s tasks. When a new user account
   is created, the user has to be assigned to a primary project. The user can
   also be assigned to additional projects. </para>
   <para>User accounts can be created, deleted, or temporarily deactivated. If a
   user account is deactivated, the user can no longer log in, but his data is
   kept so that the account can be re-enabled at any time.
  </para>'>

  <!ENTITY roles
  '<para>Roles define the actions that the user is allowed to perform. Out of the box, &ostack;
       comes with two default roles:</para>
       <itemizedlist>
       <listitem><para><literal>member</literal>: a typical user.
       <remark>taroth 2013-08-09: see also https://bugzilla.novell.com/show_bug.cgi?id=826609</remark>
       </para></listitem>
       <listitem><para><literal>admin</literal>: a super user with full
       permission across <emphasis>all</emphasis> projects.</para></listitem>
       </itemizedlist>
       <!--taroth 2014-01-08: found the following sentence in the Cloud Operator Guide,
       http://docs.openstack.org/trunk/openstack-ops/content/projects_users.html-->
       <para>It is possible to define other roles, but doing so is  uncommon. 
     </para>
       <para>Actions and roles are  defined per &ostack; service in the respective
       <filename>/etc/[SERVICE_CODENAME]/policy.json</filename> file. For
       example, to change actions for the &comp; (Nova) service, you need to
       edit the <filename>/etc/nova/policy.json</filename>.  
       <!--taroth 2014-01-21: currently, this information is only covered in the
       admin UI chapter as there are not CLI tools for creating roles, if that
       should change, move the info here:
       Any roles you create should map to roles specified in
       the <filename>policy.json</filename> files of the various &ostack;
       services.-->
       </para>'>
        

<!ENTITY role-admin-warn
'<important><title>Admin Role: Administrative Rights Across the Cloud</title>
<para>The <literal>admin</literal> role is global. If you assign a user to a
project and give him the <literal>admin</literal> role, the role is not
restricted to the current project. Instead, the user will be
granted full administrative rights across <emphasis>all</emphasis> projects.</para>
</important>'>

<!ENTITY groups
'<para>In &ostack; &ident;, a group is a collection of users. Administrators can create
    groups to organize users and roles. Users can be added to a group. Rather than assigning a
    role to each user individually, a role can be assigned to a group. Every group is part of a
    domain. </para>'>

<!ENTITY images
  '<para>In the &productname; context, images are virtual disk images that represent
   the contents and structure of a storage medium or device, such as a hard drive,
   in a single file. Images are used as a template from which a virtual machine
   can be started. For starting a virtual machine, &productname; always uses
   a copy of the image.</para>'>

<!ENTITY img-manage
'<para>Permissions to manage images are defined by the cloud operator
during setup of &productname;. Image upload and management may be restricted
to cloud administrators or cloud operators only.</para>
<para>After uploading an image to &ostack; &img;, it cannot be changed any more
(<quote>golden image</quote>).</para>
'>

<!ENTITY img-ownership
'<para>Images are owned by projects
   and can be <literal>private</literal> (accessible to members of the
   particular project only) or <literal>public</literal> (accessible to
   members of all projects). Private images can also be explicitly shared
   with other projects, so that members of those projects can access the
   images, too. Any image uploaded to &ostack; &img; will get an
   <literal>owner</literal> attribute. By default, ownership is set to the
   primary project of the user that uploads the image.
  </para>'>

 <!ENTITY img-props
 '<para>Images have both contents and metadata; the latter are also called
  properties. The following properties can be attached to an image in &cloud;.
  Set them from the command line when uploading or modifying images.
   <!--taroth 2013-12-11: todo - check the option names (any new ones around?) 
   and add if optional or required-->
   </para>

  <variablelist>
   <title>Image Properties</title>
   <varlistentry>
    <term>Name (<option>--name</option>, optional)</term>
    <listitem>
     <para>
       Specifies a name with which the image will be listed in the
       &cloud; &dash; and in the command line interface.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Kernel ID (optional)</term>
    <listitem>
     <para>
      The image&apos;s kernel ID. This parameter is only needed if an external
      Kernel is associated with the image. The ID points to the Kernel
      glance image.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Ramdisk ID (optional)</term>
    <listitem>
     <para>
      The image&apos;s ramdisk ID. This parameter is only needed if an external
      ramdisk is associated with the image. The ID points to the ramdisk
      glance image.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Container Format (<option>--container-format</option>, optional)</term>
    <listitem>
     <para>
       Indicates if the VM image&apos;s file format contains metadata about the actual virtual
        machine. Set it to <literal>bare</literal> as the container format
        string is not currently used in any &ostack; components anyway. For
        details, refer to
        <ulink url="http://docs.openstack.org/developer/glance/formats.html"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Disk Format (<option>--disk-format</option>, required)</term>
    <listitem>
     <para>
      Specifies the image&apos;s disk format. Example formats include
      <literal>raw</literal>, <literal>qcow2</literal>, and
      <literal>ami</literal>. For details, refer to
      <ulink url="http://docs.openstack.org/developer/glance/formats.html"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Public (<option>--is-public</option>, optional)</term>
    <listitem>
     <para>Boolean value, default: <literal>false</literal>. If set to
      <literal>true</literal>, the  image is publicly available.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Hypervisor Type (optional)</term>
    <listitem>
     <para>If your cloud consists of both &kvm; and &xen; nodes, specify at least
     the hypervisor type the image requires, otherwise it might be scheduled on
     an incompatible node.
     For example:</para>
     <screen>hypervisor_type=xen</screen>
     <para>Further example are: <literal>kvm</literal>, <literal>qemu</literal>,
     <literal>xenapi</literal>, and <literal>powervm</literal>.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Architecture (optional)</term>
   <listitem>
     <para>Specifies the architecture the image requires. For example: </para>
     <screen>architecture=x86_64</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>VM Mode (optional)</term>
     <listitem>
     <para>Specify the hypervisor ABI (application binary interface) with the
     <literal>vm_mode</literal> flag. It can take the values <literal>hvm</literal>, or 
     <literal>xen</literal>. Use <option>vm_mode=xen</option>
     for XEN PV image import, or <option>vm_mode=hvm</option> for XEN HVM image import.
     For KVM, the correct mode is selected automatically.</para>
    </listitem>
   </varlistentry>
  </variablelist>'>

 <!ENTITY flavors
 ' <para>
   In &ostack;, flavors define the compute, memory, and storage capacity of
   <literal>nova</literal> computing instances. To put it simply, a flavor
   is an available hardware configuration for a server. It defines the
   <quote>size</quote> of a virtual server that can be launched.
  </para>'>

  <!ENTITY flavor-params
' <para>
   A flavor consists of the following parameters:
  </para>

   <variablelist>
    <title>Flavor Parameters</title>
    <varlistentry>
     <term>Name</term>
     <listitem>
      <para>
      Name for the new flavor.
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>VCPUs</term>
     <listitem>
      <para>
      Number of virtual CPUs to use.
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>RAM MB</term>
     <listitem>
      <para>
      Amount of RAM to use (in megabytes).
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Root Disk GB</term>
     <listitem>
      <para>
      Amount of disk space (in gigabytes) to use for the root
      (<literal>/</literal>) partition.
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Ephemeral Disk GB</term>
     <listitem>
      <para>
      Amount of disk space (in gigabytes) to use for the ephemeral
      partition. If unspecified, the value is <literal>0</literal> by
      default.
     </para>
      <para>
      Ephemeral disks offer machine local disk storage linked to the
      lifecycle of a VM instance. When a VM is terminated, all data on the
      ephemeral disk is lost. Ephemeral disks are not included in any
      snapshots.
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Swap Disk MB</term>
     <listitem>
      <para>
      Amount of swap space (in megabytes) to use. If unspecified, the value
      is <literal>0</literal> by default.
     </para>
     </listitem>
    </varlistentry>
    <!--taroth 2012-11-21: according to cthiel, the following does not take effect
        in SUSE Cloud Setup, therefore commenting-->
    <!-- <varlistentry>
     <term>RXTX Factor</term>
     <listitem>
      <para>
       <remark>taroth 2012-08-10: not sure if to mention this param at all -
			only visible on CLI (nova create-flavor -/-rxtx-factor, default: 1),
			DEVs: what does it mean/specify?</remark>
      </para>
     </listitem>
    </varlistentry> -->
   </variablelist>'>

 <!ENTITY flavors-default
 '<itemizedlist>
    <title>Default Flavors</title>
    <listitem>
     <para>m1.tiny (1 VCPU/1 GB Root Disk/512 MB RAM)</para>
    </listitem>
     <listitem>
     <para>m1.small (1 VCPU/20 GB Root Disk/2048 MB RAM)</para>
    </listitem>
    <listitem>
     <para>m1.medium (2 VCPU/40 GB Root Disk/4096 MB RAM)</para>
    </listitem>
    <listitem>
     <para>m1.large (4 VCPU/80 GB Root Disk/8192 MB RAM)</para>
    </listitem>
    <listitem>
     <para>m1.xlarge (8 VCPU/160 GB Root Disk/16384 MB RAM)</para>
    </listitem>
   </itemizedlist> '>
   
   
<!ENTITY  note-flavor-modify
'<!--taroth 2014-01-09: found info at http://docs.openstack.org/trunk/openstack-ops/content/flavors.html-->
<note>
   <title>Modifying Flavors</title>
   <para>It is impossible to modify flavors in &productname; as &ostack; does not provide an
    interface to do so. As a work-around, delete the flavor and create a new one with different
    values, but with the same name. The &productname; &dash; uses the same work-around to
    simulate the ability to modify a flavor.</para>
  </note>'>

<!ENTITY instances
'<para>Instances are virtual machines that run inside the cloud. To start
  an instance, a virtual machine image must exist that contains the following
  information: which operating system to use, a username and password with which
  to log in to the &vmguest;, file storage etc. The cloud contains a pool of such
  images that have been uploaded to &img; and are accessible to members of
  different projects.</para> 
   '>
   
 <!ENTITY instance-boot-source  
 '<para>You can launch instances from the following sources:</para>
  <itemizedlist>
   <listitem>
    <para>Images that have been uploaded to &productname;&mdash;see <xref
    linkend="sec.user.dash.inst.launch.img"/>.</para>
   </listitem>
   <listitem>
    <para>Volumes that contain images&mdash;see <xref
    linkend="sec.user.dash.inst.launch.vol"/>.</para>
   </listitem>
   <listitem>
    <para>Instance snapshots&mdash;see <xref
    linkend="sec.user.dash.inst.launch.snap"/>.</para>
   </listitem>
   <listitem>
    <para>Volume snapshots.</para>
   </listitem>
  </itemizedlist>'>  
  
  
<!ENTITY instance-launch-post
'<para>
    After you have launched an instance, switch to the
    <guimenu>Instances</guimenu> category in the &dash;. There, you can view the <guimenu>Instance
     Name</guimenu>, its (private or public) <guimenu>IP address</guimenu>,
    its <guimenu>Size</guimenu>, the <guimenu>Keypair</guimenu> associated
    with it, the image&apos;s <guimenu>Status</guimenu>, its
    <guimenu>Task</guimenu>, and <guimenu>Power State</guimenu>.
   </para>
   <figure>
    <title>&cloud; &dash;&mdash;List of Launched Instances</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="cloud_dash_instances_volumes.png" width="100&#37;" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="cloud_dash_instances_volumes.png" width="80&#37;" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    If you did not provide a keypair on starting and have not touched
    security groups or rules so far, by default the instance can only be
    accessed from inside the cloud via VNC at this point. Even pinging the
    instance is not possible. To change this, proceed with
    <xref
     linkend="sec.user.dash.inst.access"/>.
   </para>'>  

<!ENTITY inst-access-params
 '<para>Access to an instance is mainly influenced by the following parameters:</para>
   <itemizedlist>
    <listitem>
    <para>security groups and rules
    </para>
   </listitem>
    <listitem>
    <para>keypairs
    </para>
   </listitem>
   <listitem>
    <para>
     IP addresses
    </para>
   </listitem>
  </itemizedlist>

  <para>For SSH access to an instance, you usually need to provide a keypair at
   launch time. The security rules need adjustment, too, since the default
   rules block access to SSH ports and prevent pinging an instance. To make the
   instance also accessible from outside the cloud, assign a floating (public)
   IP address.</para>'>


<!ENTITY inst-terminate
' <para>For maintenance reasons, you can pause or suspend images&mdash;provided
    they are running on &kvm; or &xen;. Pausing or suspending avoids the consequences
    that come with terminating an instance. Instances running on &vmware; or
    &hyper; can only be suspended, but not paused.</para>
   <para>If you pause an instance, the content of the virtual machine is stored
    to memory (RAM) and the image is kept running in a <quote>frozen</quote>
    state. When suspending an instance, the content of the virtual
    machine is stored to disk, and memory and VCPUs are freed.
   </para>
   <para>If you need to reboot an instance, you can choose between soft or hard reboot. 
   A soft reboot attempts a graceful shutdown and restart of the instance. A
   hard reboot power cycles the instance.</para>'>

<!ENTITY inst-terminate-warn
'<warning>
    <title>Terminating Instances: Risk of Data Loss</title>
    <para>
     <emphasis>Terminating</emphasis> an instance has the following consequences:</para>
    <itemizedlist>
     <listitem>
      <para>All data on the instance&apos;s root disk and ephemeral disks are destroyed.
       To prevent that, use volumes and attach them to an instance for
       persistent storage.</para>
     </listitem>
     <listitem>
      <para>If a floating IP address was assigned to that instance,
       the IP address is disassociated from that instance. However, it is still available
       in the pool of allocated IP addresses for the current project.</para>
     </listitem>
    </itemizedlist>
   </warning>'>

 <!ENTITY keypairs
  '<para>Keypairs are SSH credentials that are injected into images when they are
    launched. For this to work, the image must contain the <systemitem
    class="resource">cloud-init</systemitem>  package. </para>
    <para>Create at least one keypair per project. If you already have generated
    a keypair with an external tool, you can import it into &ostack;. The keypair
    can be used for multiple instances belonging to that project.
    </para>'>

  <!ENTITY security
   '<para>In &productname;, security groups are used to define which incoming
    network traffic should be forwarded to instances. Security groups hold a set
    of firewall policies (security group rules).</para>'>

  <!ENTITY sec-groups
    '<para> When launching an instance, you need to define which security groups
    it should belong to. A default security group is available for each project.
    It allows all network traffic from other members of this group and discards
    traffic from other IP addresses and groups.</para>

   <para>Multiple security groups for a project can be defined, with each group
    holding a different set of firewall policies. This is useful if you
    have groups of instances that should differ in firewall configuration (for example,
    front-end and back-end servers). An instance can be assigned to multiple
    security groups.</para>'>

   <!ENTITY sec-rules
   '<para>You can adjust rules of the default security group as well as rules of
    any other security group that has been created. As soon as the rules for a
    group are modified, the new rules are automatically applied to all running
    instances belonging to that security group.</para>

    <para>Adjust the rules in a security group to allow access to instances via
    different ports and protocols. This is necessary to be able to access instances
    via SSH, to ping them, or to allow UDP traffic (for example, for a DNS server
    running on an instance).</para>' >

  <!ENTITY sec-rules-params
  '  <para>Rules in security groups are specified by the following parameters:</para>
   <variablelist>
   <varlistentry>
     <term>IP Protocol </term>
     <listitem>
      <para>Protocol to which the rule will apply. Choose between TCP (for SSH), ICMP
      (for pings), and UDP.</para>
     </listitem>
    </varlistentry>
      <varlistentry>
     <term>Port/Port Range</term>
     <listitem>
      <para>For TCP or UDP, define a single port or a port range to open on the
      virtual machine. ICMP does not support ports. In that case, enter values that
      define the codes and types of ICMP traffic to be allowed.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Source of traffic (<guimenu>Remote</guimenu>)</term>
     <listitem>
      <para>Decide whether to allow traffic to instances only from IP addresses
       inside the cloud (from other group members) or from <emphasis>all</emphasis>
       IP addresses. Specify either an IP address block (in CIDR notation) or a security
       group as source. Using a security group as source will allow any instance
       in that security group to access any other instance.</para>
     </listitem>
    </varlistentry>

   </variablelist>'>

  <!ENTITY security-default
  '<para>If no further security groups have been created, any instances are
     automatically assigned to the default security group (if not specified
     otherwise). Unless you change the rules for the default group, those instances
     cannot be accessed from any IP addresses outside the cloud.</para>' >

 <!ENTITY ip-addr
 ' <para>Each instance can have two types of IP addresses: private (fixed) IP
    addresses and public (floating) ones.
    Private IP addresses are used for communication between instances, and public
    ones are used for communication with the outside world. When an instance is launched,
    it is automatically assigned private IP addresses in the networks to which it
    is assigned. The private IP stays the same until the instance is explicitly terminated.
    (Rebooting the instance does not have an effect on the private IP addresses.)
  </para>

   <para>A floating IP is an IP address that can be dynamically added to a virtual  instance.
   In &ostack; &netw;, cloud administrators can configure pools of floating IP addresses. These pools
   are represented as external networks. Floating IP are allocated from a subnet
  that is associated with the external network. You can allocate a certain number of floating
  IPs to a  project&mdash;the maximum number of floating IP addresses per project is defined
  by the quota. From this set, you can then add a floating IP address to an
  instance of the project.
  <!--taroth 2013-07-05: check if to merge with the following, copied from
  http://docs.openstack.org/api/openstack-network/2.0/content/router_ext_concepts.html:

    A floating IP is an IP address on an external network, which is associated with a specific port, and optionally a
    specific IP address, on a private OpenStack Networking network. Therefore a floating IP allows
    access to an instance on a private network from an external network. Floating IPs can only be
    defined on networks for which the attribute router:external has been set to
    True.-->
  </para>'>

  <!ENTITY ip-allocate
   '<para>Before you can assign a floating IP address to an instance, you first
     need to allocate floating IPs to a project.</para>'>

  <!ENTITY ip-assign
  '<para>After floating IP addresses have been allocated to the current project,
    you can assign them to running instances. One floating IP address can be
    assigned to only one instance at a time.
   </para>'>

  <!ENTITY ssh-req
  '<para>
     To access an instance via SSH, the following requirements need to be
     fulfilled:</para>
    <itemizedlist>
     <listitem>
      <para>
       <systemitem class="daemon">sshd</systemitem> must be running
       inside the virtual machine.</para>
     </listitem>
     <listitem>
      <para>Port <literal>22</literal> must be open in the virtual
      machine&apos;s firewall.</para>
     </listitem>
     <listitem>
      <para>The security group which the instance is assigned to, must be configured
       to allow SSH access.
      </para>
     </listitem>
     <listitem>
      <para>To enable SSH access from outside the cloud, a floating IP
       address must be assigned to the instance. </para>
     </listitem>
     <listitem>
      <para>You must know the private or public IP address of the instance.</para>
     </listitem>
    </itemizedlist>'>

 <!ENTITY inst-snap
 '<para>&cloud;&apos;s snapshot mechanism allows you to create new images from
   running instances. This is convenient for upgrading base images or taking a
   published image and customizing for local use. Instance snapshots preserve the
   disk state of a running instance. Ephemeral disks are not included in any
   snapshots. You can launch a new instance from a snapshot. </para> '>

 <!ENTITY volumes
  '<para>Volumes are block storage devices that can be attached to instances. They
  allow for persistent storage as they can be attached to a running instance
  (or detached and attached to another instance at any time). In contrast to the
  instance&apos;s root disk, the data of volumes is not destroyed when the instance
  is terminated.</para>'>

 <!ENTITY vol-attach
  'After having created one or multiple volumes, you can attach them
  to instances. A volume can only be attached to one instance at a time.'>

 <!ENTITY vol-snap
'<para>Volume snapshots preserve the state of an attached block storage device.
   They are read-only point in time copies of a volume.
   You can also create a new volume based upon a volume snapshot.
 </para>
  <note><title>Consistency of Snapshots</title>
  <para>To prevent data corruption in snapshots, only take snapshots from
  volumes that are not currently written to.</para>
  <para>While the <option>--force</option> option of the
  <command>cinder</command> command line tool allows
  creation of snapshots while they are attached to an instance,
  the &dash; currently does not allow you to do so. </para>
  </note>'>

 <!ENTITY quotas
 '<para>To prevent system capacities from being exhausted without notification,
   cloud administrators can set up quotas. 
   In &ostack;, quotas are currently
   defined per project. 
   <!--The default quotas that are initially applied to each project
   are specified in <filename>/etc/nova/nova.conf</filename> on the &contrnode;. For a
   description of the configuration options for quotas in that file, refer to
   <ulink
   url="http://docs.openstack.org/grizzly/openstack-compute/admin/content/list-of-compute-config-options.html"/>.
   For details about how to change the default values in
   <filename>nova.conf</filename>, refer to
   <ulink url="http://docs.openstack.org/grizzly/openstack-ops/content/projects_users.html#quotas"/>.-->
   The available quota parameters belong to several &ostack; services: &ostack;
   &comp;, &ostack; &blockstore;, and &ostack; &netw;.
   </para>'>

   <!ENTITY quota-params
   '<para>
  The following table shows the available quota parameters and the
   respective &ostack; service they belong to. The quota parameters are listed
   with the names by which they appear in the &ostack; command line tools. Their
  names in the &productname; &dash; are mostly similar, with the exception that
  <systemitem>cores</systemitem> is called <guimenu>VCPUs</guimenu> in the
   &dash;.</para>
  <!--vuntz 2014-01-20: I think the fixed-ips quota is gone, and floating-ips is now networking.
    Also, unless I am mistaken, the security group and security group rules
    quota are now part of networking, not compute.
   (In general, see the output of "neutron help quota-update", same command
    for nova and cinder)-->
  <!--taroth 2014-01-21: indeed, the Quota tab in Horizon (Manage Projects
    dialog) and "neutron help quota-update" do no longer show fixed IPs -
    however,  "nova help quota-update" still lists them...-->
  <table>
   <title>Quota Parameters</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>
       <para>
        Name
       </para>
      </entry>
      <entry>
       <para>
        Description
       </para>
      </entry>
      <entry>
       <para>
        &ostack; Service
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <!--Compute-->
     <row>
      <entry>
       <para>
       cores
       </para>
      </entry>
      <entry>
       <para> Number of instance cores (VCPUs) allowed per project. </para>
      </entry>
      <entry>
       <para>&comp; </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>injected-files
       </para>
      </entry>
      <entry>
       <para>Number of injected files allowed per project.</para>
      </entry>
      <entry>
       <para> &comp;</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>injected-file-content-bytes
       </para>
      </entry>
      <entry>
       <para> Number of content bytes allowed per injected file. </para>
      </entry>
      <entry>
       <para>&comp; </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>injected-file-path-bytes
       </para>
      </entry>
      <entry>
       <para>  Number of bytes allowed per injected file path.  </para>
      </entry>
      <entry>
       <para>&comp; </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>instances
       </para>
      </entry>
      <entry>
       <para>Number of instances allowed per project. </para>
      </entry>
      <entry>
       <para>&comp;</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>metadata-items
       </para>
      </entry>
      <entry>
       <para>Number of metadata items per instance.</para>
      </entry>
      <entry>
       <para>&comp;</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>ram
       </para>
      </entry>
      <entry>
       <para>Total RAM size of all instances, measured in megabytes.</para>
      </entry>
      <entry>
       <para>&comp;</para>
      </entry>
     </row>
     <!--Networking-->
     <!--taroth 2014-01-21: commenting due to info by vuntz, see comment above table
     <row>
      <entry>
       <para>fixed-ips
       </para>
      </entry>
      <entry>
       <para>Number of fixed IP addresses allowed per project. This number must
        be equal to or greater than the number of allowed instances. </para>
      </entry>
      <entry>
       <para>&netw;</para>
      </entry>
     </row>-->
     <row>
      <entry>
       <para> floating-ips
       </para>
      </entry>
      <entry>
       <para>Number of floating IP addresses allowed per project.</para>
      </entry>
      <entry>
       <para>&netw;</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>networks
       </para>
      </entry>
      <entry>
       <para>Number of networks allowed per project.</para>
      </entry>
      <entry>
       <para>&netw;</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>ports
       </para>
      </entry>
      <entry>
       <para>Number of ports allowed per project.</para>
      </entry>
      <entry>
       <para>&netw; </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>routers
       </para>
      </entry>
      <entry>
       <para>Number of routers allowed per project.</para>
     </entry>
      <entry>
       <para>&netw; </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>security-group-rules
       </para>
      </entry>
      <entry>
       <para> Number of security rules per security group.</para>
      </entry>
      <entry>
       <para> &netw;</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>security-groups
       </para>
      </entry>
      <entry>
       <para>Number of security groups.</para>
      </entry>
      <entry>
       <para>&netw;</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>subnets
       </para>
      </entry>
      <entry>
       <para>Number of subnets allowed per project.</para>
      </entry>
      <entry>
       <para> &netw;</para>
      </entry>
     </row>
     <!--Block Storage-->
     <row>
      <entry>
       <para>gigabytes
       </para>
      </entry>
      <entry>
       <para>Total size of all volumes, measured in gigabytes.</para>
      </entry>
      <entry>
       <para> &blockstore;</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>snapshots
       </para>
      </entry>
      <entry>
       <para>Volume snapshots allowed for each project.</para>
      </entry>
      <entry>
       <para>&blockstore;</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>volumes </para>
      </entry>
      <entry>
       <para>Number of volumes allowed per project.</para>
      </entry>
      <entry>
       <para>&blockstore; </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>'>


<!ENTITY note-groups-delete
' <note>
   <title>Deleting Security Groups</title>
    <para>The default security group for a project cannot be deleted.</para>
    <para>If another group cannot be deleted, it is because it is still assigned
    to a running instance.</para>
  </note>'>

<!ENTITY no-ceph-support
'  <important>
    <title>&ceph; is Not Supported</title>
     <para>
      &ceph; is included in &productname; &productnumber; as a technology
      preview. You may use &ceph; in test environments but it is not
      recommended for production.
     </para>
    </important>'>

<!ENTITY l3-network-support
'  Other, more flexible network mode setups can be configured by manually
  editing the &crow; network configuration files. See
  <xref linkend="app.deploy.network_json"/> for more information. &suse;
  can assist you in creating a custom setup within the scope of a Level 3
  support contract.'>

<!ENTITY openstack-python-tools
' <para>Use the &ostack; command-line clients to run simple commands
  that make API calls. You can use these commands in scripts to automate tasks.
   Each &ostack; service has its own command-line client, that runs on Linux* or
   Mac OS* X systems.  For some client commands, you can specify a debug
   parameter to show the underlying API request for the command.</para>

   <para>The following command line clients are available for the respective
   services&apos; APIs. </para>

 <variablelist>
  <varlistentry>
    <term>
     <command>ceilometer</command>
    </term>
    <listitem>
     <para>For managing &ostack; &meter;. Provided by the
     <systemitem class="resource">python-ceilometerclient</systemitem> package.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>cinder</command>
    </term>
    <listitem>
     <para>For managing  the block storage. Provided by the
     <systemitem class="resource">python-cinderclient</systemitem> package. </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>glance</command>
    </term>
    <listitem>
     <para>
      For managing images. Provided by the
      <systemitem class="resource">python-glanceclient</systemitem> package.
     </para>
    </listitem>
   </varlistentry>
    <varlistentry>
    <term>
     <command>heat</command>
    </term>
    <listitem>
     <para>For managing &ostack; &orch;. Provided by the
     <systemitem class="resource">python-heatclient</systemitem> package.
      </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>keystone</command>
    </term>
    <listitem>
     <para>
      For managing users, projects, roles, endpoints, and credentials.
      Provided by the
      <systemitem class="resource">python-keystoneclient</systemitem>
      package.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>neutron</command>
    </term>
    <listitem>
     <para>For configuring networks for guest servers. Provided by the
     <systemitem class="resource">python-neutronclient</systemitem> package.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>nova</command>
    </term>
    <listitem>
     <para>
      For managing images, instances, and flavors. Provided by the
      <systemitem class="resource">python-novaclient</systemitem> package.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <command>swift</command>
    </term>
    <listitem>
     <para>For gathering statistics, listing items, updating metadata, and managing files stored by
      the &objstore; service. Provides access to a swift installation for ad hoc processing.
      Provided by the
     <systemitem class="resource">python-swiftclient</systemitem> package.</para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>Most of them have tab completion.</para>
  <para>
   Help and detailed information about the individual commands and their
   arguments are available with</para>
   <screen><replaceable>COMMAND</replaceable> help</screen>
  <para>For help on subcommands, use</para>
  <screen><replaceable>COMMAND</replaceable> help&nbsp;<replaceable>SUBCOMMAND</replaceable>&nbsp;</screen>
  <para>For example: <command>glance&nbsp;help</command> or
   <command>glance&nbsp;help&nbsp;image-create</command>
   </para>'>

<!ENTITY quantum-descr
'<para>&ostack; &netw; lets you configure rich network topologies by creating and configuring networks and
subnets, and then instructing other &ostack; services like &comp; to attach
virtual devices to ports on these networks. In particular, with &ostack; &netw;,
each tenant can have multiple private networks. Tenants are also able to choose their own IP
addressing scheme, even if those IP addresses overlap with those used by other tenants.
This enables advanced cloud networking use cases, such as building multi-tiered
Web applications. Applications can be migrated to the cloud without changing IP
addresses.</para>'>

 <!ENTITY migration
 ' <para>The term <literal>migration</literal> in &ostack; refers to the
    process of moving a virtual machine instance from one &compnode; to
    another. &ostack; discriminates between two types of migration:</para>
   <variablelist>
    <varlistentry>
     <term>Offline (Non-live) Migration</term>
     <listitem>
      <para>
       The instance will be shut down in order to be moved to another
       &compnode;, leading to instance downtime and all consequences of
       shutting down an instance. The destination of the instance cannot be
       defined by the cloud administrator, instead it is picked by the nova
       scheduler.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Live Migration</term>
     <listitem>
      <para>
       <remark>taroth 2013-09-09: DEVs, is the following correct?</remark>
       During the move to another &compnode; there is only very little
       downtime of the virtual machine instance. However, if the default
       configuration options in &ostack; &comp; are used, the instance
       will be suspended before migration.<remark>vuntz 2014-01-20:
       This needs to be clarified a bit, as I think that, at least when using
       KVM, we use the true migration (with no suspend):
       http://docs.openstack.org/havana/config-reference/content/configuring-openstack-compute-basics.html#section_configuring-compute-migrations
       You should probably double-check with Dirk.</remark> When executing a live migration, the
       cloud administrator has to select to which &compnode; to move the
       instance.</para>
      <para>For live migrations, we need to discriminate between the following
      scenarios:</para>
      <itemizedlist>
       <listitem>
        <para>Live migration on shared storage. In this case, both &compnode;s have access
         to a shared storage. </para>
       </listitem>
       <listitem>
        <para>Live migration without shared storage (block migration). In this
         case, no shared storage is required.</para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>&ostack; only supports migration to a different &compnode; that runs the
   same hypervisor&mdash;cross-hypervisor migration is not supported.</para>'>


 <!ENTITY network-options
 '<para>When creating a network, you can set the following options: </para>
   <variablelist>
    <varlistentry>
     <term>Admin State (<literal>admin_state_up</literal>)</term>
     <listitem>
      <para>The administrative state of the network. The default value is <literal>true</literal>.
       If set to <literal>false</literal>, the network is down and does not forward any
       packets.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Shared (<option>--shared</option>)</term>
     <listitem>
      <para>Specifies if the network resource can be accessed by any project or not. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>External (<option>--router:external</option>=True)</term>
     <listitem>
      <para>Used for pools of floating IPs, and to create routers that allow access to external
       networks (and the Internet) from private neutron networks.</para>
     </listitem>
    </varlistentry>
   </variablelist>'>

<!ENTITY network-role-dependency
'  Certain parts of managing networks are only available to cloud
   administrators: for example, creating or modifying external and
   shared networks. The deletion of shared and external networks
   is also limited to administrators only, as is the creation of ports.
   However, networks as such, subnets, and routers can be created
   by any user&mdash;of course, only for the respective projects that
   the user belongs to.'>

<!ENTITY network-def
'<para>
    In the &ostack; &netw; API, a network is an isolated L2 network segment
    (similar to a VLAN). It forms the basis for describing the L2 network
    topology in a given &ostack; &netw; deployment.
   </para>'>

<!ENTITY no_network_changes
' <warning>
    <title>
     No Network Changes After Having Run the Cloud Installation Script
    </title>
    <para>
     Once you have run the cloud installation script, you cannot change the
     network setup anymore. If you did, you would have to completely set up
     the &admserv; again.
    </para>
   </warning>'>

<!ENTITY note-network-delete
 ' <note>
       <title>Deleting Networks</title>
       <para>If a network cannot be deleted (although you have the respective permissions to delete
        it), it is because it still has ports assigned: either from a router or from a running VM
        instance.</para>
      </note>'>

 <!ENTITY subnet-intro
 '<para>
    A subnet is a block of IP addresses and other network configuration (for
    example, a default gateway, DNS servers) that can be associated with an
    &ostack; &netw; network. Each subnet represents an IPv4 or IPv6 address
    block. Multiple subnets can be associated with a network, if necessary.
   </para>
   <para>
    By default, the first IP address of the specified network address is
    used as Gateway (for example, if you specified
    <literal>192.168.0.0/24</literal> as network address,
    <literal>192168.0.1</literal> is used as gateway).
   </para>'>

<!ENTITY port-dash-automatics
 '<para>Usually, you do not need to create or modify ports manually as described below. In most
    cases, &ostack; will take care of that automatically (for example, when an instance is
    launched, a floating IP is associated, or a router interface is
    created).</para>'>

 <!ENTITY port-intro
  '<para>
    A port is an attachment port to a L2 &ostack; &netw; network. When a
    port is created on the network, it will be associated with a security
    group. If no security group is specified, it will be associated with a
    default security group. By default, the port will be allocated an
    available fixed IP address out of one of the designated subnets for each
    IP version. Users of the &ostack; &netw; API can either choose a specific IP
    address from the block, or  let &ostack; &netw; choose the first available IP address.
    When the port is destroyed, the allocated addresses return
    to the pool of available IPs on the subnet(s).
   </para>'>

 <!ENTITY router-intro
 ' <!--taroth 2013-09-13:  the following is taken from
   http://docs.openstack.org/api/openstack-network/2.0/content/router_ext_concepts.html-->
 <para>A router is used to interconnect subnets and forward traffic among them.
    Another feature of the router is to NAT internal traffic to external
    networks. A router has an interface for each subnet it is associated
    with. By default the IP address of such interface is the subnet&apos;s
    gateway IP. Also, whenever a router is associated with a subnet, a port
    for that router interface will be added to the subnet&apos;s network.
   </para>'>


<!ENTITY network-ostack-guide
  '<para>For more information and example network setups, refer to the &ostack;
   <citetitle>Networking Administration Guide</citetitle> at <ulink
    url="http://docs.openstack.org/grizzly/openstack-network/admin/content/"></ulink>.
    </para>'>
    
 <!ENTITY note-change-keypairs
' <!--taroth 2013-09-17: fix for bnc#839364 and bnc#839721-->
   <note>
    <title>Removing Former Keypairs</title>
    <para>After an instance has once been launched with a certain keypair (that is injected into the
     respective image by <filename>cloud-init</filename> during start), the keypair will stick to
     that instance. Unless you remove the former keypair from the instance it is 
     impossible to restart the instance with a different keypair than the original one. This is also
     true for snapshots taken from an instance. </para>
    <para>Run the following command within the instance to remove the former data (for example, to
     prepare an instance for a snapshot):</para>
    <screen>rm -rf /var/lib/cloud/instances/*</screen>
    <para>After the clean-up, a new keypair can be injected into the instance.</para>
    <para>To change keypairs on a running instance, access the instance via SSH and replace the
     respective key by editing the file 
      <filename>/root/.ssh/authorized_keys</filename>.</para>
   </note>'>
   
 <!ENTITY  diff-snapshot-image
 ' Technically, an instance snapshot is an image, too
      and is automatically uploaded to Glance. It is accessible only for the
      members of the project for which it was created. The only 
      difference compared to an image that has been directly uploaded to 
      &ostack; &img; is the following: images created by snapshots have 
      additional properties in the &o_img; database.'>
      
 <!ENTITY note-hyperv-flavor
 ' <note>
      <title>&hyper; and <literal>m1.tiny</literal> Flavor</title>
      <para>Do not use the <literal>m1.tiny</literal> flavor for instances running on &hyper;.
       Usually, &ostack; &compnode;s interpret a disk size value of <literal>0</literal> as
        <quote>do not resize root disk</quote>. However, &hyper; &compnode;s interpret the
       value <literal>0</literal> literally and will therefore try to shrink the disk to
        <literal>0</literal> and fail.</para>
     </note>'>
     
 <!ENTITY note-kvm-device-name
'<note>
     <title>KVM and Device Naming</title>
     <para> If you are using KVM as hypervisor, the resulting device name in the guest may be
      different than the one specified in the &dash; or in the
      <command>nova&nbsp;volume-attach</command> command. The device will be attached to the
      guest over a virtual PCI bus. When the guest sees a new device on the PCI bus, it picks the
      next available name, which is <filename>/dev/vdc</filename> in most cases. For
       <literal>m1.tiny</literal> flavors the volume is typically attached as
       <filename>/dev/vdb</filename> because it does not have a second
      local disk, unlike the other flavors.</para>
    </note>'>
